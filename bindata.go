// Code generated by go-bindata.
// sources:
// config.yaml
// templates/api.gotmpl
// templates/config.gotmpl
// templates/parameter.gotmpl
// DO NOT EDIT!

package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _configYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x92\x4f\x4b\xc3\x30\x18\xc6\xef\x7e\x8a\x97\x9e\xb6\x83\x9d\xe7\xde\x04\x15\x14\x94\x81\xbb\x6f\xaf\xed\xd3\x18\x97\x7f\x24\x99\xa2\x25\xdf\x5d\x9a\x6e\x93\x4d\xd1\x0d\xd9\xed\x6d\xd3\xdf\xd3\x5f\x9e\x44\xf1\xbb\x5d\xc5\xea\x8c\x88\x9d\x53\xb2\xe6\x28\xad\xe9\x1f\x89\xce\xc9\xb0\x46\x45\xb5\x35\xad\x14\x2b\x8f\xfc\x96\x28\xd8\x95\xaf\x51\x51\xd1\x75\x54\xce\xb4\xbb\x92\x9e\x52\x9a\x44\x68\xa7\x38\x22\x4c\x06\xa0\x14\x36\x6a\xa7\x8a\x35\x15\xd9\x0b\xc4\x4c\x2d\xba\x8e\x5e\xac\x34\x37\x52\x61\xca\xf1\x99\xca\x59\x5e\xa4\xf2\x11\xfe\x15\x7e\xca\xf5\x92\x05\x28\xa5\x45\x4a\x1b\xbe\x95\x0a\xf3\x41\xa8\xd8\xfe\xa0\xd8\x11\x85\x7e\x42\xd3\xa0\x99\x07\x87\x7a\x4f\x96\x43\x40\xac\xc2\x1b\x0b\x01\x7f\x17\xac\xb9\xee\x3f\x3e\x81\xdb\x8e\xc4\x37\xc5\x90\x43\x0e\x2d\x92\x9d\x3c\x61\x8b\x43\x7a\xbf\xa2\x6d\x03\x15\x76\x4f\xbd\x41\x2b\x8d\xec\x6f\xc3\x8f\x4d\x66\xe4\x18\xa9\xfb\x1e\xf8\xd3\x69\x48\x18\x05\xc3\x4b\xf9\x01\x1a\x39\x0e\x35\xab\x7e\x2c\x1f\x58\x63\x3c\x1e\xd0\xb5\xb7\x75\xf0\xf9\xc2\xee\xb9\x3b\xf6\xac\x11\xe1\xc3\xa1\x4d\x6f\x89\xdf\xfb\x96\x2d\x89\x48\x23\x05\xd3\x6f\x4c\x84\x31\x5d\x50\x4a\x07\x1e\x44\x79\x39\xbd\xdd\xce\x9b\x61\xc0\xa1\x02\x8e\x08\xda\x83\x4d\xf3\xef\x42\xe7\x5f\x95\xe5\x6e\x3f\x03\x00\x00\xff\xff\x82\x4f\xcf\x1e\x17\x04\x00\x00")

func configYamlBytes() ([]byte, error) {
	return bindataRead(
		_configYaml,
		"config.yaml",
	)
}

func configYaml() (*asset, error) {
	bytes, err := configYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config.yaml", size: 1047, mode: os.FileMode(420), modTime: time.Unix(1502823114, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesApiGotmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x58\x5f\x73\xdb\x36\x12\x7f\x26\x3f\xc5\x96\x93\xa4\xa4\x47\xa1\xda\x3e\x6a\xce\x0f\xa9\x93\xa6\xbe\x3a\xa9\xc7\x52\xae\x8f\x2d\x4c\xae\x28\x9c\x29\x80\x05\x40\xcb\x0a\x87\xdf\xfd\x66\x17\x20\x45\xc9\xaa\xdb\xf3\x83\x45\x02\xfb\x0f\xbb\xbf\xfd\x03\x36\xa2\x78\x10\x15\x42\xd7\x41\xfe\xee\xf6\xfa\x36\xbc\xf6\x7d\x1c\xcb\x6d\xa3\x8d\x83\x34\x8e\x92\x42\x2b\x87\x4f\x2e\x89\xa3\x44\xa1\x9b\x6f\x9c\x6b\xe8\x59\x5b\xff\x7f\x6e\x65\xa5\x44\x4d\x2f\x76\x6f\x0b\x51\xf3\xa3\x93\x5b\xe4\x25\x67\xa4\xaa\x6c\x12\xc7\x51\x52\xe9\x5a\xa8\x2a\xd7\xa6\x9a\x3f\xcd\xb5\x68\xdd\xe6\x07\xbf\x2e\xdd\xa6\xbd\xcf\x0b\xbd\x9d\x57\x52\xbd\x25\x7d\x46\xde\xcf\x9b\xc6\xe8\x75\xf2\x7c\xbf\xd2\x4a\x16\xf4\x94\xc4\x51\x25\x95\x17\x04\x53\xaa\xaf\xa2\x16\xaa\xd4\x4c\x3d\xe8\x39\x12\xb3\x95\x0f\x0f\x58\x6b\x5b\x08\xc3\x44\x76\x27\xaa\x0a\xcd\x7c\x2b\xcb\xb2\xc6\x9d\x30\xf8\x0f\x19\x44\x23\x93\x38\xaa\x75\x75\xa4\xdf\x4a\xd3\x36\x16\xd5\xbc\xd6\x95\x69\xc9\x4f\x5d\x67\x84\xaa\x10\xf2\xf7\xb8\x16\x6d\xed\xae\xd9\xbd\xb6\xef\xbb\xae\x31\x52\xb9\x35\x24\xaf\xff\x4c\x20\xef\x7b\xa2\x45\x55\xfa\x07\xcf\xf4\xea\x01\xf7\x33\x78\xf5\x28\xea\x16\x61\x71\x09\xf9\x84\x9b\xf6\xfa\x9e\x22\x38\x95\xe3\x69\xa7\xc2\xb2\x38\x9e\xcf\xe1\x4e\xb7\x0e\x2d\x94\xb8\x96\x0a\x2d\x88\xba\x06\xb7\x41\x30\x7e\x59\xaf\xf9\xed\xdd\xed\x35\x58\x34\x8f\xb2\xc0\x3c\x76\xfb\x06\x07\x36\xeb\x4c\x5b\x38\xe8\xe2\xe8\xa2\x92\x2a\xff\xa0\x2a\xa9\x70\x72\xb6\x5f\x1b\x34\xc2\x49\xad\xd8\x32\x68\x04\xa1\x41\x7e\x45\xc8\x3f\x8b\x2d\xc1\x6a\x22\xc1\x8b\x60\xc1\xe6\xa3\xd1\x6d\x13\x47\x51\xd7\x81\x5c\x43\xfe\xae\x75\x1b\x6d\xe4\x57\x2c\xa1\xef\xe9\x05\x88\xf4\x67\xa1\xca\x1a\xcd\x4f\xad\x2a\xe2\x70\xa8\x28\xba\xd5\xd6\xc1\x73\x49\xfd\x40\x11\xf7\x7c\xec\x42\xab\xb5\xac\x5a\x83\xbf\x61\x5d\xff\xa2\xf4\x4e\x01\x2a\x71\x5f\x93\x0b\x54\x79\xd8\xb6\x30\xcf\x77\x58\xd7\x6f\x1f\x02\x4d\xd9\x68\xa9\x9c\xcd\xe3\x75\xab\x0a\x48\x0d\x5c\x78\x57\x64\x67\x44\xa6\x1b\x14\xb5\xdb\x90\x81\x40\xe4\x69\x06\xf7\x5a\xd7\x19\x9d\x76\x37\xea\x5d\x5c\x82\xc9\xd9\xcc\x34\x99\x2a\x4b\xb2\x38\x22\xb7\x8c\x94\xf9\xc7\x0f\xab\x34\x99\xdb\x62\x83\x5b\xf1\xb6\x94\xb6\xd0\x8f\x68\xf6\xc9\xcc\x0b\x2f\xdc\x93\x3f\xf8\x95\xcf\x4e\x56\x13\x45\x23\x1d\x29\x9a\x78\x3b\x8a\x96\x2c\xe8\xcb\xdd\x0d\x80\xcf\x49\xf8\xe3\xbf\x56\xab\x45\xe2\x35\xfc\xde\x9a\x3a\xf9\x63\x42\xb9\xa2\xc0\x9f\xa5\x24\x48\x04\xd2\x2f\xd7\x2c\x90\xfe\x8e\x49\x5b\x79\x10\xd8\x9f\x18\xb0\x00\x48\xe6\x21\x81\x72\x22\x4f\x66\x27\x7a\x17\x90\x84\xfd\xb7\x3f\xe4\xdf\xf9\xed\x9e\xfe\x15\xee\x29\xff\xf7\xf2\xd7\xcf\x29\x15\xa1\x7c\xe9\x84\x6b\xed\xaf\xbf\xcc\xe0\xcd\x78\xee\x2c\x8e\xa2\x3e\x3b\xe3\x48\x1f\x9d\x64\x06\xfe\x21\xc0\x69\x12\xb4\x2c\x23\xe0\xc4\x91\x19\x3c\x7f\x64\xe1\x4b\x5e\x27\xab\x96\x7c\xfc\x53\xbb\xbc\x53\xd2\xa5\x17\x45\x96\xb3\x96\x2c\xe0\xf2\xc8\x14\x90\x96\xd3\xcf\x2f\xc2\xcf\xab\xd5\x2d\x6c\xc2\x56\x6b\xb1\x84\xb5\x36\x4c\x30\x85\x4d\x38\x16\x09\xe3\x24\xa6\x04\xf2\xd0\x2e\x03\x68\xff\xea\xb8\xc7\x18\x3d\xc9\x30\x3a\x96\x27\x65\x20\x1d\xb8\xe2\xc8\xa0\x6b\x8d\x7a\x11\x84\xe1\x04\xa7\x08\xfc\xd9\x2f\x93\xc2\x01\x26\x21\x28\x53\x98\x78\xaa\x45\xd0\xb9\x4f\xb3\x10\x7d\xfa\x2f\xd7\xf0\x8d\x5f\xcf\x83\x30\xcf\x73\x0e\x16\x4b\x5f\xc1\xbe\x28\xf1\x28\x64\x4d\x1e\x99\xc1\x1b\xcf\x9c\xb1\x44\xc0\xda\xe2\x0b\x02\x18\x57\x53\x06\x82\x87\x8f\x5b\x90\x3d\x44\x4c\x2a\x87\x66\x2d\x0a\x04\xb7\x11\x0e\xb6\xad\x75\x70\x8f\x20\xb7\x4d\x8d\x5b\x54\x0e\x4b\x90\x0a\xb4\x29\xd1\x80\xd3\xd0\x18\xfd\x28\x4b\x24\x41\xf7\xad\xa5\x42\x6c\xa1\xd6\x95\x2c\xc6\x08\x3f\xaf\xc0\xa3\xc6\x51\x55\x17\x07\x57\xed\x43\x10\xff\x9f\x42\xfc\x2c\x72\xa1\xf4\xde\x0a\x23\xb6\x16\xfa\x7e\x06\x8d\x7f\xbc\xe8\xba\x3c\xcc\x05\x7d\x9f\x9f\x15\xe6\x99\xba\x8e\xea\x25\xf4\x7d\x06\x17\xa2\x91\xf9\x1d\xda\x46\x2b\x8b\xd3\x52\xcc\x80\xac\xa4\x92\x5f\xf1\x56\xb8\x4d\xda\x08\xb7\x09\x39\x92\x0d\x05\xa4\x1b\x21\x16\x46\x87\xfc\x0e\x9b\x5a\x14\x98\x9e\xbe\x13\xf7\x0c\x92\x2e\x99\x41\xb2\x48\x66\xf0\xf6\xfb\x6c\x06\x49\x4f\xaf\xfe\xed\xb4\xfa\x87\x36\x36\x29\xf7\x93\xe6\x77\xd6\xf7\x6c\xf0\x09\x7f\x1a\x76\x87\x98\xcc\x42\xc2\x71\xa7\xa2\x40\xcc\xc0\xe9\x07\x54\x54\x19\x87\xb3\x85\xb6\x41\x87\x43\xee\x9a\x94\x1c\xe4\xfe\xcf\xb8\x4b\xb3\x61\x31\xff\x62\x31\xe5\x66\x86\xbe\x98\xa5\xd9\xf1\xde\x61\x3c\xc9\x6f\x78\xb2\xb8\xd1\x54\x57\x98\x2c\x1c\x63\x71\x09\x6f\xbc\xb2\xce\xf7\xe7\x05\x78\x01\x94\x41\x67\x01\xe2\x19\xcf\x87\x76\xda\x56\xe1\x32\xb8\x6a\x68\x5f\xdc\xb2\x18\x37\x0a\x21\xff\x84\x6e\xa3\x4b\x48\x3e\x7e\x58\x25\xf0\xcf\xa5\x9e\x9e\x8b\xf1\xa8\x1c\x75\x01\x9b\x8e\x03\x90\x54\x25\x3e\xcd\xe0\x95\xdb\x37\x3c\x00\x5d\x69\x65\xdb\x2d\xda\x4f\x58\x4a\xee\x18\x0c\x74\xb9\x0e\x94\x7d\x3f\x0b\xa8\x4b\xba\x8e\x98\xf8\x81\x17\xb2\x2c\x1e\x91\x7a\x76\xe0\x18\x0b\x28\xc7\xb3\xf3\x63\xc9\x2b\x3e\x0e\x9b\xbf\xb8\x84\xf4\xe4\x48\x19\x4d\xcc\x9e\xce\x62\xd1\x1a\xe9\xf6\xef\x69\xc2\x92\xec\x61\x36\x78\x79\x66\x7d\x60\x0a\x31\x19\x48\x80\x73\xf6\x55\x89\x6b\xe2\xe4\xf3\x9c\x97\x3b\xb8\x73\x9c\x9c\xf0\x4f\x66\x1b\x25\x71\x43\xc5\x5b\xa3\x1b\x9b\x73\x3b\x4f\xc2\x30\xec\x99\xf8\x4c\xab\x01\xaa\x8b\xcb\x11\xb6\x31\x57\xda\xe3\xed\xcb\x4b\x48\x12\x5f\x2d\x4f\x36\xe0\x78\x84\xfd\x6b\x0b\x02\x07\xeb\x1e\xf5\x33\x44\x26\xee\xed\x7b\x0e\x07\x70\x7a\x78\x73\x79\x21\x25\xcd\x13\x9c\x2c\x0b\xdd\xa0\xe5\x9d\x67\x28\xb1\xb4\xe7\xdd\xce\x54\x2f\x60\x83\x49\x27\xe8\xe0\x66\x13\xd4\x7e\x08\xe3\x9f\x6f\x11\x83\xf9\x8b\x63\xc7\xf8\xee\x44\xff\x33\x1f\x07\x0f\xad\x17\x8e\x77\x0a\xfe\x97\xdc\x70\x22\x73\x9c\x6b\xa3\x17\xd3\x8b\xa7\xe2\x31\x5b\xcf\xd3\x4c\x72\xf8\x6f\x65\xe5\x5d\x17\xd2\xbb\xef\xd3\x49\xf9\x3e\xb9\xbb\xd0\x1a\xb9\x10\x8e\x5a\xc6\x8f\xa1\xc5\xdd\x50\x87\x3b\xdf\x8c\x86\x72\x7b\x76\x37\xcb\xe2\xb1\x85\x0c\x9d\xc1\x5b\x1c\xca\x3b\x15\xec\xe1\x42\x73\xbe\x79\xf2\xca\x38\x89\x84\x52\x1c\x4a\x72\x1c\xf9\xf2\x0e\x17\x57\xfc\x1b\x47\xc4\x8b\x06\x2e\xfc\x28\xc0\x2f\x71\xb4\x92\xae\x1e\xc6\xe1\x38\xfa\x0f\x1a\x2b\xf5\xd0\xa1\x82\x1d\x9f\x71\x47\x8a\x38\x3d\xf9\x08\x16\x04\x28\xdc\x9d\xe9\x28\x9e\x34\xb5\x8f\xc5\xa1\x89\x1c\x9b\x91\xc1\x05\xb1\x75\x31\xcf\x3c\x7e\x2f\x7f\x8f\xf7\x2d\x37\x48\xba\xf6\xe6\x4b\x74\x9f\x74\x39\x34\x8c\x1a\x85\x45\x7a\x0f\x53\xac\x68\x24\xf7\x82\x77\xb7\xd7\xc4\xe0\x0f\xbb\x78\xde\xcb\x1e\x8b\xd9\x28\x9f\x10\xf7\x5e\x5a\x9e\x1e\x07\x83\xc6\xb4\xe5\xd4\xf0\x6b\x83\x18\x5a\x61\xc7\x2c\x20\xe9\x3a\xc8\xaf\xd5\x5a\xe7\xde\x53\x7d\xcf\x53\x7b\x70\xd4\x74\x7f\xf0\x9d\xa7\x20\x53\xe7\xf3\x50\x71\x81\x6f\xfc\x40\x8e\x3f\xdc\xbd\x68\x74\x2a\xf9\xe0\x5b\x5d\x22\xfb\xe3\x99\x3b\x98\x2f\xbf\xc3\x4a\x5a\x87\x26\xe5\xf1\xc3\x83\xda\xf7\xc0\x19\x28\x59\x67\xa3\x36\x8b\x0e\xfc\xcd\x9c\x7e\x2a\x3f\x95\xad\xf0\xc9\xfd\xa4\xcd\x56\x38\x87\x06\x76\xd2\x6d\x40\x69\x28\x74\xad\x8d\xe5\x1b\x3e\x39\x7c\x24\x48\xdf\xd0\xca\x11\x4f\x17\x5c\x77\xc5\x2c\x0b\x70\xa6\xc5\x3e\xf3\xa1\xc8\x03\xa8\x2e\xe1\xcd\x04\x56\x64\xfa\xbb\xb2\x34\x0b\x18\xfe\x86\x40\x94\xa5\x41\x6b\xc9\x83\x61\x28\x0f\x24\xcf\x4f\x46\xb1\x45\x51\xae\xe4\x16\x75\xeb\x16\x00\xdf\x7f\x07\x17\xe0\xe4\x16\xa9\x08\x6b\x55\x12\xc5\x6f\x46\x3a\x1c\x49\xce\x50\x90\x63\x26\x40\x1b\xef\xb4\x03\x1a\xd8\xcb\x13\xe5\x67\x6e\xbf\xf6\xb1\x08\x43\xf9\xfe\xe0\xe9\x91\x2e\x8c\xf3\x5f\xc7\xb8\xc6\x53\x71\xd3\x1b\xda\xd7\x67\x57\xb4\xa9\x64\xf2\x67\x28\x02\xa2\x91\x21\xf3\xee\x5a\x05\xa6\x55\xc7\xe9\x4f\x17\x2a\x07\x3b\x59\xd7\x50\x13\x2c\x14\x68\x05\x28\xdd\x06\x8d\xbf\x5b\x69\xff\xbb\x84\x12\x1b\x54\x25\xcd\x9e\x5a\x91\x38\x92\x12\xb2\xb1\x11\x96\x6e\x5e\x4e\x87\x94\x1d\x3e\x04\x08\x4e\xcf\x8c\x34\xa7\x19\xa0\x31\xda\x90\x8b\x08\x13\x04\xf2\x75\x9a\x70\x5e\xab\x0a\xbe\x7d\x6d\xe1\x2d\xbc\xb6\xdf\x92\x7a\xe1\xe3\x0a\xaf\x6d\x32\x03\xe1\x53\x85\x1e\x42\x4e\xd0\xa3\x37\x9d\x11\x90\x71\x4c\x44\x70\x76\x7e\xad\x78\x08\x40\x36\x9e\xe2\x31\xf8\x61\xe0\xb9\xe1\x63\xbe\x53\x25\xa3\x2b\xe5\x28\xfc\x0d\xd1\xea\x66\x99\x8e\x0a\x56\x37\xcb\x2b\x34\xee\x27\xe9\x8d\x3a\xac\xfe\x82\x7b\x5a\x1c\xe6\xe9\xe5\xa6\x75\xa5\xde\x29\xef\xdc\xca\x88\x02\xd7\x6d\x5d\xef\xc1\x0e\x1b\xc7\x71\x38\x75\xda\xc0\x3f\xf5\xdc\xa9\x99\x23\x4d\xf8\xf8\x98\xff\x28\x8a\x87\xca\xe8\x56\x95\x34\xed\x8e\x71\xff\x4d\xba\xcd\x52\x56\xc3\x15\xfa\x1c\x0a\x38\x95\x97\xd7\x1f\x57\x1f\xee\x3e\xf9\x0b\x35\xc5\x45\xb4\x4e\x6f\x85\x93\x85\xa8\xeb\x7d\x3c\x96\xa0\x32\x87\xd5\x06\x0f\xac\x07\xf4\xd0\xfd\x40\x8c\x72\xfc\x37\x4f\xfe\x7a\x74\xc6\x01\x03\x8a\x76\x78\x3f\xfa\x60\x3e\x87\x6b\xf7\xad\x85\x46\x5b\x2b\xa9\xd8\x39\x0d\xba\xa1\x49\x8e\x2c\x60\xa4\x81\x50\x7b\x50\xed\xf6\x1e\xcd\xc1\x97\xe4\x3b\x3f\xef\xed\x36\xb2\xd8\xb0\x4d\x6c\xef\x13\x16\x74\xe1\xd7\x0a\xe1\x7e\xcf\x3f\x62\x4d\xa5\x2b\x28\x0e\x47\xd8\x08\x0b\xf7\x88\xea\x20\xd0\xb6\x45\x81\xd6\xb2\xc5\x67\xf0\x7c\xec\xd1\x74\x64\xcb\xf3\x3c\x7c\x31\xe0\xa0\x4d\x62\x67\x65\x75\xc5\xb7\xfd\xad\x78\xc0\xb4\xd8\x08\x05\xda\xe6\x4b\xf6\xd0\x0c\xbe\xcf\x98\x42\x89\x3a\xff\xac\x9d\x5c\xef\x53\xa6\x9f\x41\xf8\x58\x9c\x07\x97\x52\x66\x57\x7a\xf8\x2a\x41\xf8\xfe\xd7\x5b\xa6\xa4\xca\x73\xc0\x03\xa1\x3a\x25\x5a\x34\x86\x74\x8a\x9c\x73\x90\x53\x85\x96\xbe\xb9\xa4\x5a\xcf\xfc\x87\x15\xae\xb9\x1f\x8c\xf1\x65\xf7\xaa\xd6\x36\x94\xb4\x01\x77\x68\x4c\x1c\x6e\xf8\x71\x44\x91\xfe\x7d\x06\x6b\xff\xb1\x8e\x47\xcb\xd1\x0b\xc4\x14\x34\xaf\x59\xed\x19\xbd\x67\x85\x86\x35\x25\xeb\xb8\xa7\xf0\x3d\xca\xed\x02\xd6\xee\xb2\xd2\xf1\xff\x02\x00\x00\xff\xff\xa5\xd0\x05\x00\x86\x17\x00\x00")

func templatesApiGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesApiGotmpl,
		"templates/api.gotmpl",
	)
}

func templatesApiGotmpl() (*asset, error) {
	bytes, err := templatesApiGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/api.gotmpl", size: 6022, mode: os.FileMode(420), modTime: time.Unix(1505914023, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesConfigGotmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x54\xcf\x6f\xdb\x20\x18\x3d\x9b\xbf\xe2\x9b\x0f\x8d\x3d\xd5\x4e\xd5\x53\x55\x29\x87\xac\x3f\xb4\xaa\x39\x44\x4b\xb6\x9d\x09\xfe\xb0\x51\x30\x58\x80\x53\x45\x6d\xfe\xf7\x09\x6c\xb7\x4e\xd2\xed\x30\x22\x45\xe2\x03\xde\x83\xf7\xde\xe7\x86\xb2\x2d\x2d\x11\x5e\x5f\x21\x9f\x2f\x9f\x96\xfd\xf4\x70\x20\x44\xd4\x8d\x36\x0e\x12\x12\xc5\xbc\x76\x31\x21\x51\x5c\xea\x66\x5b\xe6\x42\x4d\xa9\x44\xe6\x2a\x5d\x53\x3b\xdd\x0a\x55\x36\x42\xe5\xbb\xeb\x98\xa4\x84\x30\xad\x6c\x38\x54\x20\xa7\xad\x74\xf3\xa2\x30\x68\x2d\xcc\x20\xbe\xbd\xb9\xba\xb9\x0a\x9b\xa6\x53\xb8\xd3\x8a\x8b\x12\x0a\xe4\x42\xa1\x05\x57\x21\xb0\xae\xa4\x1b\x27\xb4\xb2\xc0\xb5\x09\xe5\xf9\xf2\x09\x2c\x9a\x1d\x9a\x9c\xb8\x7d\x83\xc3\x51\xeb\x4c\xcb\x1c\xbc\x92\x68\xe0\xf8\x18\xd6\x19\xa1\x4a\x12\xdd\xe3\xa6\x2d\x61\x3c\x36\x5a\x4b\x12\x3d\x29\x8b\xac\x35\xf8\x7d\xbd\x5e\x8e\xeb\xf3\xd6\x55\xf7\xc2\xd2\x8d\xc4\x62\x5c\x5f\x2f\x56\x77\x68\xdc\xa3\x90\x78\xc2\xb0\x5e\xac\x9e\x71\x3f\x5a\x78\x5f\xf9\x8d\x52\x3e\x2b\xfd\xa2\xde\x01\x7b\x2c\xbd\x45\xf5\xf3\xc7\x62\xd8\x78\x08\x7a\x2c\xa9\xb1\x08\x8d\xff\xb7\xbd\x12\xad\xa1\x5e\x09\xe0\x46\xd7\xc0\x74\x5d\x53\x55\x48\xa1\x10\xb8\xa4\xa5\xcd\x09\x6f\x15\x83\x84\xc1\xd7\x4e\x90\xb4\xc3\x48\x52\x40\x63\xb4\xf1\xc2\x0c\xde\x3c\x4a\x5a\x26\x71\xe1\xc5\x88\x2f\x21\x7e\x50\xfe\x3e\x10\xe6\x20\x75\x59\x0a\x55\x02\x55\x05\x34\x8d\xd1\x1c\x6a\x74\x46\x30\x9b\xc7\x69\xfe\x4d\x6b\xf9\x8b\x9a\xe4\x82\xe5\x41\xca\xf4\x14\x93\x76\xd2\x7b\xd4\xc1\x05\xa7\x41\x0a\xeb\x50\x81\x56\x97\x80\x79\x99\x43\x70\x1e\xb4\x81\xab\x3c\xfc\xc2\xdc\xe3\x93\x28\xba\xef\x72\x92\x1c\xe7\x25\xcd\x57\x41\x9d\x9e\x7c\xa8\x9e\xd2\x8b\xde\xc7\xac\x72\xae\xf1\x97\x58\xa1\xd9\x09\x86\xa0\x95\xdc\x83\x77\xf7\xe4\x15\x63\xe3\xcf\xd0\x9c\xb4\x19\x43\xe3\x32\x2e\x24\x7a\xb4\x25\x75\x95\x7f\xcf\x7a\xb1\x02\xef\x3f\xf8\x05\x68\x2d\x16\xf0\x52\xa1\x0a\xb1\xf4\xda\x79\xb4\x55\xff\x9e\xa3\x7b\x8f\x72\xf3\x29\xdb\x16\xf7\x9f\x92\x3d\xe3\xfe\x7f\xb8\xfa\x24\x9e\x51\x15\x5d\x02\xb3\x17\x94\x32\xdb\xfa\x4c\x7a\xc2\x3e\x97\x40\x5b\xa7\x6b\xea\x04\x83\x69\xfe\xb1\x03\x0c\x5a\xdd\x1a\x86\xb6\x27\x1b\xa9\x78\x16\xed\xbf\x32\xd2\xd6\x55\x27\x5c\x55\xe8\x6c\x2a\xe5\xbf\x18\xc6\x8d\x78\xae\x9c\xef\xa0\xac\x35\xb2\x73\xdc\xc1\x7b\x4b\x05\xb9\x9c\x86\x1d\x95\xa2\xa0\x0e\x41\x7b\xc2\x6b\x08\x27\xec\xa7\xaa\xf5\x47\x47\x24\x7d\x1b\x11\x12\x09\x0e\x5f\x8e\x33\x03\x17\x17\x90\x1c\xf9\x0a\xb3\x19\xc4\x31\xbc\xbd\xc1\xd8\x82\xae\x9a\xfa\x26\x8c\x0c\xba\xd6\x28\xe0\xb5\xcb\x1f\x7c\x67\xf2\x24\x9e\x64\xd9\x51\xd8\x26\xa1\xfd\xfa\xea\x10\x8a\x09\xd4\xad\x75\xb0\x41\xb0\x0d\x32\xc1\xc5\x10\x85\x49\x96\x1d\x05\x7f\xc6\xa9\xb4\x38\x89\x53\x12\x1d\x08\x19\xf8\x94\x90\xe4\xe0\x3f\x2d\x3b\x51\xdf\x02\x77\xb3\x52\x93\x3f\x01\x00\x00\xff\xff\x3e\x82\xd5\x89\xef\x05\x00\x00")

func templatesConfigGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesConfigGotmpl,
		"templates/config.gotmpl",
	)
}

func templatesConfigGotmpl() (*asset, error) {
	bytes, err := templatesConfigGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/config.gotmpl", size: 1519, mode: os.FileMode(420), modTime: time.Unix(1505913966, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesParameterGotmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5b\x6d\x73\xdb\xb6\x93\x7f\x6d\x7d\x8a\xfd\xf3\xda\x0c\x99\x93\xa9\xdc\xff\x3a\x7d\xa1\xab\x3b\xd3\x38\x4e\xe3\x6b\x9a\xe4\xe2\x26\x7d\x91\xc9\xb4\xb0\x08\x49\x68\x48\x80\x06\x20\xdb\x3a\x0d\xbf\xfb\xcd\x02\xe0\x03\x28\x88\x96\x1c\xf7\xda\xeb\x35\x6f\x22\xe2\x61\xb1\xfb\xc3\x62\x9f\x00\x6f\x36\x90\xd1\x39\xe3\x14\x22\x95\xb3\x19\x2d\x89\x24\xc5\x35\xc9\x59\x46\xb4\x90\x51\x55\x8d\x36\x1b\x60\x73\x10\x12\xd2\x1f\x19\x3f\xd7\xb4\x50\x90\xfe\x48\x6e\xed\x2f\xdb\x3f\x23\x05\xcd\xd9\x7f\x53\x48\x5f\x91\x82\x42\x55\x5d\xe0\xc7\xf4\x04\x18\xd7\x5f\x7f\x15\xe7\x94\xc7\x96\x0a\xe1\x19\xc4\x5c\x68\x48\xcf\xd5\x77\x52\x92\x75\xe2\x3e\x5f\x10\xf5\x8c\xa9\x99\x64\x05\xe3\xb8\x70\xd2\x0c\x3b\xe7\x9a\xca\x39\x99\xd1\xb6\xe9\x42\x4b\x4a\x8a\x04\x7f\xbe\x5a\xe5\x39\xb9\xcc\x71\xcd\xc7\x9b\x0d\x50\x9e\x41\x55\x6d\x36\x90\xbe\x27\xf9\x8a\x9e\xdd\x96\x92\x2a\xc5\x04\x87\xaa\x4a\x92\x51\x33\xc2\x09\xd5\x4a\x54\x55\x23\x36\x07\x2a\x25\x72\xed\xc4\xa7\x4d\x37\x72\x9f\xbe\x21\x7a\x09\x55\x35\x86\xcd\x06\x4a\xc9\xb8\x9e\x43\xf4\xe5\x55\x04\xe9\x4b\x31\x23\xda\xae\x61\x3a\x83\x68\x98\x9e\xee\x7a\xc9\x7f\x98\xe5\xfe\x71\x02\x9c\xe5\xb0\x19\x01\x48\xaa\x57\x92\x63\xeb\xa8\x0a\xb0\xda\x81\x3c\xc4\xaa\xeb\x7e\x20\x56\x1b\x7a\x87\x33\xfa\x8e\xb3\xab\x15\x1d\xe2\xb5\x33\xe2\x30\x76\xff\x68\x0d\x3a\x10\x89\x33\xbe\x2a\x76\x40\x80\x5d\xff\xa7\x64\xb7\xfa\xeb\x24\x3a\x04\x88\xf6\x57\x6d\x67\x1c\x08\x4c\xf0\x37\xc8\xb1\x66\xd7\x34\xb2\x43\xdc\x91\x7c\x49\xf9\x42\x2f\x77\x1e\x49\xdb\xed\x2c\x4a\x0d\x60\x07\xcb\xcd\x86\xe6\x8a\x56\x55\x14\x6d\x36\x94\x67\x7b\x82\xeb\xc3\x11\x77\xf1\xe8\xc3\x61\x56\xdb\x9a\x92\x74\x11\xb4\xbd\xa7\x2b\xa5\x45\xf1\x5c\xc8\x82\x68\x4d\x25\x54\x55\x7a\xa1\x25\xe3\x8b\xb8\x1d\x6c\x4f\x5b\x2b\xf4\x9d\xd8\x1a\x91\x6a\xb0\xc8\xed\x20\x58\x75\xf7\x5f\x0b\xac\x56\xe8\x83\xc0\x7a\x63\xe8\xf2\x30\x54\xae\xf3\xaf\x03\xd4\xaf\x9b\x4d\x2b\xf1\xaf\x87\x69\x15\xe3\xac\x58\x15\x3b\x0f\x20\x76\x5a\x6e\xe8\x15\xa4\x17\x37\x64\xb1\xa0\xf2\xa7\x75\x49\x21\x62\x5c\xd3\x05\x95\x78\x9e\xcf\xb9\x6e\xd8\x79\x68\x58\x87\xd6\x65\x76\xdd\x5c\x21\x7c\xf3\x5c\x90\x96\x8d\xaf\xbf\x8a\x43\x18\x0f\xef\x4a\x52\x9f\x50\x8b\x89\xf9\x3a\xbb\x9d\xe5\x2b\xc5\xae\x69\xd3\x7c\xe8\xb1\x1d\x00\xd8\x76\xfe\xbf\x03\xb8\xc6\xa4\x07\x70\xdd\x7c\x18\xc0\xab\x5c\xb3\x32\xa7\xaf\xe7\x3b\x30\x6e\xfa\x1f\x0e\x38\x83\xc4\xe7\x00\xd0\xe1\xf9\x20\x61\xd1\x29\x0f\x47\x19\x0f\xa9\x19\x9f\x17\x84\x1c\x02\xcb\xc1\x9e\xa1\xe5\xfd\x5f\xae\xa3\x1a\x97\xbd\xa1\xac\xff\x6f\xe2\x94\x52\x8a\x92\x4a\xbd\xee\xa5\x44\x9d\x00\xef\x5c\x35\x11\x8c\x85\x56\xd3\xa2\xcc\x89\xde\x15\xe4\xa4\x76\x94\x1f\x25\x86\xe4\x0b\x6d\xa6\xed\x37\x1a\x6b\x76\x10\x65\x8e\x36\x9b\x66\x8f\xaa\x2a\xb2\x0d\xee\xdc\xda\xf1\xa6\x35\x84\x6e\x03\xe1\x18\xe6\x66\xa4\x1a\x46\x2a\xc0\xb7\xd9\xfe\xbe\xe0\xa1\x2c\xb2\x2b\xf8\x71\x2f\x2c\xac\xd1\xbe\x64\x3c\x2b\x6b\xa8\xcc\xfc\x68\x67\x04\xd9\xae\x81\xb3\xac\x55\x1a\x5d\x13\x89\x3a\x70\x4d\x24\xc7\x5c\x26\x3d\x5d\xb2\x3c\x0b\x44\xb2\x6f\x4d\x24\xfb\xbd\x30\x76\xad\xaa\x46\x73\x21\xa1\xcd\x71\xed\xac\x17\x44\xbd\x6f\x36\x50\xd5\xad\xa7\x82\x5f\x53\x89\x3b\xe4\x1a\x42\x5b\x87\xc4\xcf\x79\x46\x6f\xdf\x13\xf7\xe9\x2c\xe5\x2f\xbe\xae\xde\xc9\xe7\x7b\xdc\x7d\x49\xf8\x82\xee\x35\xfc\xd4\xec\x58\x5f\x90\x7a\x93\x10\x75\xd3\x5b\x8b\xb2\x93\xca\xf4\x04\xd4\x0d\x59\xa4\x17\x65\xce\xf4\xd3\xb5\x15\x2d\xde\x8b\xe1\x6d\xfb\x51\xe3\x96\xe7\x74\x86\x50\x5a\x6a\x18\xd6\x58\x6e\x42\x6a\x53\x6f\xa9\x9d\x0c\x8e\xf1\x63\x0b\x63\x23\x07\x6a\x60\x7f\x57\x9a\xce\x3b\x59\x1d\xd7\xa7\xab\x83\x48\x43\xc6\x7a\xd3\xbb\xc5\x45\x19\xdc\x39\xed\x9c\x99\xee\xa9\x11\x52\xa5\xe7\xdc\x9c\x03\xd4\xb6\xb8\x5d\x6d\x67\xda\x67\xbb\x3d\xbb\x1b\xb5\xd3\x1a\xad\x8d\xf6\xd3\x21\x64\xd1\xc3\xaf\x85\x6d\x5b\x77\xef\x01\x9f\xb3\x1c\xe9\x1b\x22\x15\xfd\xeb\xa2\xb6\x3f\x32\x4e\xa7\xee\x86\xc1\xd2\x73\xa6\xcd\x2d\x65\x3f\xfa\x27\x63\x97\x1b\xf2\xcf\xc7\x3e\x76\xef\x04\x48\x59\x52\x9e\xed\xb5\x51\x6f\xf7\xc5\xaa\x6b\xa3\x4b\x32\xfb\x44\xac\xc1\x4a\xdf\xb8\xdf\x28\xd2\x64\x02\x3f\x2d\x99\x82\x39\xcb\x29\xdc\x10\x05\x0b\xca\xa9\x24\x9a\x66\x70\xb9\x06\xbd\xa4\xc6\xe6\x2c\xa8\x04\x2d\x44\x9e\xe2\xf8\xb3\x8c\x69\xc6\x17\xa0\x9b\x79\x05\x5b\x2c\x35\x94\x52\x5c\x53\x98\xaf\xb4\x21\xb5\xa4\x1c\xd6\x62\x05\x92\x1e\xcb\x15\xf7\x28\xd5\x4b\xc0\x4c\x14\x05\xe1\xd9\x68\xc4\x8a\x52\x48\x0d\xf1\x08\x20\xe2\x54\x4f\x96\x5a\x97\x11\xe2\x1d\x2d\x98\x5e\xae\x2e\xd3\x99\x28\x26\x0b\xc6\x8f\x17\x82\xb3\x19\xfe\x8a\xfa\x9d\xe2\x58\x94\x94\x93\x92\x4d\xac\xa2\x0e\x0c\xa8\x1d\xf7\xc0\x10\xb9\xe2\x9a\x15\x7b\x8c\x98\x14\x2c\xcb\x72\x7a\x43\xe4\xd0\x60\x94\xbc\xdf\x5d\xb0\x4f\x9f\x68\x2e\xd4\x8c\x48\x23\x9a\x43\x67\x42\x4a\x66\x44\x57\x5a\xce\x0b\xbd\x93\xa2\xe9\x8d\x9c\x4e\x5a\x67\x94\x3e\xa3\x73\xb2\xca\xf5\xb9\x41\x53\x59\x1f\xe7\x9d\xc6\x5a\x25\x3b\xda\xed\xe6\x7e\xf1\x89\xae\xc7\xf0\xc5\x35\xaa\x11\x1e\x95\xd4\x23\x82\xbd\x78\x86\x7a\xf4\xdc\xf0\x1e\xd5\xc4\x68\xd5\xd3\x95\x62\x9c\x2a\xf5\x52\x2c\xd8\x0c\xe7\x11\x35\x23\x5e\x45\x13\xe8\x2d\x9d\xad\x34\x55\x46\x39\x66\x42\x52\xc8\x71\x30\x88\xb9\x69\x91\x14\x8f\x59\x86\xc4\xa4\x58\x69\x8a\xf4\x4b\xc1\xb8\x4e\x47\xf3\x15\x9f\xed\xb1\x42\x3c\x07\x1c\x19\xcf\xf4\x2d\x3c\x5e\x30\x8e\xae\x44\xd3\x5b\xdd\x04\xde\x92\x98\x52\xe8\x18\x4a\xfb\xf3\x71\x90\x8c\x1d\xd7\x08\x98\xc0\x63\x52\xb2\xf4\x2d\x55\xa5\xe0\x8a\x26\x80\x94\x5f\x10\x9e\xe5\x54\x3e\x47\xc6\x36\xa3\x23\x67\x33\x0d\x9f\x5b\xcb\x27\x38\xe2\xa8\xcf\xc4\x64\xd2\x1e\x0c\xc7\xce\x5c\x8a\x02\x24\xbd\x5a\x51\xa5\x47\x47\x47\xae\x75\x7a\x02\x8f\x86\xf8\xac\x46\x47\x47\xce\x0b\xd8\x19\x29\x3a\xee\xb7\x96\x0c\x32\x93\x8c\x8e\x8e\xfa\x86\xfe\xc8\xcc\x79\x7d\xf9\x1b\x4e\xa3\x52\xa6\xf1\x63\x67\xf0\x4f\x45\x51\x0a\xc5\x34\x3d\xc3\x6f\x9c\x7b\x54\x4a\x71\x99\xd3\x02\x87\x22\x12\x6f\xec\xa7\x21\x72\xf4\x13\xd3\x39\x9d\x02\x44\xef\x78\x29\xc5\x8c\x2a\x65\x52\x8a\x33\xae\x99\x5e\xa7\xd1\xd8\x0c\xba\xd0\x44\xaf\xd4\x14\x18\xd7\xb1\x5d\x36\x3d\x15\x19\x8d\x93\xc4\xf6\x3f\xa3\x9a\xb0\x7c\x0a\xae\xcf\xac\x1c\xdb\x3e\x94\xee\x68\xa6\x6f\xd3\x9f\x25\xd3\x54\xa6\x2f\x28\xc9\xa8\x8c\x93\xf4\x82\xea\x38\x32\x08\x73\x7d\x8c\x6e\x05\x83\x6e\x52\x96\x39\xb3\xbe\x67\xe2\xb8\xfe\xd7\xdf\x94\xe0\x51\x52\x93\xf9\xcf\x8b\xd7\xaf\x62\xd7\x95\x5a\xbe\xc6\xe0\xbe\xcd\x20\xbb\x95\x23\xbb\x72\xab\xe5\xd8\xa1\x4a\xe3\x6a\x11\xd3\x5d\x2a\xe5\xb2\x17\xa4\xa4\x6e\x98\x9e\x2d\x01\xa7\x19\x69\x0d\xea\x33\xa2\x28\xa0\xb9\x73\x6b\xbf\x12\x4e\x84\x69\xcd\xe0\x77\x97\x42\xea\x9f\x99\x5e\xda\x01\x71\x33\x1f\x69\x66\xf6\xc4\x4f\x3d\x69\x9a\x11\x63\xbb\xd8\x53\x91\xad\x13\x2b\x40\x35\xb2\x36\x7f\x40\x7f\x60\x26\xb8\x26\x8c\x2b\x20\x79\x6e\x0e\xe2\xa5\x58\xf1\xac\xd1\x49\x21\x4d\xe3\x66\x03\xcb\x55\x41\xb8\x77\xa2\xd1\x1f\x1a\xb0\x71\x0d\xbd\x2e\xd9\x8c\xe4\xb9\x71\x23\x8a\x02\x91\x14\xc4\x25\x92\xa6\x99\x55\x6d\x62\x25\x77\xaa\x39\x9a\x4c\x70\x9a\xb3\x83\x53\xb3\x1e\xd5\x54\x2a\xe3\xb4\xdc\x12\x23\x8d\x01\xc3\x10\xfb\x4a\xcb\xd5\x4c\xc3\xc6\x37\x8d\xed\x31\x7b\xec\xb6\xea\x19\xc5\x94\xb8\x74\x61\x09\x2e\xb1\xd5\xe2\x95\xf7\x90\x4b\x26\xa9\x33\x9c\xf5\xd7\x14\xb4\x5c\xd1\xfe\x58\x57\x1b\xb1\x43\xdd\xc7\xb4\x0e\x8e\xfb\x15\x14\xa8\xaa\x6f\xc0\x2b\xf2\xb7\x1d\x5b\x84\x6d\x55\xcb\x11\xb6\x1f\x01\xc2\xcd\xa8\x6f\x7b\x84\x9b\x8e\x2d\xc2\x4d\x8d\xc3\xd1\x76\xdf\xf0\x7a\x3e\xb5\x17\x64\xdd\x01\x01\x79\x6d\xe1\xb7\x91\x18\xec\xb7\x9b\xdb\xe9\x0e\x48\xe4\x4d\x65\xdc\x9f\xda\xe9\xee\x4f\x75\x45\x54\x3b\xd1\x7d\x4c\x5d\x84\x53\xf7\x04\x38\x6d\x2e\xc0\x2c\xa3\xe6\xb3\xe1\xb3\xee\x0c\xb0\xd9\x9d\xc7\xb8\x37\xaf\xed\xec\xcf\xeb\xdd\xb9\x01\xd8\x86\xb0\xda\x74\xc2\xe4\x11\xc0\xb9\x13\xa6\xd3\xda\x9f\x10\xc8\xdf\x46\x00\x6d\x2b\xd8\x66\x4b\x27\x30\xb8\x4f\xef\x05\x51\x2e\x86\xb0\x94\xdc\xc7\x74\xbb\x84\xd3\x0e\xeb\x86\x13\x8f\x27\x4d\x0e\x68\x2a\x4c\x17\xb3\x25\x2d\x88\x0b\x44\xda\x03\x7b\xfe\xcc\x05\x13\x0f\x76\x75\xf6\x9c\xe5\xd4\x1c\xf1\x43\x6e\xd3\x5c\xfa\xd1\x2d\x05\x84\x03\x95\x3e\xa7\x56\xac\xf4\x5c\x3d\x25\x8a\x22\x09\x7f\x95\xde\xa0\x9a\x91\x81\xc5\x3b\xe1\x98\x2d\x76\x55\xa3\x51\x20\x3e\x18\x30\x7b\xcf\xa5\x28\x4e\xf5\x2d\x2c\xa8\xb6\xf1\x54\xe9\x59\x43\x63\x6e\xb1\x79\xc1\xb8\x31\xf0\xf4\xb6\x0e\xa3\xee\x26\x1a\x08\x60\x86\x02\x25\xf4\x6b\x76\xf5\x31\xfc\x82\x0e\x12\x1d\xd3\xf7\xe8\x9d\x6d\x2b\xfa\x5e\x17\x1f\xb9\xf8\x24\x1e\x22\x97\x74\x2b\x5c\x26\xb2\x6c\xa3\x19\xb8\x14\x7a\x09\x18\xde\x28\xb3\x3d\x75\x64\xaf\x80\xd4\x71\xd3\x18\x98\x06\xa2\xd4\xaa\x30\x81\x26\xd1\x98\x75\x94\x39\xbd\xc5\xfc\x85\x2f\x14\x30\xfc\x2a\x28\xd7\x40\xc0\x95\x96\x70\x17\x63\x1b\x61\xa7\x6f\xe9\x82\x29\x2d\xd7\x89\x4d\x80\x31\x64\xb1\xca\x87\xac\xa0\x33\x54\x86\x00\x98\x50\x58\xe1\x62\x37\x2c\xcf\x61\xa5\x28\x62\x4f\x4c\x66\x54\x50\xbd\x14\x19\xa0\x33\x54\x16\x74\x93\x3a\xbf\xa5\x33\xca\xae\xa9\xac\xd5\x6c\x10\x05\xe8\x05\x71\xbd\x0d\xb1\xcc\x61\xc2\x7e\x4d\x24\xba\x7d\xf8\xf0\xd1\xb4\xb5\x45\x99\x46\x93\x5c\x6d\xc0\x14\x94\xac\x90\xaf\xe8\x8d\xb5\x09\xaa\x53\xb8\x1d\xb5\x53\x5f\x10\xf5\x5f\x2b\x2a\xd7\x0d\x89\x2b\x33\xdb\xe5\x40\x36\xf9\x54\xc8\x55\xed\xcb\xd3\x77\x6f\x5f\xa6\x66\x4a\x9c\xec\xa2\x88\x2b\x36\x04\xdb\xb2\x6a\x97\x8a\xa9\x5e\x58\xcf\x43\xa4\xc6\x09\xf1\xbf\xff\x13\xbe\xf9\x06\xfe\xf9\xa4\x5f\x13\xed\x86\xb4\x26\xaa\x38\x93\xf2\x95\xd0\xcd\x64\x57\xcc\xa8\xff\x75\x0a\xa8\x75\x53\xd5\x14\x62\x76\x71\x62\x18\xd8\x2e\xc6\x0e\x53\x1d\x1d\x55\xbe\xcc\x06\xad\x46\xf0\x11\xc0\x3c\xbb\x0b\x4d\x9c\x96\x74\x93\xac\x3e\xa4\xfd\x28\xc7\x37\xc3\x5e\x41\xd8\x56\x88\xdb\xed\xc4\xdd\x0c\x2a\xde\x18\xae\x96\x9f\x76\xf4\x98\x73\x7d\xa5\xf0\x58\xbf\xfe\xa1\xfb\x5c\xa2\x53\x44\x72\x45\xbc\x9e\x96\x9b\x64\x24\xe0\x0e\xe2\xc3\x99\xd8\x59\x1d\x07\x73\x00\x9a\xa2\x8a\xa4\xca\xd4\xc5\xda\xea\x51\x5b\x72\x3b\x57\xc8\x78\x0d\x84\x0c\xdb\xff\xe9\x09\x7c\xf8\xa8\x4c\x55\x7e\x83\xdb\x62\x86\x7b\x52\x57\xf7\x16\x3b\xbc\xe4\xd8\xc4\x07\x0f\x25\xa2\xcd\x91\x6a\x21\xef\xc7\x67\x57\x1d\x2d\xbd\x0f\xe6\x98\x9d\x12\x2e\x38\xc6\xf9\xb6\xf1\x07\xba\xf6\x80\xf9\xf8\xb0\x92\x34\x36\xc3\xe8\xb2\x6b\xab\x7d\xbf\xd5\xef\xad\x97\x53\xe1\xf7\x54\x96\xdd\x71\xe8\xac\xe3\x22\x48\x74\x87\x5e\xdf\xcd\x3b\xa6\xcd\xaf\xe8\x4d\xfc\xd5\x93\x27\x63\x88\x24\x25\x19\xe3\x0b\x5b\x2a\xfb\xf2\x0a\xe6\x84\xe5\x98\x38\x7c\x79\x1d\x6d\xd5\x4b\x63\x9f\xcf\xa4\x2e\xe9\x26\x06\x0e\x8b\x84\x5d\x38\xb4\x77\x61\xed\x6d\x2d\x0b\x0a\xb5\x79\x46\x34\x99\x06\x21\x19\x83\x05\x25\xdc\x6b\xfb\xaa\xde\xb6\x54\xd5\x3c\xdb\x75\x3c\xb3\x61\xf3\x31\xcf\x1e\xd4\x7e\xdc\x87\x8f\xcf\x51\xca\x9e\x1d\xee\x6b\xea\xdf\x16\x37\x7c\x88\x31\x4c\xeb\x1d\xe4\xbf\x35\xc8\x0f\x8e\x1c\x44\x4f\x45\xe6\xf4\xa5\xcd\xa3\xd8\xbc\x39\xcc\x2f\x88\x19\xd1\x35\xcc\x49\xe7\xa6\xb1\x9f\x7f\xb8\x0a\xc0\xbe\x26\xa3\x6b\x0f\x71\x19\xef\xc8\x77\xd8\xdc\x4a\x85\x3a\x4d\x67\xb7\xa5\x90\xda\x54\x4c\x2e\x45\xb6\xf6\xae\xf6\x7e\x14\x19\xcd\x55\x7b\x13\x91\xbe\xe3\x05\x91\x6a\x49\xf2\xcd\x06\xa3\x52\x56\xd6\x7d\xf5\x25\xd1\xd6\x94\xad\xdb\xee\x8b\x9c\xcd\xda\x9c\x3a\xee\x8b\x30\xb6\x65\x64\x8c\x99\x31\x1b\x90\x01\x93\x0e\xc1\x5a\x4f\x33\xec\xe4\x04\x98\x48\xcf\x5e\x3f\x6f\xc2\x3e\xd3\x5a\x9b\xfc\x7a\xd6\xde\xcf\x47\x93\x91\x8d\x10\x9d\x3d\xb7\x7c\xef\x54\x9b\x16\x7f\x0c\xf1\x11\xd1\xde\x7d\x39\xf4\x62\x57\x4c\x94\x4c\x41\xf0\x11\x0e\xee\xa9\xe8\xc1\xa2\xee\xf4\x74\x5d\xb1\xef\xf4\x65\x43\x68\x38\x38\x9c\x97\xf3\xee\x29\x86\x1d\xad\x09\xce\x6d\x91\xf8\x33\x79\x18\x43\x14\x39\x87\xbb\x03\x9f\xde\x6e\x75\x8f\x72\xdf\x3f\x07\x1d\x41\x7d\x37\x68\x3f\xe3\x40\x51\xa1\x5b\xde\xf0\xde\x0b\xe4\x8c\x28\x9a\x75\xae\x89\x6d\x22\xfb\xfa\xf2\x37\x3a\xd3\x49\x62\x33\x3b\xf8\xc5\x3e\x08\xf6\x5f\x3a\x6c\xe5\x9a\xdd\x17\x0c\x7b\x1a\x85\x5a\x11\x7c\xe3\x3a\xbc\x4e\xea\x32\x6a\x1a\x0f\x18\xca\x41\x63\x69\xff\x5d\x4a\x4a\x3e\x8d\xea\x8c\x2a\xb0\x0f\xde\x0f\xe7\x6a\xf6\x01\xb7\xe9\x68\xd0\x6d\x5a\xb6\xe1\x6d\x25\xc7\x03\xb5\xa7\x6c\x03\x92\x6d\xeb\x92\x41\x37\xa7\x1c\x07\x26\x78\x08\x9f\x34\x74\x0e\xb1\xde\x07\x16\xac\xaa\xea\x51\xc3\xc4\xa5\x35\xf6\x96\xb9\xfe\x75\x61\xa0\x16\xde\xd5\xf9\xff\x1d\x13\x51\x75\x79\xda\xbe\xcf\x6c\x7e\x77\x91\xfc\xb6\x01\xd2\x7f\xcd\xd0\x5c\x6e\xb5\x8f\x8a\xac\x1d\x91\x54\xa5\x69\x5a\x7b\x6b\x37\x89\xb3\xdc\x55\xe6\xbe\x98\xe5\x44\x29\x03\xf8\xf4\x04\xe2\xde\x26\x24\xee\x55\xd4\x56\x56\xde\xe6\xe4\x46\xf9\x3c\x1f\xef\x15\x31\xbd\xbf\xee\xe9\x3e\x66\x0b\x3f\x4a\x1b\xae\x29\x75\x98\xf5\xcb\x49\xc1\x7c\x94\xdc\x60\x86\xd0\x24\xbc\x63\x58\x12\xf5\x03\x5d\xc3\xa5\x10\x79\x13\xef\xc0\x8e\xea\xd8\xc6\x0b\x62\xea\x52\x6c\x93\x62\x27\x9e\xea\xb0\x39\xfc\xc3\x11\x0f\xed\xcd\xbd\xdc\xa9\xa7\x04\xa6\x14\x46\x6e\xc0\x4a\xd2\x51\x09\x2b\xa3\xa7\x16\xe4\x06\x13\x25\xdb\xf1\xa1\x3b\xe8\xf8\xdf\x3e\xb6\x74\xf7\x11\xcc\x76\x7e\x97\xe7\xe2\xe6\xac\x28\xf5\xda\xd4\x73\x7c\xf3\xd1\x3c\x1d\xac\x27\xb9\x27\x7f\xfb\xff\xdd\x89\x24\x37\xe1\x98\xb3\x53\x80\x0a\x44\xde\x31\xf4\x39\x07\x6b\x08\x2d\xd3\x35\x3b\xc9\x2e\xfe\x0d\x4c\x27\x10\x45\xb0\x81\xc9\x04\x28\xf6\xd7\xa5\xcf\x92\x28\x7b\x67\x28\xf4\x92\x4a\x68\xdf\x59\xaa\xae\x43\xf4\xae\x18\xdc\xcb\x40\xdf\x0a\x54\x55\x3d\xc0\x2b\x61\xf5\xd2\xfc\x36\xee\x69\xe3\x22\xa1\x6c\x8a\x6b\xef\x5c\x1b\x3b\xd8\x3d\x40\x5e\xe9\x3d\xae\xeb\xed\xc3\xd7\x1b\xdb\x0f\x4a\x13\xdf\x66\x87\xff\x30\x27\x60\x87\xef\xbe\xe2\xb0\xe7\xbd\xb1\xcc\xb0\x7d\x9f\xd1\x35\xd6\xa1\x3c\xdd\xb1\xde\x0f\x2a\x1b\x03\xb6\x6d\xd5\x9b\xcb\xa4\xf6\x9d\x9d\xd9\x52\xff\x2d\x5e\xf7\x15\x1e\x6a\xdf\xbd\x5e\x8b\xed\xfd\x47\x55\x5e\x67\xb3\xd5\x56\xef\x5b\x11\x86\x50\xdf\xe5\xe0\x8c\x68\x5b\xe9\xfa\xb6\x51\xf5\x21\xd8\x7a\x4f\xe7\x31\xe8\x3d\xec\xed\xf2\xf9\xa7\x46\xe8\x1e\x57\x6f\x03\xf7\x6c\xf5\x77\x0d\xba\x7f\xe1\x15\x1b\x38\xed\x4d\x4f\xcb\x6d\x62\xf3\x1a\xfb\xda\xfd\x9e\xfb\x29\xc9\xcd\x96\x3e\x3b\x43\xd3\x7d\x29\x7c\x57\xdd\xb3\x36\xc9\xc1\xc2\xc0\x50\x92\x1f\x30\xb8\x35\x23\x5e\xd8\x60\xc5\xec\x26\x05\x7f\x3e\xc7\xdd\x8b\xed\x7e\x77\x07\xdd\x18\x1f\x7a\x15\xb8\x9f\x8e\x8a\x55\xae\x59\x64\xed\xdc\x1e\xcf\xac\xa7\x8d\x03\xf7\x53\xe5\xab\xeb\x70\x9c\xbc\x47\x58\xb0\x6b\x6a\x38\x54\x80\x63\x70\xc1\xc2\x9e\x2f\x3f\x77\x3d\xea\xde\xb1\x6c\xe0\x79\x6d\xe0\x01\xf7\xd6\x51\x30\x85\x9a\xbb\xc3\x93\x16\x88\xbd\x58\xf7\xd2\x93\xdf\x4d\x31\xbc\xb0\x64\xc7\x43\x85\x8c\xce\xdf\xd7\xef\x16\xc3\x2f\xe4\x3b\xfe\x7c\x3f\x0c\xef\x87\xc5\xa3\x47\x66\x4a\xcd\x4f\x57\x91\x76\x1a\xb7\x7a\xb0\x57\xe0\xf9\xdc\x7d\xe0\x2c\xef\xa7\x6d\x5d\x5c\x07\x1f\xf7\x37\xa3\x76\x1a\xe3\xbb\x5f\x28\x7b\xf7\xbc\xa6\x2c\xf7\xc7\x9a\xe2\x6d\x5b\xec\xff\xc9\x0c\x46\x5d\xfd\xbf\x2c\x09\x73\x7e\x1f\x8b\xbd\x87\x3c\x77\xe4\x53\x7b\xbc\x39\x0f\x7a\x9c\xe0\x5f\x7b\xbb\x5f\x93\x09\x5c\xb3\x62\x0a\x73\x7d\xb2\x10\xa3\xff\x09\x00\x00\xff\xff\x00\x02\x05\xdc\x6e\x42\x00\x00")

func templatesParameterGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesParameterGotmpl,
		"templates/parameter.gotmpl",
	)
}

func templatesParameterGotmpl() (*asset, error) {
	bytes, err := templatesParameterGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/parameter.gotmpl", size: 17006, mode: os.FileMode(420), modTime: time.Unix(1502823114, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"config.yaml": configYaml,
	"templates/api.gotmpl": templatesApiGotmpl,
	"templates/config.gotmpl": templatesConfigGotmpl,
	"templates/parameter.gotmpl": templatesParameterGotmpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"config.yaml": &bintree{configYaml, map[string]*bintree{}},
	"templates": &bintree{nil, map[string]*bintree{
		"api.gotmpl": &bintree{templatesApiGotmpl, map[string]*bintree{}},
		"config.gotmpl": &bintree{templatesConfigGotmpl, map[string]*bintree{}},
		"parameter.gotmpl": &bintree{templatesParameterGotmpl, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

