// Code generated by go-bindata.
// sources:
// config.yaml
// templates/api.gotmpl
// templates/config.gotmpl
// templates/parameter.gotmpl
// DO NOT EDIT!

package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _configYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x92\x4f\x4b\xc3\x30\x18\xc6\xef\x7e\x8a\x97\x9e\xb6\x83\x9d\xe7\xde\x04\x15\x14\x94\x81\xbb\x6f\xaf\xed\xd3\x18\x97\x7f\x24\x99\xa2\x25\xdf\x5d\x9a\x6e\x93\x4d\xd1\x0d\xd9\xed\x6d\xd3\xdf\xd3\x5f\x9e\x44\xf1\xbb\x5d\xc5\xea\x8c\x88\x9d\x53\xb2\xe6\x28\xad\xe9\x1f\x89\xce\xc9\xb0\x46\x45\xb5\x35\xad\x14\x2b\x8f\xfc\x96\x28\xd8\x95\xaf\x51\x51\xd1\x75\x54\xce\xb4\xbb\x92\x9e\x52\x9a\x44\x68\xa7\x38\x22\x4c\x06\xa0\x14\x36\x6a\xa7\x8a\x35\x15\xd9\x0b\xc4\x4c\x2d\xba\x8e\x5e\xac\x34\x37\x52\x61\xca\xf1\x99\xca\x59\x5e\xa4\xf2\x11\xfe\x15\x7e\xca\xf5\x92\x05\x28\xa5\x45\x4a\x1b\xbe\x95\x0a\xf3\x41\xa8\xd8\xfe\xa0\xd8\x11\x85\x7e\x42\xd3\xa0\x99\x07\x87\x7a\x4f\x96\x43\x40\xac\xc2\x1b\x0b\x01\x7f\x17\xac\xb9\xee\x3f\x3e\x81\xdb\x8e\xc4\x37\xc5\x90\x43\x0e\x2d\x92\x9d\x3c\x61\x8b\x43\x7a\xbf\xa2\x6d\x03\x15\x76\x4f\xbd\x41\x2b\x8d\xec\x6f\xc3\x8f\x4d\x66\xe4\x18\xa9\xfb\x1e\xf8\xd3\x69\x48\x18\x05\xc3\x4b\xf9\x01\x1a\x39\x0e\x35\xab\x7e\x2c\x1f\x58\x63\x3c\x1e\xd0\xb5\xb7\x75\xf0\xf9\xc2\xee\xb9\x3b\xf6\xac\x11\xe1\xc3\xa1\x4d\x6f\x89\xdf\xfb\x96\x2d\x89\x48\x23\x05\xd3\x6f\x4c\x84\x31\x5d\x50\x4a\x07\x1e\x44\x79\x39\xbd\xdd\xce\x9b\x61\xc0\xa1\x02\x8e\x08\xda\x83\x4d\xf3\xef\x42\xe7\x5f\x95\xe5\x6e\x3f\x03\x00\x00\xff\xff\x82\x4f\xcf\x1e\x17\x04\x00\x00")

func configYamlBytes() ([]byte, error) {
	return bindataRead(
		_configYaml,
		"config.yaml",
	)
}

func configYaml() (*asset, error) {
	bytes, err := configYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config.yaml", size: 1047, mode: os.FileMode(420), modTime: time.Unix(1502998105, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesApiGotmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x58\x4b\x73\xe3\x36\x12\x3e\x93\xbf\xa2\xc3\x9a\x07\xe9\x92\xa9\x4c\x8e\xaa\xf5\xc1\xf1\x38\x33\xde\x79\xb9\x2c\xcd\xce\x31\x81\xc9\x16\x85\x35\x05\x30\x00\x68\x5b\x56\xf1\xbf\x6f\x75\x03\xa4\x28\x59\x71\xb2\x3e\xc8\x24\xd0\xcf\xaf\x1f\x68\xb0\x11\xc5\x9d\xa8\x10\xb6\x5b\xc8\xcf\xaf\xaf\xae\xc3\x6b\xd7\xc5\xb1\x5c\x37\xda\x38\x48\xe3\x28\x29\xb4\x72\xf8\xe8\x92\x38\x4a\x14\xba\xe9\xca\xb9\x86\x9e\xb5\xf5\xbf\x53\x2b\x2b\x25\x6a\x7a\xb1\x1b\x5b\x88\x9a\x1f\x9d\x5c\x23\x2f\x39\x23\x55\x65\x93\x38\x8e\x92\x4a\xd7\x42\x55\xb9\x36\xd5\xf4\x71\xaa\x45\xeb\x56\xbf\xf8\x75\xe9\x56\xed\x6d\x5e\xe8\xf5\xb4\x92\xea\x94\xf4\x19\x79\x3b\x6d\x1a\xa3\x97\xc9\xf3\xfd\x4a\x2b\x59\xd0\x53\x12\x47\x95\x54\x5e\x10\x8c\xa9\x9e\x44\x2d\x54\xa9\x99\xba\xd7\xb3\x27\x66\x2d\xef\xee\xb0\xd6\xb6\x10\x86\x89\xec\x83\xa8\x2a\x34\xd3\xb5\x2c\xcb\x1a\x1f\x84\xc1\x7f\xc8\x20\x1a\x99\xc4\x51\xad\xab\x3d\xfd\x56\x9a\xb6\xb1\xa8\xa6\xb5\xae\x4c\x4b\x38\x6d\xb7\x46\xa8\x0a\x21\x7f\x8f\x4b\xd1\xd6\xee\x8a\xe1\xb5\x5d\xb7\xdd\x36\x46\x2a\xb7\x84\xe4\xf5\x9f\x09\xe4\x5d\x47\xb4\xa8\x4a\xff\xe0\x99\x5e\xdd\xe1\x66\x02\xaf\xee\x45\xdd\x22\xcc\xce\x20\x1f\x71\xd3\x5e\xd7\x51\x04\xc7\x72\x3c\xed\x58\x58\x16\xc7\xd3\x29\xdc\xe8\xd6\xa1\x85\x12\x97\x52\xa1\x05\x51\xd7\xe0\x56\x08\xc6\x2f\xeb\x25\xbf\x9d\x5f\x5f\x81\x45\x73\x2f\x0b\xcc\x63\xb7\x69\xb0\x67\xb3\xce\xb4\x85\x83\x6d\x1c\x9d\x54\x52\xe5\x97\xaa\x92\x0a\x47\xbe\x7d\x6b\xd0\x08\x27\xb5\x62\xcb\xa0\x11\x94\x0d\xf2\x09\x21\xff\x2a\xd6\x94\x56\x23\x09\x5e\x04\x0b\x36\x1f\x8c\x6e\x9b\x38\x8a\xb6\x5b\x90\x4b\xc8\xcf\x5b\xb7\xd2\x46\x3e\x61\x09\x5d\x47\x2f\x40\xa4\x1f\x85\x2a\x6b\x34\xbf\xb5\xaa\x88\x83\x53\x51\x74\xad\xad\x83\xe7\x92\xba\x9e\x22\xee\xd8\xed\x42\xab\xa5\xac\x5a\x83\x3f\xb0\xae\x3f\x29\xfd\xa0\x00\x95\xb8\xad\x09\x02\x55\xee\xb6\x2d\x4c\xf3\x07\xac\xeb\xd3\xbb\x40\x53\x36\x5a\x2a\x67\xf3\x78\xd9\xaa\x02\x52\x03\x27\x1e\x8a\xec\x88\xc8\x74\x85\xa2\x76\x2b\x32\x10\x88\x3c\xcd\xe0\x56\xeb\x3a\x23\x6f\x1f\x06\xbd\xb3\x33\x30\x39\x9b\x99\x26\x63\x65\x49\x16\x47\x04\xcb\x40\x99\x7f\xb8\x5c\xa4\xc9\xd4\x16\x2b\x5c\x8b\xd3\x52\xda\x42\xdf\xa3\xd9\x24\x13\x2f\xbc\x70\x8f\xde\xf1\x0b\x5f\x9d\xac\x26\x8a\x06\x3a\x52\x34\x42\x3b\x8a\xe6\x2c\xe8\xfb\xcd\x67\x00\x5f\x93\xf0\xc7\x7f\xad\x56\xb3\xc4\x6b\xf8\xbd\x35\x75\xf2\xc7\x88\x72\x41\x81\x3f\x4a\x49\x29\x11\x48\xbf\x5f\xb1\x40\xfa\xdb\x27\x6d\xe5\x4e\x60\x77\x60\xc0\x0c\x20\x99\x86\x02\xca\x89\x3c\x99\x1c\xe8\x9d\x41\x12\xf6\x4f\x7f\xc9\x7f\xf6\xdb\x1d\xfd\x14\xee\x31\xff\xf7\xfc\xdb\xd7\x94\x9a\x50\x3e\x77\xc2\xb5\xf6\xdb\xa7\x09\xbc\x19\xfc\xce\xe2\x28\xea\xb2\x23\x40\xfa\xe8\x24\x13\xf0\x0f\x21\x9d\x46\x41\xcb\x32\x4a\x9c\x38\x32\x3d\xf2\x7b\x16\xbe\x84\x3a\x59\x35\x67\xf7\x0f\xed\xf2\xa0\xa4\x73\x2f\x8a\x2c\x67\x2d\x59\xc8\xcb\x3d\x53\x40\x5a\x2e\x3f\xbf\x08\x1f\x17\x8b\x6b\x58\x85\xad\xd6\x62\x09\x4b\x6d\x98\x60\x9c\x36\xc1\x2d\x12\xc6\x45\x4c\x05\xe4\x53\xbb\x0c\x49\xfb\x57\xee\xee\xe7\xe8\x41\x85\x91\x5b\x9e\x94\x13\x69\xc7\x15\x47\x06\x5d\x6b\xd4\x8b\x49\x18\x3c\x38\xcc\xc0\x8f\x7e\x99\x14\xf6\x69\x12\x82\x32\x4e\x13\x4f\x35\x0b\x3a\x37\x69\x16\xa2\x4f\xbf\x72\x09\x3f\xf9\xf5\x3c\x08\xf3\x3c\xc7\xd2\x62\xee\x3b\xd8\x77\x25\xee\x85\xac\x09\x91\x09\xbc\xf1\xcc\x19\x4b\x04\xac\x2d\xbe\x20\x80\xf3\x6a\xcc\x40\xe9\xe1\xe3\x16\x64\xf7\x11\x93\xca\xa1\x59\x8a\x02\xc1\xad\x84\x83\x75\x6b\x1d\xdc\x22\xc8\x75\x53\xe3\x1a\x95\xc3\x12\xa4\x02\x6d\x4a\x34\xe0\x34\x34\x46\xdf\xcb\x12\x49\xd0\x6d\x6b\xa9\x11\x5b\xa8\x75\x25\x8b\x21\xc2\xcf\x3b\xf0\xa0\x71\x50\xb5\x8d\x03\x54\x9b\x10\xc4\xff\xa7\x11\x3f\x8b\x5c\x68\xbd\xd7\xc2\x88\xb5\x85\xae\x9b\x40\xe3\x1f\x4f\xb6\xdb\x3c\xcc\x05\x5d\x97\x1f\x15\xe6\x99\xb6\x5b\xea\x97\xd0\x75\x19\x9c\x88\x46\xe6\x37\x68\x1b\xad\x2c\x8e\x5b\x31\x27\x64\x25\x95\x7c\xc2\x6b\xe1\x56\x69\x23\xdc\x2a\xd4\x48\xd6\x37\x90\xed\x90\x62\x61\x74\xc8\x6f\xb0\xa9\x45\x81\xe9\xe1\x3b\x71\x4f\x20\xd9\x26\x13\x48\x66\xc9\x04\x4e\xdf\x65\x13\x48\x3a\x7a\xf5\x6f\x87\xdd\x3f\x1c\x63\xa3\x76\x3f\x3a\xfc\x8e\x62\xcf\x06\x1f\xf0\xa7\x61\xb7\x8f\xc9\x24\x14\x1c\x9f\x54\xbe\x9a\xc2\x29\xc1\xbe\xf8\xa7\xd9\x19\xbc\xf1\x8b\x5b\x7f\x6c\xce\xb8\xe4\xc2\x34\x90\x66\x94\xdf\x47\xc3\xe7\xf9\x8f\x03\x3f\x3e\xf4\xe0\x2c\x38\xd2\x1f\x2e\x7c\xa0\x70\x54\x15\x42\xfe\x05\xdd\x4a\x97\x90\x7c\xb8\x5c\x24\xf0\xcf\xa5\xe6\xdf\x2d\xa6\xbb\xa1\xc8\x67\x8b\x72\xd4\xa3\x6d\x3a\x8c\x27\x52\x95\xf8\x38\x81\x57\x6e\xd3\xf0\x78\x72\xa1\x95\x6d\xd7\x68\xbf\x60\x29\xb9\x9f\x73\x1a\xca\x65\xa0\xec\xba\x49\xc8\x89\x64\xbb\x25\x26\x7e\xe0\x85\x2c\x8b\x87\x3c\x3a\x3a\x0e\x0c\xed\x8d\xd1\xde\xfa\xa1\xe1\x15\xbb\xc3\xe6\xcf\xce\x20\x3d\x70\x29\xa3\x79\xd6\xd3\x59\x2c\x5a\x23\xdd\xe6\x3d\xcd\x3f\x92\x11\x66\x83\xe7\x47\xd6\x7b\xa6\x10\x93\x9e\x04\xb8\xa2\x5e\x95\xb8\x24\x4e\xf6\xe7\xb8\xdc\x1e\xce\x61\xae\xc1\x3f\x99\x6d\x90\xc4\xc7\x1d\x5e\x1b\xdd\xd8\x9c\x0f\xdb\x24\x8c\xaa\x9e\x69\x17\xa2\x91\x7b\x5d\xc7\x70\xc0\x19\x0c\x83\x2f\x2f\xa4\xd4\xa0\x46\x71\x9a\x17\xba\x41\xcb\x3b\xcf\xa2\x64\x69\xcf\xbb\xcd\x54\x2f\xc4\x86\x49\x47\xd1\xe1\x56\x1c\xd4\x5e\x86\xe1\xc8\x37\xd0\x85\xbe\x43\xc5\x67\xfb\xfe\x40\xfb\xd7\x1e\x07\x86\xae\xf3\xfd\x9d\x7e\x33\x8f\x95\x0f\xff\x0b\x10\x1c\x26\xe8\x4b\x50\x1d\xc8\x1c\x26\xc3\xe8\xc5\x12\xe0\xb9\x72\xa8\xa8\xe3\x34\xa3\x3a\xfb\x5b\x59\xf9\x76\x1b\x4a\xb0\xeb\xd2\x51\x03\x3c\x98\xfe\x69\x8d\x60\x86\xbd\xa6\xfb\x6b\x38\x24\x3e\xd3\x19\x71\xbc\x9d\xf7\x0d\xeb\xe8\x6e\x96\xc5\x43\x13\xee\x7b\xab\xb7\x38\x34\x48\x6a\x79\xfd\x95\xe0\xf8\xf1\xc3\x2b\xc3\x59\x1e\xba\x5b\xe8\x72\x71\xe4\x1b\x24\x9c\x5c\xf0\xff\x38\x22\x5e\x34\x70\xe2\x0f\x53\x7e\x89\xa3\x85\x74\x75\x3f\x50\xc6\xd1\x7f\xd0\x58\xa9\xfb\x1e\x1f\xec\xf8\x8a\x0f\xa4\x88\x4b\x88\x5d\xb0\x20\x40\xe1\xc3\x91\x9e\xec\x49\x53\x7b\x5f\xec\xda\xf0\xbe\x19\x19\x9c\x10\xdb\x36\xe6\xa9\xc1\xef\xe5\xef\xf1\xb6\xe5\x23\x86\x2e\x8e\xf9\x1c\xdd\x17\x5d\x62\xca\xf7\x07\xac\x51\x58\xa4\xf7\x30\x07\x8a\x46\x72\xdb\x3e\xbf\xbe\x22\x06\xef\xec\xec\xf9\x69\x70\x5f\x4c\x06\xf9\x94\x71\xef\xa5\xe5\xf9\x8b\xab\xc5\xaf\xf7\x5c\xb4\xc2\x38\xcc\x20\xa1\x3b\xf7\x95\x5a\xea\xdc\x03\xd3\x75\x3c\xe6\x06\x5c\xc6\xfb\x3d\x54\x9e\x82\x2c\x9b\x4e\x43\x13\x04\xbe\x22\x03\xe1\xbc\xbb\xac\xd0\xac\x51\xb2\x9f\x6b\x5d\x22\xbb\xff\xcc\x7b\xe6\xcb\x6f\xb0\x92\xd6\xa1\x49\xf9\xbc\xf6\x39\xec\x4f\xa7\x09\x28\x59\xef\x70\xc8\x43\x44\xcf\xe0\xcd\x28\xa6\x24\xe8\xbc\x2c\xcd\x0c\xfa\xbf\x1e\x85\xb2\x34\x68\x2d\xf9\x13\x66\xca\x40\xf2\x5c\x0f\x01\x8b\xa2\x5c\xc8\x35\xea\xd6\xcd\x00\xde\xfd\x0c\x27\xe0\xe4\x1a\xa9\x6b\x68\x55\x12\xc5\x0f\x23\x1d\x0e\x24\x47\x28\xc8\xcc\x51\x94\x87\x2b\x59\x1f\x0a\xf6\x79\xa4\xfc\xc8\xe5\xcd\xde\x17\x61\xa6\xdc\x64\x03\xca\x03\x5d\x98\x46\x9f\x06\x94\xe3\xb1\xb8\xf1\x05\xe3\xe9\xd9\x0d\x63\x2c\x39\x8b\x87\x0a\x14\x8d\x0c\x69\x7f\xd3\x2a\x30\xad\xda\xaf\x3d\xba\x0f\x38\x78\x90\x75\x0d\x35\x05\x49\x81\x56\x80\xd2\xad\xd0\xf8\xab\x81\xf6\xff\xe7\x50\x62\x83\xaa\xa4\xd1\x49\x2b\x12\x47\x52\x42\x29\x34\xc2\xd2\xc5\xc1\xe9\x50\x2f\xfd\x3d\x56\x70\x6d\x64\xa4\x39\xcd\x00\x8d\xd1\x86\x20\xaa\x75\xc5\x29\xb7\x4c\x13\x2e\x2a\x55\xc1\xdb\xd7\x16\x4e\xe1\xb5\x7d\x4b\xea\x85\x8f\x2b\xbc\xb6\xc9\x04\x84\x4f\x5c\x7a\x08\x19\x4a\x8f\xde\x74\xce\x80\x8c\x63\x22\x02\xd8\xf9\x95\xe2\x53\x12\xd9\x78\x8a\x47\x8f\x43\xcf\xf3\x99\xdd\x3c\x57\x25\x67\x57\xca\x51\xf8\x1b\xa2\xc5\xe7\x79\x3a\x28\x58\x7c\x9e\x5f\xa0\x71\xbf\x49\x6f\xd4\x6e\xf5\x13\x6e\x68\xb1\x1f\x07\xe7\xab\xd6\x95\x74\x15\x67\x70\x2b\x23\x0a\x5c\xb6\x75\xbd\x01\xdb\x6f\xec\xc7\xe1\x10\xb4\x9e\x7f\x8c\xdc\xa1\x99\x03\x4d\xf8\x76\x96\xff\x2a\x8a\xbb\xca\xe8\x56\x95\x69\x96\xed\xe2\xfe\x43\xba\xd5\x5c\x56\xfd\x0d\xf0\x58\x16\x3c\x48\xb7\x82\xf9\xd5\x87\xc5\xe5\xcd\x17\x7f\x1f\xa4\xb8\x88\xd6\xe9\xb5\x70\xb2\x10\x75\xbd\x89\x87\x86\x50\xe6\xb0\x58\xe1\x8e\x75\x97\x3d\x34\xde\x8a\x41\x8e\xff\x64\xc7\x1f\x3f\x8e\x00\xd0\x67\xd1\x03\xde\x0e\x18\x4c\xa7\x70\xe5\xde\x5a\x68\xb4\xb5\x92\x5a\x8f\xd3\xa0\x1b\x1a\x75\xc8\x02\xce\x34\x10\x6a\x03\xaa\x5d\xdf\xa2\xd9\x61\x49\xd8\xf9\x81\xe8\x61\x25\x8b\x15\xdb\xc4\xf6\x3e\x62\x41\xf7\x55\xad\x10\x6e\x37\xfc\x4f\x2c\x1d\x9a\x5e\x71\x70\x61\x25\x2c\xdc\x22\xaa\x9d\x40\xdb\x16\x05\x5a\xcb\x16\x1f\xc9\xe7\x7d\x44\xd3\x81\x2d\xcf\xf3\x70\xe1\xe5\xa0\x8d\x62\x67\x65\x75\xc1\x97\xd5\xb5\xb8\xc3\xb4\x58\x09\x05\xda\xe6\x73\x46\x68\x02\xef\x32\xa6\x50\xa2\xce\xbf\x6a\x27\x97\x9b\x94\xe9\x27\x10\xbe\x75\xe6\x01\x52\xaa\xec\x4a\xf7\x97\x6a\xca\xef\x7f\x9d\x32\x25\x75\x9e\x5d\x3e\x50\x56\xa7\x44\x8b\xc6\x90\x4e\x91\x73\x0d\x72\xa9\xd0\xd2\x4f\x67\xd4\x79\x99\x7f\xb7\xc2\x3d\xf7\xd2\x18\xdf\x76\x2f\x6a\x6d\x43\x4b\xeb\xf3\x0e\x8d\x89\xc3\x05\x35\x8e\x28\xd2\xbf\x4f\x60\xe9\xbf\x35\xf1\xec\x37\xa0\x40\x4c\x41\xf3\x92\xd5\x1e\xd1\x7b\x54\x68\x58\x53\xb2\x8e\x3b\x0a\xdf\xbd\x5c\xcf\x60\xe9\xce\x2a\x1d\xff\x2f\x00\x00\xff\xff\x34\x6e\x24\x38\x45\x16\x00\x00")

func templatesApiGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesApiGotmpl,
		"templates/api.gotmpl",
	)
}

func templatesApiGotmpl() (*asset, error) {
	bytes, err := templatesApiGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/api.gotmpl", size: 5701, mode: os.FileMode(420), modTime: time.Unix(1505162634, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesConfigGotmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x53\x4f\x6f\xe3\x2e\x10\x3d\x9b\x4f\x31\x3f\x1f\x1a\xfb\xa7\xda\xa9\xf6\x54\x55\xca\x21\xdb\x3f\xda\xaa\x3d\x44\x4a\xb4\x7b\x26\x78\xc0\x28\x18\x2c\xc0\xa9\xa2\x36\xdf\x7d\x05\xb6\x5b\x27\xed\xee\x61\x1d\x29\x12\x03\xbc\xc7\xbc\xf7\xa6\xa5\x6c\x47\x05\xc2\xeb\x2b\x94\xcb\xd5\xe3\x6a\x58\x1e\x8f\x84\xc8\xa6\x35\xd6\x43\x46\x92\x94\x37\x3e\x25\x24\x49\x85\x69\x77\xa2\x94\x7a\x4e\x15\x32\x5f\x9b\x86\xba\xf9\x4e\x6a\xd1\x4a\x5d\xee\xbf\xa5\x24\x27\x84\x19\xed\xe2\xa5\x0a\x39\xed\x94\x5f\x56\x95\x45\xe7\x60\x01\xe9\xcd\xf5\xd5\xf5\x55\x3c\x34\x9f\xc3\xad\xd1\x5c\x0a\xa8\x90\x4b\x8d\x0e\x7c\x8d\xc0\xfa\x92\x69\xbd\x34\xda\x01\x37\x36\x96\x97\xab\x47\x70\x68\xf7\x68\x4b\xe2\x0f\x2d\x8e\x57\x9d\xb7\x1d\xf3\xf0\x4a\x92\x91\xe3\xe3\x73\xde\x4a\x2d\x48\x72\x87\xdb\x4e\xc0\xf4\xdb\x1a\xa3\x48\xf2\xa8\x1d\xb2\xce\xe2\x8f\xcd\x66\x35\xad\x2f\x3b\x5f\xdf\x49\x47\xb7\x0a\xab\x69\x7d\xf3\xbc\xbe\x45\xeb\x1f\xa4\xc2\x33\x86\xcd\xf3\xfa\x09\x0f\x93\x8d\xf7\x9d\x5f\xa8\xd4\x93\x36\x2f\xfa\x1d\x30\x62\x1d\x63\xfb\x2b\x6a\x1d\x42\x1b\xfe\xdd\xd0\x78\x67\x69\x68\x1c\xb8\x35\x0d\x30\xd3\x34\x54\x57\x4a\x6a\x04\xae\xa8\x70\x25\xe1\x9d\x66\x90\x31\xf8\xbf\xef\x3f\xef\x31\xb2\x1c\xd0\x5a\x63\x83\x0e\xa3\x15\x0f\x8a\x8a\x2c\xad\x42\xef\xe9\x25\xa4\xf7\x3a\xd0\x43\x5c\x83\x32\x42\x48\x2d\x80\xea\x0a\xda\xd6\x1a\x0e\x0d\x7a\x2b\x99\x2b\xd3\xbc\xfc\x6e\x8c\xfa\x49\x6d\x76\xc1\xca\xa8\x5c\x7e\x8e\x49\x7b\xa5\x03\xea\x28\xba\x37\xa0\xa4\xf3\xa8\xc1\xe8\x4b\xc0\x52\x94\x10\x8d\x06\x63\xe1\xaa\x8c\xbf\xb8\x0e\xf8\x24\x49\xee\xfa\x58\x64\xa7\xf1\xc8\xcb\x75\x54\x6d\x20\x1f\xab\xe7\xf4\x72\xb0\xad\xa8\xbd\x6f\xc3\x23\xd6\x68\xf7\x92\x21\x18\xad\x0e\x10\xcc\x3c\xeb\x62\xea\xf3\x27\x34\xaf\x5c\xc1\xd0\xfa\x82\x4b\x85\x01\x6d\x45\x7d\x1d\xfa\xd9\x3c\xaf\x21\xd8\x0d\x61\x03\x3a\x87\x15\xbc\xd4\xa8\x63\x0a\x83\x76\x01\x6d\x3d\xf4\x73\xf2\xee\x49\x4c\xbe\x64\xdb\xe1\xe1\x4b\xb2\x27\x3c\xfc\x0b\xd7\x10\xbc\x4f\x54\x55\x1f\xb8\xe2\x05\x95\x2a\x76\x21\x82\x81\x70\x88\x21\xd0\xce\x9b\x86\x7a\xc9\x60\x5e\x7e\x9c\x00\x8b\xce\x74\x96\xa1\x1b\xc8\x26\x2a\x7e\x4a\xf2\x1f\x19\x69\xe7\xeb\x33\xae\x3a\x0e\x32\x55\xea\x6f\x0c\xd3\xb9\x9b\x80\x0f\x09\x27\x24\x91\x1c\xfe\x3b\xb5\x13\x2e\x2e\x20\x3b\x91\x1c\x16\x0b\x48\x53\x78\x7b\x83\xa9\x3a\x7d\x35\x0f\xf3\x91\x58\xf4\x9d\xd5\xc0\x1b\x5f\xde\x87\xa1\xe1\x59\x3a\x2b\x8a\x93\x1c\xcc\xe2\x64\x0c\xd5\xd1\xaf\x19\x34\x9d\xf3\xb0\x45\x70\x2d\x32\xc9\xe5\xe8\xd2\xac\x28\x4e\x32\xb9\xe0\x54\x39\x9c\xa5\x39\x49\x8e\x84\x8c\x7c\x5a\x86\xb1\x9f\xcf\x61\x2f\x9b\x1b\xe0\x7e\x21\x0c\xf9\x1d\x00\x00\xff\xff\x8a\x4f\x33\x73\x79\x05\x00\x00")

func templatesConfigGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesConfigGotmpl,
		"templates/config.gotmpl",
	)
}

func templatesConfigGotmpl() (*asset, error) {
	bytes, err := templatesConfigGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/config.gotmpl", size: 1401, mode: os.FileMode(420), modTime: time.Unix(1502998105, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesParameterGotmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5b\x6d\x73\xdb\xb6\x93\x7f\x6d\x7d\x8a\xfd\xf3\xda\x0c\x99\x93\xa9\xdc\xff\x3a\x7d\xa1\xab\x3b\xd3\x38\x4e\xe3\x6b\x9a\xe4\xe2\x26\x7d\x91\xc9\xb4\xb0\x08\x49\x68\x48\x80\x06\x20\xdb\x3a\x0d\xbf\xfb\xcd\x02\xe0\x03\x28\x88\x96\x1c\xf7\xda\xeb\x35\x6f\x22\xe2\x61\xb1\xfb\xc3\x62\x9f\x00\x6f\x36\x90\xd1\x39\xe3\x14\x22\x95\xb3\x19\x2d\x89\x24\xc5\x35\xc9\x59\x46\xb4\x90\x51\x55\x8d\x36\x1b\x60\x73\x10\x12\xd2\x1f\x19\x3f\xd7\xb4\x50\x90\xfe\x48\x6e\xed\x2f\xdb\x3f\x23\x05\xcd\xd9\x7f\x53\x48\x5f\x91\x82\x42\x55\x5d\xe0\xc7\xf4\x04\x18\xd7\x5f\x7f\x15\xe7\x94\xc7\x96\x0a\xe1\x19\xc4\x5c\x68\x48\xcf\xd5\x77\x52\x92\x75\xe2\x3e\x5f\x10\xf5\x8c\xa9\x99\x64\x05\xe3\xb8\x70\xd2\x0c\x3b\xe7\x9a\xca\x39\x99\xd1\xb6\xe9\x42\x4b\x4a\x8a\x04\x7f\xbe\x5a\xe5\x39\xb9\xcc\x71\xcd\xc7\x9b\x0d\x50\x9e\x41\x55\x6d\x36\x90\xbe\x27\xf9\x8a\x9e\xdd\x96\x92\x2a\xc5\x04\x87\xaa\x4a\x92\x51\x33\xc2\x09\xd5\x4a\x54\x55\x23\x36\x07\x2a\x25\x72\xed\xc4\xa7\x4d\x37\x72\x9f\xbe\x21\x7a\x09\x55\x35\x86\xcd\x06\x4a\xc9\xb8\x9e\x43\xf4\xe5\x55\x04\xe9\x4b\x31\x23\xda\xae\x61\x3a\x83\x68\x98\x9e\xee\x7a\xc9\x7f\x98\xe5\xfe\x71\x02\x9c\xe5\xb0\x19\x01\x48\xaa\x57\x92\x63\xeb\xa8\x0a\xb0\xda\x81\x3c\xc4\xaa\xeb\x7e\x20\x56\x1b\x7a\x87\x33\xfa\x8e\xb3\xab\x15\x1d\xe2\xb5\x33\xe2\x30\x76\xff\x68\x0d\x3a\x10\x89\x33\xbe\x2a\x76\x40\x80\x5d\xff\xa7\x64\xb7\xfa\xeb\x24\x3a\x04\x88\xf6\x57\x6d\x67\x1c\x08\x4c\xf0\x37\xc8\xb1\x66\xd7\x34\xb2\x43\xdc\x91\x7c\x49\xf9\x42\x2f\x77\x1e\x49\xdb\xed\x2c\x4a\x0d\x60\x07\xcb\xcd\x86\xe6\x8a\x56\x55\x14\x6d\x36\x94\x67\x7b\x82\xeb\xc3\x11\x77\xf1\xe8\xc3\x61\x56\xdb\x9a\x92\x74\x11\xb4\xbd\xa7\x2b\xa5\x45\xf1\x5c\xc8\x82\x68\x4d\x25\x54\x55\x7a\xa1\x25\xe3\x8b\xb8\x1d\x6c\x4f\x5b\x2b\xf4\x9d\xd8\x1a\x91\x6a\xb0\xc8\xed\x20\x58\x75\xf7\x5f\x0b\xac\x56\xe8\x83\xc0\x7a\x63\xe8\xf2\x30\x54\xae\xf3\xaf\x03\xd4\xaf\x9b\x4d\x2b\xf1\xaf\x87\x69\x15\xe3\xac\x58\x15\x3b\x0f\x20\x76\x5a\x6e\xe8\x15\xa4\x17\x37\x64\xb1\xa0\xf2\xa7\x75\x49\x21\x62\x5c\xd3\x05\x95\x78\x9e\xcf\xb9\x6e\xd8\x79\x68\x58\x87\xd6\x65\x76\xdd\x5c\x21\x7c\xf3\x5c\x90\x96\x8d\xaf\xbf\x8a\x43\x18\x0f\xef\x4a\x52\x9f\x50\x8b\x89\xf9\x3a\xbb\x9d\xe5\x2b\xc5\xae\x69\xd3\x7c\xe8\xb1\x1d\x00\xd8\x76\xfe\xbf\x03\xb8\xc6\xa4\x07\x70\xdd\x7c\x18\xc0\xab\x5c\xb3\x32\xa7\xaf\xe7\x3b\x30\x6e\xfa\x1f\x0e\x38\x83\xc4\xe7\x00\xd0\xe1\xf9\x20\x61\xd1\x29\x0f\x47\x19\x0f\xa9\x19\x9f\x17\x84\x1c\x02\xcb\xc1\x9e\xa1\xe5\xfd\x5f\xae\xa3\x1a\x97\xbd\xa1\xac\xff\x6f\xe2\x94\x52\x8a\x92\x4a\xbd\xee\xa5\x44\x9d\x00\xef\x5c\x35\x11\x8c\x85\x56\xd3\xa2\xcc\x89\xde\x15\xe4\xa4\x76\x94\x1f\x25\x86\xe4\x0b\x6d\xa6\xed\x37\x1a\x6b\x76\x10\x65\x8e\x36\x9b\x66\x8f\xaa\x2a\xb2\x0d\xee\xdc\xda\xf1\xa6\x35\x84\x6e\x03\xe1\x18\xe6\x66\xa4\x1a\x46\x2a\xc0\xb7\xd9\xfe\xbe\xe0\xa1\x2c\xb2\x2b\xf8\x71\x2f\x2c\xac\xd1\xbe\x64\x3c\x2b\x6b\xa8\xcc\xfc\x68\x67\x04\xd9\xae\x81\xb3\xac\x55\x1a\x5d\x13\x89\x3a\x70\x4d\x24\xc7\x5c\x26\x3d\x5d\xb2\x3c\x0b\x44\xb2\x6f\x4d\x24\xfb\xbd\x30\x76\xad\xaa\x46\x73\x21\xa1\xcd\x71\xed\xac\x17\x44\xbd\x6f\x36\x50\xd5\xad\xa7\x82\x5f\x53\x89\x3b\xe4\x1a\x42\x5b\x87\xc4\xcf\x79\x46\x6f\xdf\x13\xf7\xe9\x2c\xe5\x2f\xbe\xae\xde\xc9\xe7\x7b\xdc\x7d\x49\xf8\x82\xee\x35\xfc\xd4\xec\x58\x5f\x90\x7a\x93\x10\x75\xd3\x5b\x8b\xb2\x93\xca\xf4\x04\xd4\x0d\x59\xa4\x17\x65\xce\xf4\xd3\xb5\x15\x2d\xde\x8b\xe1\x6d\xfb\x51\xe3\x96\xe7\x74\x86\x50\x5a\x6a\x18\xd6\x58\x6e\x42\x6a\x53\x6f\xa9\x9d\x0c\x8e\xf1\x63\x0b\x63\x23\x07\x6a\x60\x7f\x57\x9a\xce\x3b\x59\x1d\xd7\xa7\xab\x83\x48\x43\xc6\x7a\xd3\xbb\xc5\x45\x19\xdc\x39\xed\x9c\x99\xee\xa9\x11\x52\xa5\xe7\xdc\x9c\x03\xd4\xb6\xb8\x5d\x6d\x67\xda\x67\xbb\x3d\xbb\x1b\xb5\xd3\x1a\xad\x8d\xf6\xd3\x21\x64\xd1\xc3\xaf\x85\x6d\x5b\x77\xef\x01\x9f\xb3\x1c\xe9\x1b\x22\x15\xfd\xeb\xa2\xb6\x3f\x32\x4e\xa7\xee\x86\xc1\xd2\x73\xa6\xcd\x2d\x65\x3f\xfa\x27\x63\x97\x1b\xf2\xcf\xc7\x3e\x76\xef\x04\x48\x59\x52\x9e\xed\xb5\x51\x6f\xf7\xc5\xaa\x6b\xa3\x4b\x32\xfb\x44\xac\xc1\x4a\xdf\xb8\xdf\x28\xd2\x64\x02\x3f\x2d\x99\x82\x39\xcb\x29\xdc\x10\x05\x0b\xca\xa9\x24\x9a\x66\x70\xb9\x06\xbd\xa4\xc6\xe6\x2c\xa8\x04\x2d\x44\x9e\xe2\xf8\xb3\x8c\x69\xc6\x17\xa0\x9b\x79\x05\x5b\x2c\x35\x94\x52\x5c\x53\x98\xaf\xb4\x21\xb5\xa4\x1c\xd6\x62\x05\x92\x1e\xcb\x15\xf7\x28\xd5\x4b\xc0\x4c\x14\x05\xe1\xd9\x68\xc4\x8a\x52\x48\x0d\xf1\x08\x20\xe2\x54\x4f\x96\x5a\x97\x11\xe2\x1d\x2d\x98\x5e\xae\x2e\xd3\x99\x28\x26\x0b\xc6\x8f\x17\x82\xb3\x19\xfe\x8a\xfa\x9d\xe2\x58\x94\x94\x93\x92\x4d\xac\xa2\x0e\x0c\xa8\x1d\xf7\xc0\x10\xb9\xe2\x9a\x15\x7b\x8c\x98\x14\x2c\xcb\x72\x7a\x43\xe4\xd0\x60\x94\xbc\xdf\x5d\xb0\x4f\x9f\x68\x2e\xd4\x8c\x48\x23\x9a\x43\x67\x42\x4a\x66\x44\x57\x5a\xce\x0b\xbd\x93\xa2\xe9\x8d\x9c\x4e\x5a\x67\x94\x3e\xa3\x73\xb2\xca\xf5\xb9\x41\x53\x59\x1f\xe7\x9d\xc6\x5a\x25\x3b\xda\xed\xe6\x7e\xf1\x89\xae\xc7\xf0\xc5\x35\xaa\x11\x1e\x95\xd4\x23\x82\xbd\x78\x86\x7a\xf4\xdc\xf0\x1e\xd5\xc4\x68\xd5\xd3\x95\x62\x9c\x2a\xf5\x52\x2c\xd8\x0c\xe7\x11\x35\x23\x5e\x45\x13\xe8\x2d\x9d\xad\x34\x55\x46\x39\x66\x42\x52\xc8\x71\x30\x88\xb9\x69\x91\x14\x8f\x59\x86\xc4\xa4\x58\x69\x8a\xf4\x4b\xc1\xb8\x4e\x47\xf3\x15\x9f\xed\xb1\x42\x3c\x07\x1c\x19\xcf\xf4\x2d\x3c\x5e\x30\x8e\xae\x44\xd3\x5b\xdd\x04\xde\x92\x98\x52\xe8\x18\x4a\xfb\xf3\x71\x90\x8c\x1d\xd7\x08\x98\xc0\x63\x52\xb2\xf4\x2d\x55\xa5\xe0\x8a\x26\x80\x94\x5f\x10\x9e\xe5\x54\x3e\x47\xc6\x36\xa3\x23\x67\x33\x0d\x9f\x5b\xcb\x27\x38\xe2\xa8\xcf\xc4\x64\xd2\x1e\x0c\xc7\xce\x5c\x8a\x02\x24\xbd\x5a\x51\xa5\x47\x47\x47\xae\x75\x7a\x02\x8f\x86\xf8\xac\x46\x47\x47\xce\x0b\xd8\x19\x29\x3a\xee\xb7\x96\x0c\x32\x93\x8c\x8e\x8e\xfa\x86\xfe\xc8\xcc\x79\x7d\xf9\x1b\x4e\xa3\x52\xa6\xf1\x63\x67\xf0\x4f\x45\x51\x0a\xc5\x34\x3d\xc3\x6f\x9c\x7b\x54\x4a\x71\x99\xd3\x02\x87\x22\x12\x6f\xec\xa7\x21\x72\xf4\x13\xd3\x39\x9d\x02\x44\xef\x78\x29\xc5\x8c\x2a\x65\x52\x8a\x33\xae\x99\x5e\xa7\xd1\xd8\x0c\xba\xd0\x44\xaf\xd4\x14\x18\xd7\xb1\x5d\x36\x3d\x15\x19\x8d\x93\xc4\xf6\x3f\xa3\x9a\xb0\x7c\x0a\xae\xcf\xac\x1c\xdb\x3e\x94\xee\x68\xa6\x6f\xd3\x9f\x25\xd3\x54\xa6\x2f\x28\xc9\xa8\x8c\x93\xf4\x82\xea\x38\x32\x08\x73\x7d\x8c\x6e\x05\x83\x6e\x52\x96\x39\xb3\xbe\x67\xe2\xb8\xfe\xd7\xdf\x94\xe0\x51\x52\x93\xf9\xcf\x8b\xd7\xaf\x62\xd7\x95\x5a\xbe\xc6\xe0\xbe\xcd\x20\xbb\x95\x23\xbb\x72\xab\xe5\xd8\xa1\x4a\xe3\x6a\x11\xd3\x5d\x2a\xe5\xb2\x17\xa4\xa4\x6e\x98\x9e\x2d\x01\xa7\x19\x69\x0d\xea\x33\xa2\x28\xa0\xb9\x73\x6b\xbf\x12\x4e\x84\x69\xcd\xe0\x77\x97\x42\xea\x9f\x99\x5e\xda\x01\x71\x33\x1f\x69\x66\xf6\xc4\x4f\x3d\x69\x9a\x11\x63\xbb\xd8\x53\x91\xad\x13\x2b\x40\x35\xb2\x36\x7f\x40\x7f\x60\x26\xb8\x26\x8c\x2b\x20\x79\x6e\x0e\xe2\xa5\x58\xf1\xac\xd1\x49\x21\x4d\xe3\x66\x03\xcb\x55\x41\xb8\x77\xa2\xd1\x1f\x1a\xb0\x71\x0d\xbd\x2e\xd9\x8c\xe4\xb9\x71\x23\x8a\x02\x91\x14\xc4\x25\x92\xa6\x99\x55\x6d\x62\x25\x77\xaa\x39\x9a\x4c\x70\x9a\xb3\x83\x53\xb3\x1e\xd5\x54\x2a\xe3\xb4\xdc\x12\x23\x8d\x01\xc3\x10\xfb\x4a\xcb\xd5\x4c\xc3\xc6\x37\x8d\xed\x31\x7b\xec\xb6\xea\x19\xc5\x94\xb8\x74\x61\x09\x2e\xb1\xd5\xe2\x95\xf7\x90\x4b\x26\xa9\x33\x9c\xf5\xd7\x14\xb4\x5c\xd1\xfe\x58\x57\x1b\xb1\x43\xdd\xc7\xb4\x0e\x8e\xfb\x15\x14\xa8\xaa\x6f\xc0\x2b\xf2\xb7\x1d\x5b\x84\x6d\x55\xcb\x11\xb6\x1f\x01\xc2\xcd\xa8\x6f\x7b\x84\x9b\x8e\x2d\xc2\x4d\x8d\xc3\xd1\x76\xdf\xf0\x7a\x3e\xb5\x17\x64\xdd\x01\x01\x79\x6d\xe1\xb7\x91\x18\xec\xb7\x9b\xdb\xe9\x0e\x48\xe4\x4d\x65\xdc\x9f\xda\xe9\xee\x4f\x75\x45\x54\x3b\xd1\x7d\x4c\x5d\x84\x53\xf7\x04\x38\x6d\x2e\xc0\x2c\xa3\xe6\xb3\xe1\xb3\xee\x0c\xb0\xd9\x9d\xc7\xb8\x37\xaf\xed\xec\xcf\xeb\xdd\xb9\x01\xd8\x86\xb0\xda\x74\xc2\xe4\x11\xc0\xb9\x13\xa6\xd3\xda\x9f\x10\xc8\xdf\x46\x00\x6d\x2b\xd8\x66\x4b\x27\x30\xb8\x4f\xef\x05\x51\x2e\x86\xb0\x94\xdc\xc7\x74\xbb\x84\xd3\x0e\xeb\x86\x13\x8f\x27\x4d\x0e\x68\x2a\x4c\x17\xb3\x25\x2d\x88\x0b\x44\xda\x03\x7b\xfe\xcc\x05\x13\x0f\x76\x75\xf6\x9c\xe5\xd4\x1c\xf1\x43\x6e\xd3\x5c\xfa\xd1\x2d\x05\x84\x03\x95\x3e\xa7\x56\xac\xf4\x5c\x3d\x25\x8a\x22\x09\x7f\x95\xde\xa0\x9a\x91\x81\xc5\x3b\xe1\x98\x2d\x76\x55\xa3\x51\x20\x3e\x18\x30\x7b\xcf\xa5\x28\x4e\xf5\x2d\x2c\xa8\xb6\xf1\x54\xe9\x59\x43\x63\x6e\xb1\x79\xc1\xb8\x31\xf0\xf4\xb6\x0e\xa3\xee\x26\x1a\x08\x60\x86\x02\x25\xf4\x6b\x76\xf5\x31\xfc\x82\x0e\x12\x1d\xd3\xf7\xe8\x9d\x6d\x2b\xfa\x5e\x17\x1f\xb9\xf8\x24\x1e\x22\x97\x74\x2b\x5c\x26\xb2\x6c\xa3\x19\xb8\x14\x7a\x09\x18\xde\x28\xb3\x3d\x75\x64\xaf\x80\xd4\x71\xd3\x18\x98\x06\xa2\xd4\xaa\x30\x81\x26\xd1\x98\x75\x94\x39\xbd\xc5\xfc\x85\x2f\x14\x30\xfc\x2a\x28\xd7\x40\xc0\x95\x96\x70\x17\x63\x1b\x61\xa7\x6f\xe9\x82\x29\x2d\xd7\x89\x4d\x80\x31\x64\xb1\xca\x87\xac\xa0\x33\x54\x86\x00\x98\x50\x58\xe1\x62\x37\x2c\xcf\x61\xa5\x28\x62\x4f\x4c\x66\x54\x50\xbd\x14\x19\xa0\x33\x54\x16\x74\x93\x3a\xbf\xa5\x33\xca\xae\xa9\xac\xd5\x6c\x10\x05\xe8\x05\x71\xbd\x0d\xb1\xcc\x61\xc2\x7e\x4d\x24\xba\x7d\xf8\xf0\xd1\xb4\xb5\x45\x99\x46\x93\x5c\x6d\xc0\x14\x94\xac\x90\xaf\xe8\x8d\xb5\x09\xaa\x53\xb8\x1d\xb5\x53\x5f\x10\xf5\x5f\x2b\x2a\xd7\x0d\x89\x2b\x33\xdb\xe5\x40\x36\xf9\x54\xc8\x55\xed\xcb\xd3\x77\x6f\x5f\xa6\x66\x4a\x9c\xec\xa2\x88\x2b\x36\x04\xdb\xb2\x6a\x97\x8a\xa9\x5e\x58\xcf\x43\xa4\xc6\x09\xf1\xbf\xff\x13\xbe\xf9\x06\xfe\xf9\xa4\x5f\x13\xed\x86\xb4\x26\xaa\x38\x93\xf2\x95\xd0\xcd\x64\x57\xcc\xa8\xff\x75\x0a\xa8\x75\x53\xd5\x14\x62\x76\x71\x62\x18\xd8\x2e\xc6\x0e\x53\x1d\x1d\x55\xbe\xcc\x06\xad\x46\xf0\x11\xc0\x3c\xbb\x0b\x4d\x9c\x96\x74\x93\xac\x3e\xa4\xfd\x28\xc7\x37\xc3\x5e\x41\xd8\x56\x88\xdb\xed\xc4\xdd\x0c\x2a\xde\x18\xae\x96\x9f\x76\xf4\x98\x73\x7d\xa5\xf0\x58\xbf\xfe\xa1\xfb\x5c\xa2\x53\x44\x72\x45\xbc\x9e\x96\x9b\x64\x24\xe0\x0e\xe2\xc3\x99\xd8\x59\x1d\x07\x73\x00\x9a\xa2\x8a\xa4\xca\xd4\xc5\xda\xea\x51\x5b\x72\x3b\x57\xc8\x78\x0d\x84\x0c\xdb\xff\xe9\x09\x7c\xf8\xa8\x4c\x55\x7e\x83\xdb\x62\x86\x7b\x52\x57\xf7\x16\x3b\xbc\xe4\xd8\xc4\x07\x0f\x25\xa2\xcd\x91\x6a\x21\xef\xc7\x67\x57\x1d\x2d\xbd\x0f\xe6\x98\x9d\x12\x2e\x38\xc6\xf9\xb6\xf1\x07\xba\xf6\x80\xf9\xf8\xb0\x92\x34\x36\xc3\xe8\xb2\x6b\xab\x7d\xbf\xd5\xef\xad\x97\x53\xe1\xf7\x54\x96\xdd\x71\xe8\xac\xe3\x22\x48\x74\x87\x5e\xdf\xcd\x3b\xa6\xcd\xaf\xe8\x4d\xfc\xd5\x93\x27\x63\x88\x24\x25\x19\xe3\x0b\x5b\x2a\xfb\xf2\x0a\xe6\x84\xe5\x98\x38\x7c\x79\x1d\x6d\xd5\x4b\x63\x9f\xcf\xa4\x2e\xe9\x26\x06\x0e\x8b\x84\x5d\x38\xb4\x77\x61\xed\x6d\x2d\x0b\x0a\xb5\x79\x46\x34\x99\x06\x21\x19\x83\x05\x25\xdc\x6b\xfb\xaa\xde\xb6\x54\xd5\x3c\xdb\x75\x3c\xb3\x61\xf3\x31\xcf\x1e\xd4\x7e\xdc\x87\x8f\xcf\x51\xca\x9e\x1d\xee\x6b\xea\xdf\x16\x37\x7c\x88\x31\x4c\xeb\x1d\xe4\xbf\x35\xc8\x0f\x8e\x1c\x44\x4f\x45\xe6\xf4\xa5\xcd\xa3\xd8\xbc\x39\xcc\x2f\x88\x19\xd1\x35\xcc\x49\xe7\xa6\xb1\x9f\x7f\xb8\x0a\xc0\xbe\x26\xa3\x6b\x0f\x71\x19\xef\xc8\x77\xd8\xdc\x4a\x85\x3a\x4d\x67\xb7\xa5\x90\xda\x54\x4c\x2e\x45\xb6\xf6\xae\xf6\x7e\x14\x19\xcd\x55\x7b\x13\x91\xbe\xe3\x05\x91\x6a\x49\xf2\xcd\x06\xa3\x52\x56\xd6\x7d\xf5\x25\xd1\xd6\x94\xad\xdb\xee\x8b\x9c\xcd\xda\x9c\x3a\xee\x8b\x30\xb6\x65\x64\x8c\x99\x31\x1b\x90\x01\x93\x0e\xc1\x5a\x4f\x33\xec\xe4\x04\x98\x48\xcf\x5e\x3f\x6f\xc2\x3e\xd3\x5a\x9b\xfc\x7a\xd6\xde\xcf\x47\x93\x91\x8d\x10\x9d\x3d\xb7\x7c\xef\x54\x9b\x16\x7f\x0c\xf1\x11\xd1\xde\x7d\x39\xf4\x62\x57\x4c\x94\x4c\x41\xf0\x11\x0e\xee\xa9\xe8\xc1\xa2\xee\xf4\x74\x5d\xb1\xef\xf4\x65\x43\x68\x38\x38\x9c\x97\xf3\xee\x29\x86\x1d\xad\x09\xce\x6d\x91\xf8\x33\x79\x18\x43\x14\x39\x87\xbb\x03\x9f\xde\x6e\x75\x8f\x72\xdf\x3f\x07\x1d\x41\x7d\x37\x68\x3f\xe3\x40\x51\xa1\x5b\xde\xf0\xde\x0b\xe4\x8c\x28\x9a\x75\xae\x89\x6d\x22\xfb\xfa\xf2\x37\x3a\xd3\x49\x62\x33\x3b\xf8\xc5\x3e\x08\xf6\x5f\x3a\x6c\xe5\x9a\xdd\x17\x0c\x7b\x1a\x85\x5a\x11\x7c\xe3\x3a\xbc\x4e\xea\x32\x6a\x1a\x0f\x18\xca\x41\x63\x69\xff\x5d\x4a\x4a\x3e\x8d\xea\x8c\x2a\xb0\x0f\xde\x0f\xe7\x6a\xf6\x01\xb7\xe9\x68\xd0\x6d\x5a\xb6\xe1\x6d\x25\xc7\x03\xb5\xa7\x6c\x03\x92\x6d\xeb\x92\x41\x37\xa7\x1c\x07\x26\x78\x08\x9f\x34\x74\x0e\xb1\xde\x07\x16\xac\xaa\xea\x51\xc3\xc4\xa5\x35\xf6\x96\xb9\xfe\x75\x61\xa0\x16\xde\xd5\xf9\xff\x1d\x13\x51\x75\x79\xda\xbe\xcf\x6c\x7e\x77\x91\xfc\xb6\x01\xd2\x7f\xcd\xd0\x5c\x6e\xb5\x8f\x8a\xac\x1d\x91\x54\xa5\x69\x5a\x7b\x6b\x37\x89\xb3\xdc\x55\xe6\xbe\x98\xe5\x44\x29\x03\xf8\xf4\x04\xe2\xde\x26\x24\xee\x55\xd4\x56\x56\xde\xe6\xe4\x46\xf9\x3c\x1f\xef\x15\x31\xbd\xbf\xee\xe9\x3e\x66\x0b\x3f\x4a\x1b\xae\x29\x75\x98\xf5\xcb\x49\xc1\x7c\x94\xdc\x60\x86\xd0\x24\xbc\x63\x58\x12\xf5\x03\x5d\xc3\xa5\x10\x79\x13\xef\xc0\x8e\xea\xd8\xc6\x0b\x62\xea\x52\x6c\x93\x62\x27\x9e\xea\xb0\x39\xfc\xc3\x11\x0f\xed\xcd\xbd\xdc\xa9\xa7\x04\xa6\x14\x46\x6e\xc0\x4a\xd2\x51\x09\x2b\xa3\xa7\x16\xe4\x06\x13\x25\xdb\xf1\xa1\x3b\xe8\xf8\xdf\x3e\xb6\x74\xf7\x11\xcc\x76\x7e\x97\xe7\xe2\xe6\xac\x28\xf5\xda\xd4\x73\x7c\xf3\xd1\x3c\x1d\xac\x27\xb9\x27\x7f\xfb\xff\xdd\x89\x24\x37\xe1\x98\xb3\x53\x80\x0a\x44\xde\x31\xf4\x39\x07\x6b\x08\x2d\xd3\x35\x3b\xc9\x2e\xfe\x0d\x4c\x27\x10\x45\xb0\x81\xc9\x04\x28\xf6\xd7\xa5\xcf\x92\x28\x7b\x67\x28\xf4\x92\x4a\x68\xdf\x59\xaa\xae\x43\xf4\xae\x18\xdc\xcb\x40\xdf\x0a\x54\x55\x3d\xc0\x2b\x61\xf5\xd2\xfc\x36\xee\x69\xe3\x22\xa1\x6c\x8a\x6b\xef\x5c\x1b\x3b\xd8\x3d\x40\x5e\xe9\x3d\xae\xeb\xed\xc3\xd7\x1b\xdb\x0f\x4a\x13\xdf\x66\x87\xff\x30\x27\x60\x87\xef\xbe\xe2\xb0\xe7\xbd\xb1\xcc\xb0\x7d\x9f\xd1\x35\xd6\xa1\x3c\xdd\xb1\xde\x0f\x2a\x1b\x03\xb6\x6d\xd5\x9b\xcb\xa4\xf6\x9d\x9d\xd9\x52\xff\x2d\x5e\xf7\x15\x1e\x6a\xdf\xbd\x5e\x8b\xed\xfd\x47\x55\x5e\x67\xb3\xd5\x56\xef\x5b\x11\x86\x50\xdf\xe5\xe0\x8c\x68\x5b\xe9\xfa\xb6\x51\xf5\x21\xd8\x7a\x4f\xe7\x31\xe8\x3d\xec\xed\xf2\xf9\xa7\x46\xe8\x1e\x57\x6f\x03\xf7\x6c\xf5\x77\x0d\xba\x7f\xe1\x15\x1b\x38\xed\x4d\x4f\xcb\x6d\x62\xf3\x1a\xfb\xda\xfd\x9e\xfb\x29\xc9\xcd\x96\x3e\x3b\x43\xd3\x7d\x29\x7c\x57\xdd\xb3\x36\xc9\xc1\xc2\xc0\x50\x92\x1f\x30\xb8\x35\x23\x5e\xd8\x60\xc5\xec\x26\x05\x7f\x3e\xc7\xdd\x8b\xed\x7e\x77\x07\xdd\x18\x1f\x7a\x15\xb8\x9f\x8e\x8a\x55\xae\x59\x64\xed\xdc\x1e\xcf\xac\xa7\x8d\x03\xf7\x53\xe5\xab\xeb\x70\x9c\xbc\x47\x58\xb0\x6b\x6a\x38\x54\x80\x63\x70\xc1\xc2\x9e\x2f\x3f\x77\x3d\xea\xde\xb1\x6c\xe0\x79\x6d\xe0\x01\xf7\xd6\x51\x30\x85\x9a\xbb\xc3\x93\x16\x88\xbd\x58\xf7\xd2\x93\xdf\x4d\x31\xbc\xb0\x64\xc7\x43\x85\x8c\xce\xdf\xd7\xef\x16\xc3\x2f\xe4\x3b\xfe\x7c\x3f\x0c\xef\x87\xc5\xa3\x47\x66\x4a\xcd\x4f\x57\x91\x76\x1a\xb7\x7a\xb0\x57\xe0\xf9\xdc\x7d\xe0\x2c\xef\xa7\x6d\x5d\x5c\x07\x1f\xf7\x37\xa3\x76\x1a\xe3\xbb\x5f\x28\x7b\xf7\xbc\xa6\x2c\xf7\xc7\x9a\xe2\x6d\x5b\xec\xff\xc9\x0c\x46\x5d\xfd\xbf\x2c\x09\x73\x7e\x1f\x8b\xbd\x87\x3c\x77\xe4\x53\x7b\xbc\x39\x0f\x7a\x9c\xe0\x5f\x7b\xbb\x5f\x93\x09\x5c\xb3\x62\x0a\x73\x7d\xb2\x10\xa3\xff\x09\x00\x00\xff\xff\x00\x02\x05\xdc\x6e\x42\x00\x00")

func templatesParameterGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesParameterGotmpl,
		"templates/parameter.gotmpl",
	)
}

func templatesParameterGotmpl() (*asset, error) {
	bytes, err := templatesParameterGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/parameter.gotmpl", size: 17006, mode: os.FileMode(420), modTime: time.Unix(1502998105, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"config.yaml": configYaml,
	"templates/api.gotmpl": templatesApiGotmpl,
	"templates/config.gotmpl": templatesConfigGotmpl,
	"templates/parameter.gotmpl": templatesParameterGotmpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"config.yaml": &bintree{configYaml, map[string]*bintree{}},
	"templates": &bintree{nil, map[string]*bintree{
		"api.gotmpl": &bintree{templatesApiGotmpl, map[string]*bintree{}},
		"config.gotmpl": &bintree{templatesConfigGotmpl, map[string]*bintree{}},
		"parameter.gotmpl": &bintree{templatesParameterGotmpl, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

