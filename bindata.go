// Code generated by go-bindata.
// sources:
// config.yaml
// templates/api.gotmpl
// templates/config.gotmpl
// templates/parameter.gotmpl
// DO NOT EDIT!

package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _configYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x92\x4f\x4b\xc3\x30\x18\xc6\xef\x7e\x8a\x97\x9e\xb6\x83\x9d\xe7\xde\x04\x15\x14\x94\x81\xbb\x6f\xaf\xed\xd3\x18\x97\x7f\x24\x99\xa2\x25\xdf\x5d\x9a\x6e\x93\x4d\xd1\x0d\xd9\xed\x6d\xd3\xdf\xd3\x5f\x9e\x44\xf1\xbb\x5d\xc5\xea\x8c\x88\x9d\x53\xb2\xe6\x28\xad\xe9\x1f\x89\xce\xc9\xb0\x46\x45\xb5\x35\xad\x14\x2b\x8f\xfc\x96\x28\xd8\x95\xaf\x51\x51\xd1\x75\x54\xce\xb4\xbb\x92\x9e\x52\x9a\x44\x68\xa7\x38\x22\x4c\x06\xa0\x14\x36\x6a\xa7\x8a\x35\x15\xd9\x0b\xc4\x4c\x2d\xba\x8e\x5e\xac\x34\x37\x52\x61\xca\xf1\x99\xca\x59\x5e\xa4\xf2\x11\xfe\x15\x7e\xca\xf5\x92\x05\x28\xa5\x45\x4a\x1b\xbe\x95\x0a\xf3\x41\xa8\xd8\xfe\xa0\xd8\x11\x85\x7e\x42\xd3\xa0\x99\x07\x87\x7a\x4f\x96\x43\x40\xac\xc2\x1b\x0b\x01\x7f\x17\xac\xb9\xee\x3f\x3e\x81\xdb\x8e\xc4\x37\xc5\x90\x43\x0e\x2d\x92\x9d\x3c\x61\x8b\x43\x7a\xbf\xa2\x6d\x03\x15\x76\x4f\xbd\x41\x2b\x8d\xec\x6f\xc3\x8f\x4d\x66\xe4\x18\xa9\xfb\x1e\xf8\xd3\x69\x48\x18\x05\xc3\x4b\xf9\x01\x1a\x39\x0e\x35\xab\x7e\x2c\x1f\x58\x63\x3c\x1e\xd0\xb5\xb7\x75\xf0\xf9\xc2\xee\xb9\x3b\xf6\xac\x11\xe1\xc3\xa1\x4d\x6f\x89\xdf\xfb\x96\x2d\x89\x48\x23\x05\xd3\x6f\x4c\x84\x31\x5d\x50\x4a\x07\x1e\x44\x79\x39\xbd\xdd\xce\x9b\x61\xc0\xa1\x02\x8e\x08\xda\x83\x4d\xf3\xef\x42\xe7\x5f\x95\xe5\x6e\x3f\x03\x00\x00\xff\xff\x82\x4f\xcf\x1e\x17\x04\x00\x00")

func configYamlBytes() ([]byte, error) {
	return bindataRead(
		_configYaml,
		"config.yaml",
	)
}

func configYaml() (*asset, error) {
	bytes, err := configYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config.yaml", size: 1047, mode: os.FileMode(420), modTime: time.Unix(1501739664, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesApiGotmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x38\x4f\x73\xdb\xb6\x97\x67\xf2\x53\xbc\x72\x92\x94\xf4\xc8\x54\xdb\xa3\x66\x7d\xc8\x3a\x69\xea\x6d\x92\x7a\x2c\x65\x7b\x6c\x61\xf2\x89\xc2\x9a\x02\x58\x00\xb4\xac\x70\xf8\xdd\x77\xde\x03\x48\x51\xb2\xe2\xe6\xe7\x83\x05\x02\xef\xff\x7f\xa0\x11\xc5\x83\xa8\x10\xba\x0e\xf2\xb7\xb7\x37\xb7\xe1\xb3\xef\xe3\x58\x6e\x1b\x6d\x1c\xa4\x71\x94\x14\x5a\x39\x7c\x72\x49\x1c\x25\x0a\xdd\x7c\xe3\x5c\x43\x6b\x6d\xfd\xff\xb9\x95\x95\x12\x35\x7d\xd8\xbd\x2d\x44\xcd\x4b\x27\xb7\xc8\x5b\xce\x48\x55\xd9\x24\x8e\xa3\xa4\xd2\xb5\x50\x55\xae\x4d\x35\x7f\x9a\x6b\xd1\xba\xcd\x2f\x7e\x5f\xba\x4d\x7b\x9f\x17\x7a\x3b\xaf\xa4\xba\x24\x7e\x46\xde\xcf\x9b\xc6\xe8\x75\xf2\xfc\xbc\xd2\x4a\x16\xb4\x4a\xe2\xa8\x92\xca\x13\x82\x29\xd4\x57\x51\x0b\x55\x6a\x86\x1e\xf8\x1c\x91\xd9\xca\x87\x07\xac\xb5\x2d\x84\x61\x20\xbb\x13\x55\x85\x66\xbe\x95\x65\x59\xe3\x4e\x18\xfc\x4e\x04\xd1\xc8\x24\x8e\x6a\x5d\x1d\xf1\xb7\xd2\xb4\x8d\x45\x35\xaf\x75\x65\x5a\xfb\x9d\xb4\x9c\x11\x85\x54\xd5\x09\xb4\x6e\x50\x85\x93\xe9\xfa\xb2\xd2\x49\x1c\x75\x9d\x11\xaa\x42\xc8\xdf\xe1\x5a\xb4\xb5\xbb\x61\xaf\xd9\xbe\xef\xba\xc6\x48\xe5\xd6\x90\xbc\xfe\x27\x81\xbc\xef\x09\x16\x55\xe9\x17\x1e\xe9\xd5\x03\xee\x67\xf0\xea\x51\xd4\x2d\xc2\xe2\x0a\xf2\x09\x36\x9d\xf5\x3d\x05\xc6\x94\x8e\x87\x9d\x12\xcb\xe2\x78\x3e\x87\x3b\xdd\x3a\xb4\x50\xe2\x5a\x2a\xb4\x20\xea\x1a\xdc\x06\xc1\xf8\x6d\xbd\xe6\xaf\x25\x9a\x47\x34\x60\xd1\x3c\xca\x02\xf3\xd8\xed\x1b\x1c\x30\xad\x33\x6d\xe1\xa0\x8b\xa3\x8b\x4a\xaa\xfc\xbd\xaa\xa4\xc2\x89\x7a\x7f\x34\x68\x84\x93\x5a\xb1\x70\xd0\x08\x8a\x33\xf9\x15\x21\xff\x2c\xb6\x14\xb0\x13\x0a\x9e\x04\x13\x36\x1f\x8c\x6e\x9b\x38\x8a\xba\x0e\xe4\x1a\xf2\xb7\xad\xdb\x68\x23\xbf\x62\x09\x7d\x4f\x1f\x40\xa0\xbf\x09\x55\xd6\x68\x7e\x6d\x55\x01\xa3\x91\xa2\x5b\x6d\x1d\x3c\x27\xd5\xc7\x03\x48\xcf\xaa\x17\x5a\xad\x65\xd5\x1a\xfc\x13\xeb\xfa\x77\xa5\x77\x0a\x50\x89\xfb\x9a\xcc\xa0\xca\xc3\xb1\x85\x79\xbe\xc3\xba\xbe\x7c\x08\x30\x65\xa3\xa5\x72\x36\x8f\xd7\xc4\x37\x35\x70\xe1\x6d\x91\x9d\x21\x99\x6e\x50\xd4\x6e\xc3\x12\x12\x78\x9a\xc1\xbd\xd6\x75\x46\xea\xee\x46\xbe\x8b\x2b\x30\x39\x8b\x99\x26\x53\x66\x49\x16\x47\x64\x97\x11\x32\xff\xf0\x7e\x95\x26\x73\x5b\x6c\x70\x2b\x2e\x4b\x69\x0b\xfd\x88\x66\x9f\xcc\x3c\xf1\xc2\x3d\x79\xc5\xaf\x7d\xe2\x33\x9b\x28\x1a\xe1\x88\xd1\xc4\xdc\x51\xb4\x64\x42\x5f\xee\x3e\x02\xf8\x74\x87\xbf\xff\xcf\x6a\xb5\x48\x3c\x87\xbf\x5a\x53\x27\x7f\x4f\x20\x57\xe4\xf9\xb3\x90\x14\x13\x01\xf4\xcb\x0d\x13\xa4\xbf\x63\xd0\x56\x1e\x08\xf6\x27\x02\x2c\x00\x92\x79\xc8\xa7\x9c\xc0\x93\xd9\x09\xdf\x05\x24\xe1\xfc\xf2\x97\xfc\x27\x7f\x4c\xee\x8e\x0a\xf7\x94\xff\xcf\xf2\x8f\xcf\x29\xd5\xb7\x7c\xe9\x84\x6b\xed\x1f\xbf\xcf\xe0\xcd\xa8\x77\x16\x47\x51\x9f\x9d\x31\xa4\xf7\x4e\x32\x03\xbf\x08\xf1\x34\x71\x5a\x96\x51\xe0\xc4\x91\x19\x2c\x7f\x24\xe1\x4b\x56\x27\xa9\x96\xac\xfe\xa9\x5c\xde\x28\xe9\xd2\x93\x22\xc9\x99\x4b\x16\xe2\xf2\x48\x14\x90\x96\x53\xd0\x6f\xc2\x6f\xab\xd5\x2d\x6c\xc2\x51\x6b\xb1\x84\xb5\x36\x0c\x30\x0d\x9b\xa0\x16\x11\xe3\x44\xa6\x0c\xf2\xa1\x5d\x86\xa0\xfd\x96\xba\xc7\x31\xfa\x2c\xc5\xe2\xc8\x83\x72\x20\x1d\xb0\xe2\xc8\xa0\x6b\x8d\x7a\x31\x08\x83\x06\xa7\x11\xf8\x9b\xdf\x26\x86\x43\x98\x04\xa7\x4c\xc3\xc4\x43\x2d\x02\xcf\x7d\x9a\x05\xef\xd3\x7f\xb9\x86\x1f\xfc\x7e\x1e\x88\x79\x9c\x73\x61\xb1\xf4\x25\xec\x8b\x12\x8f\x42\xd6\x64\x91\x19\xbc\xf1\xc8\x19\x53\x04\xac\x2d\xbe\x40\x80\xe3\x6a\x8a\x40\xe1\xe1\xfd\x16\x68\x0f\x1e\x93\xca\xa1\x59\x8b\x02\xc1\x6d\x84\x83\x6d\x6b\x1d\xdc\x23\xc8\x6d\x53\xe3\x16\x95\xc3\x12\xa4\x02\x6d\x4a\x34\xe0\x34\x34\x46\x3f\xca\x12\x89\xd0\x7d\x6b\xa9\x18\x5b\xa8\x75\x25\x8b\xd1\xc3\x67\xab\xf0\xc8\x74\xe4\xd6\xc5\xc1\x5a\xfb\xe0\xc7\xff\xa4\x18\x3f\x73\x5e\x28\xbf\xb7\xc2\x88\xad\x85\xbe\x9f\x41\xe3\x97\x17\x5d\x97\x87\xa9\xa3\xef\xf3\xb3\xc4\x3c\x52\xd7\x51\xc9\x84\xbe\xcf\xe0\x42\x34\x32\xbf\x43\xdb\x68\x65\x71\x5a\x8d\x39\x26\x2b\xa9\xe4\x57\xbc\x15\x6e\x93\x36\xc2\x6d\x42\x9a\x64\x43\x0d\xe9\xc6\x28\x0b\x83\x49\x7e\x87\x4d\x2d\x0a\x4c\x4f\xbf\x09\x7b\x06\x49\x97\xcc\x20\x59\x24\x33\xb8\xfc\x39\x9b\x41\xd2\xd3\xa7\xff\x3a\x6d\x00\xa1\x95\x4d\x2a\xfe\xa4\x07\x7e\xcb\xfc\x2c\xf3\x09\x89\x34\x9c\x0e\x6e\x99\x85\xb4\xe3\x86\x45\xbe\x98\x81\xd3\x0f\xa8\xa8\x3e\x7a\xa9\x67\x40\x53\x01\x1a\x98\x0c\x08\xf9\x8a\xb7\xb2\xa1\xaf\x90\xea\xc8\x7d\x95\xb2\x87\x9c\xf3\x19\x77\x69\x36\x6c\xe6\x5f\x2c\xa6\xdc\xed\xd0\x57\xbb\x34\x3b\x3e\x3b\x8c\x46\xf9\x47\x9e\x6a\x3e\x6a\x2a\x3c\x0c\x16\x94\x5c\x5c\xc1\x1b\xcf\xac\xf3\x1d\x7c\x01\x9e\x00\xa5\xd8\xd9\xf0\xf1\x88\xe7\x1d\x3f\xed\xbb\x70\x15\x0c\x39\xf4\x37\xea\x69\x72\x3d\xa8\xfd\xc3\x15\x28\x59\x73\xc2\x7d\x2f\x45\xd6\x69\x30\xd5\x8d\x92\x6e\xd9\x08\x95\x7a\x7a\xe4\xf6\x0e\xac\x12\x0f\x53\xec\xc4\x57\xf1\x30\x4b\x28\x84\xfc\x13\xba\x8d\x2e\x21\xf9\xf0\x7e\x95\xc0\xf7\x2b\x73\x6a\x4e\x4e\x12\xe5\xa8\x3b\xd9\x74\x1c\xce\xa4\x2a\xf1\x69\x06\xaf\xdc\xbe\xe1\xe1\xec\x5a\x2b\xdb\x6e\xd1\x7e\xc2\x52\x72\x27\xe3\xec\x93\xeb\x00\xd9\xf7\xb3\x90\x0a\x49\xd7\x11\x12\x2f\x78\x23\xcb\xe2\x31\x7d\xce\x4e\x42\x63\x61\xe7\x08\xeb\xfc\xbc\xf4\x8a\xd5\x61\xf1\x17\x57\x90\x9e\xa8\x94\x01\x0f\x49\x04\x67\xb1\x68\x8d\x74\xfb\x77\x34\xfd\x49\x76\x2c\x0b\xbc\x3c\xb3\x3f\x20\x85\x50\x18\x40\x80\x0b\xc9\xab\x12\xd7\x84\xc9\xfa\x9c\xa7\x3b\x98\x73\x1c\xe9\xf0\x1f\x46\x1b\x29\x71\xa3\xc7\x5b\xa3\x1b\x9b\xf3\x98\x91\x84\xf9\xdf\x23\xb1\x4e\xab\x21\x79\x16\x57\x63\x22\xc5\xdc\x01\x8e\x8f\xaf\xae\x20\x49\x7c\x15\x3f\x39\x80\xe3\xf1\xfa\xdb\x12\x04\x0c\xe6\xdd\x1f\x45\xe7\xc4\xbc\x7d\xcf\xee\x00\xce\x4a\x2f\x2e\x6f\xa4\xc4\x79\x12\x27\xcb\x42\x37\x68\xf9\xe4\x59\x94\x58\x3a\xf3\x66\x67\xa8\x17\x62\x83\x41\x27\xd1\xc1\x4d\x30\xb0\x7d\x1f\xc6\x52\xdf\xba\x06\xf1\x17\xc7\x86\xf1\x5d\x93\xfe\x67\xde\x0f\x3e\xb4\x5e\x50\xef\x34\xf8\x5f\x32\xc3\x09\xcd\x71\xde\x7e\x39\xb3\x79\x5a\x1f\x8b\xc4\x79\x98\x49\xe9\xf8\x57\x5a\x79\xd7\x85\xf4\xee\xfb\x74\xd2\x53\x4e\xee\x55\xb4\x47\x26\x84\x7f\xef\x63\x83\x69\x87\xea\x7e\x1e\x2a\xcb\xe2\xb1\xa5\x0d\x9d\xca\x0b\x3b\x99\x0f\xd0\x8c\x57\xad\x17\x5b\x3a\x6d\x8e\x53\x52\xe8\x02\xa1\x1b\xc4\x91\x6f\x3a\x70\x71\xcd\xbf\x71\x64\x3d\xc2\x85\x1f\x53\xf8\x23\x8e\x56\xd2\xd5\xc3\xa8\x1e\x47\xff\x8b\xc6\x4a\x3d\xb4\xce\x20\xd0\x67\xdc\x05\x5e\x9c\xa5\xac\x8e\x05\x01\x0a\x77\xe7\xbb\xdd\x88\x90\xda\xc7\xe2\xd0\xe3\x8e\xe5\xc9\xe0\x22\x20\x77\x5c\xe8\x7f\xf0\xc7\xf9\x3b\xbc\x6f\xb9\x8b\xd3\xcd\x3f\x5f\xa2\xfb\xa4\xcb\xa1\x6f\xd5\x28\x2c\xd2\x77\x98\xb6\x45\x23\xb9\x25\x79\x42\x84\xe3\x75\x5f\x3c\x6b\xb8\x14\xd0\xf6\xb1\xe0\xc0\x1e\x38\x51\x2c\xbe\x93\x96\xe7\x5d\x3e\x08\xfb\x47\x59\x30\xec\xf9\xb6\x41\x19\x41\xff\xfc\xee\xc0\x86\x76\xd8\x8e\x0b\x6e\x2b\xf9\x8d\x5a\xeb\xdc\x1b\xb6\xef\xf9\x02\x12\xec\x3a\x3d\x1f\x4c\xed\x21\x48\x9b\xf9\x3c\x14\x69\xe0\x77\x11\x20\x3f\x1d\xae\x91\x34\x05\x96\x6c\x9b\xad\x2e\x91\x4d\xf6\xcc\x62\x8c\x97\xdf\x61\x25\xad\x43\x93\xf2\x18\xe5\xf3\xc0\x77\xeb\x19\x35\xd1\x6c\xe4\x66\xd1\x81\x7f\xbf\xa0\x9f\xca\x0f\x98\x2b\x7c\x72\xbf\x6a\xb3\x15\xce\xa1\x81\x9d\x74\x1b\x50\x1a\x0a\x5d\x6b\x63\xf9\x1d\x84\x7c\x32\x02\xa4\x6f\x68\xe7\x08\xa7\x0b\x36\xbd\x66\x94\x05\x38\xd3\x62\x9f\x79\x6f\xe5\x21\x06\xaf\xe0\xcd\x24\x0a\x49\xf4\xb7\x65\x69\x16\x30\xfc\x0d\x1e\x2a\x4b\x83\xd6\x92\x05\xc3\xfd\x22\x80\x3c\xd7\x8c\x7c\x8f\xa2\x5c\xc9\x2d\xea\xd6\x2d\x00\x7e\xfe\x09\x2e\xc0\xc9\x2d\x52\xdd\xd6\x8a\x3d\xfc\xa7\x91\x0e\x47\x90\x33\x10\x64\x98\x49\x2c\x8e\xd7\xf3\x21\x4c\xd8\xca\x13\xe6\x67\x2e\xf2\xf6\xb1\x08\xf7\x8b\xfd\xc1\xd2\x23\x5c\xb8\x99\x7c\x1d\xfd\x1a\x4f\xc9\x4d\x2f\x9b\x5f\x9f\xdd\x36\xa7\x94\xc9\x9e\xa1\x78\x88\x46\x86\x44\xbd\x6b\x15\x98\x56\x3d\xab\x19\x94\xb9\x0e\x76\xb2\xae\xa1\xa6\xc8\x50\xa0\x15\xa0\x74\x1b\x34\xfe\xa6\xa8\xfd\xef\x12\x4a\x6c\x50\x95\x34\x46\x6b\x45\x14\x89\x50\x48\xdb\x46\x58\xba\x47\x3a\x7d\x48\xef\xe1\x65\x43\x0c\xa9\x9c\x91\x08\x69\x06\x68\x8c\xe6\xbc\xa6\xe0\xa0\x68\x5f\xa7\x09\x97\x01\x55\xc1\x8f\xaf\x2d\x5c\xc2\x6b\xfb\x23\x09\x21\xbc\x83\xe1\xb5\x4d\x66\x20\x7c\xce\xd0\x22\x24\x07\x2d\xbd\x02\x1c\x0a\x7e\x22\x14\xc1\xea\xf9\x8d\xe2\x01\x02\x59\x05\x9e\x0c\x83\x41\x06\x9c\x8f\xac\xec\x5b\x55\xb2\x74\xa9\x1f\xee\x5e\x06\x5a\x7d\x5c\xa6\x23\x83\xd5\xc7\xe5\x35\x1a\xf7\xab\xf4\x42\x1d\x76\x7f\xc7\x3d\x6d\x0e\x17\x84\xe5\xa6\x75\xa5\xde\x29\x6f\xe2\x8a\x4a\xc5\xba\xad\xeb\x3d\xd8\xe1\xe0\x99\x43\xce\x98\x6e\xa0\x32\xb5\xdf\xa9\xb0\x23\x4c\x78\xb1\xcd\xff\x5b\x14\x0f\x95\xd1\xad\x2a\x69\x4c\x1f\xc3\xe0\x4f\xe9\x36\x4b\x59\x0d\x8f\x03\xdf\x08\x0a\x4e\xee\xe5\xcd\x87\xd5\xfb\xbb\x4f\xfe\xb5\x80\x1c\x24\x5a\xa7\xb7\xc2\xc9\x42\xd4\xf5\x3e\x1e\x8b\x52\x99\xc3\x6a\x83\x07\xd4\x43\x30\xd1\xcd\x47\x8c\x74\xfc\x5b\x31\x3f\x8d\x9d\xb1\xc4\x10\x54\x3b\xbc\x1f\x2d\x31\x9f\xc3\x8d\xfb\xd1\x42\xa3\xad\x95\x54\xfe\x9c\x06\xdd\xd0\x38\x48\x12\x70\xe0\x81\x50\x7b\x50\xed\xf6\x9e\x84\x1f\x8c\x4a\x16\xf4\x43\xe3\x6e\x23\x8b\x0d\xcb\xc4\xf2\x3e\x61\xd1\x3a\x04\xad\x10\xee\xf7\xfc\x23\xd6\x54\xcc\x02\xe3\xa0\xc2\x46\x58\xb8\x47\x54\x07\x82\xb6\x2d\x0a\xb4\x96\x25\x3e\x1f\xdb\xc7\x76\x4d\x47\xcc\x3c\xcf\xc3\x8b\x08\xbb\x6e\xe2\x41\x2b\xab\x6b\x7e\xcd\xd8\x8a\x07\x4c\x8b\x8d\x50\xa0\x6d\xbe\x64\x23\xcd\xe0\xe7\x8c\x21\x94\xa8\xf3\xcf\xda\xc9\xf5\x3e\x65\xf8\x19\x84\x77\xf6\x3c\x58\x95\xd2\xbd\xd2\xc3\xab\x0b\xc5\xfa\x7f\x5d\x32\x24\x95\xa3\x43\x54\x50\x84\xa7\x04\x8b\xc6\x10\x4f\x91\x73\x3e\x72\xda\xd0\xd6\xe4\x16\x75\xd8\xe1\x42\xfc\xde\x18\xaf\xe6\x75\xad\x6d\xa8\x73\x43\xf4\xa1\x31\x71\x78\xc1\x88\x23\x72\xf6\x5f\x33\x58\xfb\xc7\x48\x1e\x51\x47\x2b\x10\x52\xe0\xbc\x66\xb6\x67\xf8\x9e\x25\x1a\xf6\x94\xac\xe3\x9e\x3c\xf8\x28\xb7\x0b\x58\xbb\xab\x4a\xc7\xff\x1f\x00\x00\xff\xff\xd5\x26\xdc\x17\xc1\x18\x00\x00")

func templatesApiGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesApiGotmpl,
		"templates/api.gotmpl",
	)
}

func templatesApiGotmpl() (*asset, error) {
	bytes, err := templatesApiGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/api.gotmpl", size: 6072, mode: os.FileMode(420), modTime: time.Unix(1521298227, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesConfigGotmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x54\xc1\x8e\xdb\x36\x10\x3d\x8b\x5f\x31\xd5\x61\x2d\x15\x11\xbd\xc8\x29\x08\xe0\xc3\x36\x9b\xa0\x8b\xf5\xc1\xa8\xdd\xe6\x4c\x53\x43\x89\x30\x45\x0a\xe4\xc8\x0b\x63\xe3\x7f\x2f\x48\xcb\x1b\xd9\xde\xf6\x10\x19\x30\xc4\x19\x72\xde\xf0\xcd\x7b\xea\x85\xdc\x89\x06\xe1\xf5\x15\xf8\xc3\xea\x69\x35\x2e\x8f\x47\xc6\x74\xd7\x3b\x4f\x50\xb0\x2c\x57\x1d\xe5\x8c\x65\x79\xe3\xfa\x5d\xc3\xb5\x9d\x0b\x83\x92\x5a\xd7\x89\x30\xdf\x69\xdb\xf4\xda\xf2\xfd\xc7\x3c\xee\xd0\xd4\x0e\x5b\x2e\x5d\x37\x77\x3d\x5a\xf2\x42\x6a\xdb\x4c\xdf\xab\xc6\xe5\xac\x64\x4c\x3a\x1b\x52\xf5\x1a\x95\x18\x0c\x3d\xd4\xb5\xc7\x10\x60\x01\xf9\xe7\x4f\xf7\x9f\xee\xd3\xa6\xf9\x1c\xbe\x38\xab\x74\x03\x35\x2a\x6d\x31\x00\xb5\x08\xf2\x14\x72\x3d\x69\x67\x03\x28\xe7\x53\xf8\x61\xf5\x04\x01\xfd\x1e\x3d\x67\x74\xe8\xf1\x7c\x34\x90\x1f\x24\xc1\x2b\xcb\xce\x18\x3f\x9f\x40\x5e\xdb\x86\x65\x8f\xb8\x1d\x1a\x98\x3e\x5b\xe7\x0c\xcb\x9e\x6c\x40\x39\x78\xfc\x73\xb3\x59\x4d\xe3\x0f\x03\xb5\x8f\x3a\x88\xad\xc1\x7a\x1a\xdf\x2c\xd7\x5f\xd0\xd3\x37\x6d\xf0\x0a\x61\xb3\x5c\x3f\xe3\x61\x92\x78\xcb\x7c\x47\x63\x9e\xad\x7b\xb1\x6f\x05\xc7\x5a\x6e\x87\xf6\xef\xbf\x96\xb7\xdd\x6e\xbc\x90\xe8\xa7\xdd\x4e\x08\xe6\xa7\x2c\x3b\x32\xa6\x06\x2b\xa1\x90\xf0\xfb\x89\x89\x12\xbe\x6b\x6a\x1f\x4f\x7c\x7f\x33\xa2\x09\x45\x19\x69\x39\x8f\x30\x86\x8a\xbc\x8e\x54\xe4\x1f\x20\xff\x6a\x63\x37\x90\xd6\x60\x5c\xd3\x68\xdb\x80\xb0\x35\xf4\xbd\x77\x0a\x3a\x24\xaf\x65\xe0\x79\xc9\xff\x70\xce\xfc\x23\x7c\x71\x27\x79\x22\xb2\xbc\xae\x29\x4e\xc4\xc7\xaa\xe7\x19\x90\x03\xa3\x03\xa1\x05\x67\x3f\x00\xf2\x86\x43\x9a\x3b\x38\x0f\xf7\x3c\xfd\xd2\x3a\xd6\x67\x59\x36\x76\x5d\x5c\xaa\xa5\xe4\xeb\x44\xc9\x08\x7e\x8e\x5e\xc3\xeb\x71\x8a\x55\x4b\xd4\xc7\x26\xd6\xe8\xf7\x5a\x22\x38\x6b\x0e\x10\x67\x7b\x75\x8b\xe9\xd8\x6f\xaa\x91\x09\x95\x44\x4f\x95\xd2\x06\x63\xb5\x95\xa0\x36\xde\x67\xb3\x5c\x43\x9c\x3e\xc4\x04\x0c\x01\x6b\x78\x69\xd1\x26\x51\x46\xee\x62\xb5\xf5\x78\x9f\x8b\xbe\x27\xaa\x79\x17\x6d\x87\x87\x77\xc1\x9e\xf1\xf0\x2b\x58\xa3\x0e\x6f\xa0\xea\x93\xfe\xaa\x17\x34\xa6\xda\x45\x45\x46\xc0\x51\x95\x20\x06\x72\x9d\x20\x2d\x61\xce\x7f\xee\x00\x8f\xc1\x0d\x5e\x62\x18\xc1\x26\x2c\xde\x08\xfb\x3f\x11\xc5\x40\xed\x15\x56\x9b\x7c\x2d\x8c\xf9\x3f\x84\xa9\x0d\x6f\x99\x8b\xfe\xa9\x06\x6f\x4e\x13\x27\x78\x33\x54\xa2\x8b\x1c\xec\x85\xd1\xb5\x20\x04\x17\x01\x3f\x42\x3a\x11\xde\x65\x6d\x3c\x5a\x46\x5b\xcd\xe7\xb0\x12\x3e\x20\xf4\xf1\x3f\x8c\xdf\xa3\xc1\x8b\xf8\x3d\x02\xe5\x5d\x07\xd2\x75\x9d\xb0\xb5\xd1\x16\x41\x45\xa7\xf1\x5b\x33\xa6\x1a\x45\x09\xe8\xbd\xf3\x53\x1f\x8e\x09\xc6\x32\xad\xe0\xb7\x4b\x35\xc2\xdd\x1d\x14\x17\x8a\x81\xc5\x02\xf2\x1c\x7e\xfc\x80\xe9\x70\x4f\xd1\x64\xef\xcc\x23\x0d\xde\x82\xea\x88\x7f\x8d\x58\xaa\xc8\x67\x55\x75\x21\xe3\x59\x32\xf6\x18\x3d\xcb\x6d\x06\xdd\x10\x08\xb6\x08\xa1\x47\xa9\x95\x3e\x8b\x6c\x56\x55\x17\x96\x5a\x28\x61\x02\xce\xf2\x92\x65\x47\x76\x86\xb3\xda\xb0\x63\xe4\x6a\xaf\xbb\xcf\xa0\x68\xd1\x38\xf6\x6f\x00\x00\x00\xff\xff\x75\x32\xe5\xde\x6f\x06\x00\x00")

func templatesConfigGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesConfigGotmpl,
		"templates/config.gotmpl",
	)
}

func templatesConfigGotmpl() (*asset, error) {
	bytes, err := templatesConfigGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/config.gotmpl", size: 1559, mode: os.FileMode(420), modTime: time.Unix(1521298227, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesParameterGotmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5b\x6f\x73\xdb\x36\xd2\x7f\x6d\x7d\x8a\x2d\x9f\x36\x43\xe6\x91\xa9\x3c\x7d\x3a\x7d\xa1\xab\x3b\xd3\x24\x4e\xe3\x6b\x9b\xe4\xe2\x26\x7d\x91\xc9\xb4\x30\x09\x49\x68\x48\x80\x06\x20\xdb\x3a\x0e\xbf\xfb\x0d\xfe\x10\x04\x28\x52\x96\x1c\xf7\xda\xeb\x35\x6f\x22\x62\x81\xc5\xee\x0f\x8b\xc5\xee\x02\xae\x6b\xc8\xf1\x82\x50\x0c\x91\x28\x48\x86\x2b\xc4\x51\x79\x85\x0a\x92\x23\xc9\x78\xd4\x34\x93\xba\x06\xb2\x00\xc6\x21\xfd\x81\xd0\x33\x89\x4b\x01\xe9\x0f\xe8\xc6\xfc\x32\xf4\x0c\x95\xb8\x20\xff\xc4\x90\xbe\x40\x25\x86\xa6\x39\x57\x1f\xf3\x13\x20\x54\x7e\xf9\x45\x5c\x60\x1a\x1b\x2e\x88\xe6\x10\x53\x26\x21\x3d\x13\xdf\x70\x8e\x36\x89\xfd\x7c\x8e\xc4\x53\x22\x32\x4e\x4a\x42\xd5\xc4\x89\xeb\x76\x46\x25\xe6\x0b\x94\xe1\xae\xe9\x5c\x72\x8c\xca\x44\xfd\x7c\xb1\x2e\x0a\x74\x51\xa8\x39\x1f\xd6\x35\x60\x9a\x43\xd3\xd4\x35\xa4\x6f\x51\xb1\xc6\xa7\x37\x15\xc7\x42\x10\x46\xa1\x69\x92\x64\xe2\x7a\x58\xa5\x3a\x8d\x9a\x66\x42\x16\x80\x39\x57\x52\x5b\xf5\xb1\x23\x2b\xe9\xd3\x57\x48\xae\xa0\x69\xa6\x50\xd7\x50\x71\x42\xe5\x02\xa2\xcf\x2e\x23\x48\xbf\x67\x19\x92\x66\x0e\x4d\x1c\x44\x43\x53\xfc\xf9\x92\xbf\xe9\xe9\x3e\x39\x01\x4a\x0a\xa8\x27\x00\x1c\xcb\x35\xa7\xaa\x75\xd2\x0c\x88\xea\x41\x3e\x24\xaa\x25\xdf\x93\xa8\x8e\xdf\xe1\x82\xbe\xa1\xe4\x72\x8d\x77\xc9\xea\xf5\x38\x4c\xdc\xdf\xdb\x82\x0e\x44\xe2\x94\xae\xcb\x11\x08\x14\xe9\x3f\x4a\x77\x63\xbf\x56\xa3\x43\x80\xe8\x7e\xb5\x7e\xc6\x82\x40\x18\x7d\xa5\x24\x96\xe4\x0a\x47\xa6\x8b\xdd\x92\xdf\x63\xba\x94\xab\xd1\x2d\x69\xc8\xd6\xa3\xb4\x00\x7a\x58\xd6\x35\x2e\x04\x6e\x9a\x28\xaa\x6b\x4c\xf3\x3d\xc1\x0d\xe1\x88\x7d\x3c\xfa\x70\xe8\xd9\xb6\x86\x24\x3e\x82\x86\xfa\x64\x2d\x24\x2b\x9f\x31\x5e\x22\x29\x31\x87\xa6\x49\xcf\x25\x27\x74\x19\x77\x9d\xcd\x6e\xeb\x94\xbe\x15\x5b\xad\x52\x0b\x16\xba\xd9\x09\x56\x4b\xfe\x73\x81\xd5\x29\x7d\x10\x58\xaf\x34\x5f\x3a\x0c\x95\x25\xfe\x79\x80\xfa\xa5\xae\x3b\x8d\x7f\x39\xcc\xaa\x08\x25\xe5\xba\x1c\xdd\x80\x8a\x68\xa4\xc1\x97\x90\x9e\x5f\xa3\xe5\x12\xf3\x1f\x37\x15\x86\x88\x50\x89\x97\x98\xab\xfd\x7c\x46\xa5\x13\xe7\xbe\x61\xdd\x35\x2f\x31\xf3\x16\x42\xc1\xb7\x28\x18\xea\xc4\xf8\xf2\x8b\x78\x08\xe3\xdd\xab\x92\xb4\x3b\xd4\x60\xa2\xbf\x4e\x6f\xb2\x62\x2d\xc8\x15\x76\xcd\x87\x6e\xdb\x1d\x00\x1b\xe2\x7f\x1d\xc0\x2d\x26\x3d\x80\xdb\xe6\xc3\x00\x5e\x17\x92\x54\x05\x7e\xb9\x18\xc1\xd8\xd1\xef\x0f\x38\x8d\xc4\xc7\x00\xe0\xc9\x7c\x90\xb2\xea\x50\xde\x1d\x65\xdc\xa7\x65\x7c\x5c\x10\x72\x08\x2c\x07\x9f\x0c\x9d\xec\xff\x73\x15\xb5\xb8\xec\x0d\x65\xfb\xbf\x8b\x53\x2a\xce\x2a\xcc\xe5\xa6\x97\x12\x79\x01\xde\x99\x70\x11\x8c\x81\x56\xe2\xb2\x2a\x90\x1c\x0b\x72\x52\xd3\x2b\x8c\x12\x87\xf4\x1b\x5a\x4c\x43\xd7\x16\xab\x57\x50\xe9\x1c\xd5\xb5\x5b\xa3\xa6\x89\x4c\x83\xdd\xb7\xa6\xbf\x6e\x1d\x42\xd7\x41\x38\x85\x85\xee\x29\x76\x23\x35\x20\xb7\x5e\xfe\xbe\xe2\x43\x59\xa4\xaf\xf8\x71\x2f\x2c\x6c\xd1\xbe\x20\x34\xaf\x5a\xa8\xf4\xf8\x68\x34\x82\xec\xe6\x50\xa3\x8c\x57\x9a\x5c\x21\xae\x6c\xe0\x0a\x71\xaa\x72\x99\xf4\xc9\x8a\x14\xf9\x40\x24\xfb\x5a\x47\xb2\xdf\x32\xed\xd7\x9a\x66\xb2\x60\x1c\xba\x1c\xd7\x8c\x7a\x8e\xc4\x5b\xb7\x80\xa2\x6d\x7d\xc2\xe8\x15\xe6\x6a\x85\x6c\xc3\xd0\xd2\x29\xe6\x67\x34\xc7\x37\x6f\x91\xfd\xb4\x9e\xf2\xe7\xd0\x56\x6f\x95\xf3\xad\x5a\x7d\x8e\xe8\x12\xef\xd5\xfd\x89\x5e\xb1\xbe\x22\xed\x22\x29\xd4\x35\xb5\x55\x65\x94\xcb\xfc\x04\xc4\x35\x5a\xa6\xe7\x55\x41\xe4\xe3\x8d\x51\x2d\xde\x4b\xe0\x6d\xff\xd1\xe2\x56\x14\x38\x53\x50\x1a\x6e\x2a\xac\x31\xd2\x0c\x99\x4d\xbb\xa4\x66\x30\x58\xc1\x8f\x0d\x8c\x4e\x0f\x65\x81\xfd\x55\x71\xc4\x5b\x45\x9d\xb6\xbb\xcb\x43\xc4\xb1\x31\xa7\xe9\xed\xea\x2a\x1d\xec\x3e\xf5\xf6\x8c\xbf\x6b\x18\x17\xe9\x19\xd5\xfb\x40\x59\x5b\xdc\xcd\x36\x9a\xf6\x19\x72\xe0\x77\xa3\x6e\x98\xb3\xda\x68\x3f\x1b\x52\x22\x06\xf8\x75\xb0\x6d\xdb\xee\x1d\xe0\xb3\x9e\x23\x7d\x85\xb8\xc0\x7f\x5e\xd4\xf6\x47\xc6\xda\xd4\xed\x30\x18\x7e\xd6\xb5\xd9\xa9\xcc\x47\x7f\x67\x8c\x1d\x43\xe1\xfe\xd8\xc7\xef\x9d\x00\xaa\x2a\x4c\xf3\xbd\x16\xea\xf5\xbe\x58\xf9\x3e\xba\x42\xd9\x07\x64\x1c\x56\xfa\xca\xfe\x56\x2a\xcd\x66\xf0\xe3\x8a\x08\x58\x90\x02\xc3\x35\x12\xb0\xc4\x14\x73\x24\x71\x0e\x17\x1b\x90\x2b\xac\x7d\xce\x12\x73\x90\x8c\x15\xa9\xea\x7f\x9a\x13\x49\xe8\x12\xa4\x1b\x57\x92\xe5\x4a\x42\xc5\xd9\x15\x86\xc5\x5a\x6a\x56\x2b\x4c\x61\xc3\xd6\xc0\xf1\x31\x5f\xd3\x80\x53\x3b\x05\x64\xac\x2c\x11\xcd\x27\x13\x52\x56\x8c\x4b\x88\x27\x00\x11\xc5\x72\xb6\x92\xb2\x8a\x14\xde\xd1\x92\xc8\xd5\xfa\x22\xcd\x58\x39\x5b\x12\x7a\xbc\x64\x94\x64\xea\x57\xd4\x27\xb2\x63\x56\x61\x8a\x2a\x32\x33\x86\xba\xa3\x43\x7b\x70\xef\xe8\xc2\xd7\x54\x92\x72\x8f\x1e\xb3\x92\xe4\x79\x81\xaf\x11\xdf\xd5\x59\x69\xde\x27\x97\xe4\xc3\x07\x5c\x30\x91\x21\xae\x55\xb3\xe8\xcc\x50\x45\xb4\xea\x42\xf2\x45\x29\x47\x39\x6a\x6a\x64\x6d\xd2\x1c\x46\xe9\x53\xbc\x40\xeb\x42\x9e\x69\x34\x85\x39\xe3\x82\xdd\xd8\x9a\xa4\x67\xdd\x76\xec\xa7\x1f\xf0\x66\x0a\x9f\x5e\x29\x33\x52\x5b\x25\x0d\x98\x28\xaa\xda\x43\x3d\x7e\xb6\x7b\x8f\x6b\xa2\xad\x4a\x75\x45\x22\x43\x41\x11\xf3\x94\xe6\x15\x23\x54\x02\xbe\xc1\xd9\x5a\x62\xa1\xed\x22\x63\x1c\x43\xc1\x96\x24\x03\xb6\xd0\x2d\x1c\xab\x1d\x96\x2b\x3e\x9c\xad\x25\x56\xac\xf5\xc0\x74\xb2\x58\xd3\x6c\x37\xf3\x78\x85\x68\x5e\x60\x0e\xaa\x6b\x9c\xc9\x1b\x78\xb8\x24\x54\x1d\x23\x12\xdf\x48\x17\x74\x73\xa4\xcb\xa0\x53\xa8\xcc\xcf\x87\x83\x4c\x4d\x3f\xa7\x5c\x02\x0f\x51\x45\xd2\xd7\x58\x54\x8c\x0a\x9c\x80\xe2\xfc\xdc\xcc\xf7\x4c\x4b\x36\x39\xb2\xfe\x52\x0b\xba\x35\x7d\xa2\x7a\x1c\xf5\x85\x98\xcd\xba\x4d\x61\xc5\x59\x70\x56\x02\xc7\x97\x6b\x2c\xe4\xe4\xe8\xc8\xb6\xce\x4f\xe0\xc1\x2e\x39\x9b\xc9\xd1\x91\x3d\x01\xcc\x88\x94\x63\x94\xbf\x36\x6c\x94\x30\xc9\xe4\xe8\xa8\xef\xe4\x8f\xf4\x98\x97\x17\xbf\xaa\x61\x98\xf3\x34\x7e\x68\x9d\xfd\x13\x56\x56\x4c\x10\x89\x4f\xd5\xb7\x1a\x7b\x54\x71\x76\x51\xe0\x52\x75\x55\x48\xbc\x32\x9f\x9a\xc9\xd1\x8f\x44\x16\x78\x0e\x10\xbd\xa1\x15\x67\x19\x16\x42\xa7\x13\xa7\x54\x12\xb9\x49\xa3\xa9\xee\x74\x2e\x91\x5c\x8b\x39\xa8\x95\x32\xd3\xa6\x4f\x58\x8e\xe3\x24\x31\xf4\xa7\x58\x22\x52\xcc\xc1\xd2\xf4\xcc\xb1\xa1\x29\xed\x8e\x32\x79\x93\xfe\xc4\x89\xc4\x3c\x7d\x8e\x51\x8e\x79\x9c\xa4\xe7\x58\xc6\x91\x46\x98\xca\x63\x75\xa4\xa8\x80\x1b\x55\x55\x41\xcc\xb9\x33\xb3\x52\xff\xef\xaf\x82\xd1\x28\x69\xd9\xfc\xfd\xfc\xe5\x8b\xd8\x92\x52\x23\xd7\x14\xec\xb7\xee\x64\x96\x72\x62\x66\xee\x2c\x5c\x11\x44\xa5\x20\xb0\xa6\xa6\x90\x1d\x33\x2c\x9b\xbf\x28\x7e\xe2\x9a\xc8\x6c\x05\x6a\xb0\xd6\x59\x63\x9f\x21\x81\x41\x39\x3c\x2b\xc1\x0b\x66\x15\x99\xb7\x62\x7e\x73\xc1\xb8\xfc\x89\xc8\x95\xe9\x10\xbb\xf1\x8a\x67\x6e\xf6\xfc\x3c\xd0\xc9\xf5\x98\x9a\xc9\x1e\xb3\x7c\x93\x18\x35\x9a\x49\x33\xbe\x3f\xad\xf0\x19\xa3\x12\x11\x2a\x00\x15\x85\xde\x8f\x17\x6c\x4d\x73\x67\x99\x8c\xeb\xc6\xba\x86\xd5\xba\x44\xd4\x67\x00\xea\x44\xd4\x90\xab\x39\xe4\xa6\x22\x19\x2a\x0a\x7d\x90\x08\x0c\x88\x63\x60\x17\x8a\x35\xce\x8d\x81\x23\xa3\xb9\x35\xd0\xc9\x6c\xa6\x86\x59\x4f\x38\xd7\xf3\x61\x89\xb9\xd0\xc7\x96\x9d\x62\x22\x55\xc8\xb0\x4b\x7c\x21\xf9\x3a\x93\x50\x87\xce\xb1\xdb\x6c\x0f\xed\x52\x3d\xc5\x2a\x29\xae\x6c\x60\xa2\xa6\xd8\x6a\x09\x0a\x7c\x4a\x4a\xc2\xb1\x75\x9d\xed\xd7\x1c\x24\x5f\xe3\x7e\x5f\x5b\x1d\x31\x5d\xed\xc7\xbc\x0d\x8f\xfb\x35\x14\x68\x9a\xaf\x20\x28\xf3\x77\x84\x2d\xc6\xa6\xae\x65\x19\x9b\x8f\x01\xc6\xae\xd7\xd7\x3d\xc6\x8e\xb0\xc5\xd8\x55\x39\x2c\x6f\xfb\x0d\x2f\x17\x73\x73\x45\xe6\x77\x18\xd0\xd7\x94\x7e\x9d\xc6\x60\xbe\xed\x58\x8f\x3c\xa0\x51\x30\x94\xd0\x70\xa8\x47\xee\x0f\xb5\x65\x54\x33\xd0\x7e\xcc\x6d\x8c\xd3\x52\x06\x24\x75\x57\x60\x46\x50\xfd\xe9\xe4\x6c\x89\x03\x62\xfa\xe3\x08\x0d\xc6\x75\xc4\xfe\xb8\xde\xad\x1b\x80\x69\x18\x36\x1b\x2f\x50\x9e\x00\x9c\x59\x65\xbc\xd6\xfe\x80\x81\x0c\x6e\x02\xd0\xb5\x82\x69\x36\x7c\x06\x3a\xf7\xf9\x3d\x47\xc2\x46\x11\x86\x93\xfd\x98\x6f\x17\x71\xba\x6e\x7e\x40\xf1\x70\xe6\xb2\x40\x5d\x63\x3a\xcf\x56\xb8\x44\x36\x14\xe9\x36\xec\xd9\x53\x1b\x4e\xdc\xdb\xe5\xd9\x33\x52\x60\xbd\xc5\x0f\xb9\x4f\xb3\x09\x88\x5f\x0c\x18\x74\x2c\x5b\x92\x1a\xb5\xd2\x33\xf1\x18\x09\xac\x58\x84\xb3\xf4\x3a\xb5\x82\xec\x98\xdc\x0b\xc8\x4c\xb9\xcb\x78\x69\xef\xf4\x86\x0b\x26\x57\xa0\x72\x70\xa1\x05\x69\xa3\x58\x01\xa8\x8d\x13\xa6\x40\x24\x20\x21\xd6\xa5\x8e\xac\x90\x54\x11\x76\x55\xe0\x1b\x15\xab\xd3\xa5\x00\xa2\xbe\x4a\x4c\x25\x20\xb0\x65\x14\x25\x6f\x6c\xa2\xc9\xf4\x35\x5e\x12\x21\xf9\x26\x31\xc9\x9e\x3a\xa2\x0d\xcc\x4a\x14\xe5\xf6\x85\x66\x00\x3a\xec\x13\x6a\xb2\x6b\x52\x14\xb0\x16\x58\xf9\x5c\xa4\xb3\x80\x12\xcb\x15\xcb\x41\xb9\x7d\x61\x82\x35\x9d\x26\xbe\xc6\x19\x26\x57\x98\xb7\x80\xee\x8a\xb6\x12\xe8\x05\x2d\xbd\x08\xca\x08\xa7\x92\xd3\x2b\xc4\xd5\x01\x07\xef\xde\xeb\xb6\xae\x00\xe1\x9c\xbd\xcd\x83\x75\xf1\xc4\x28\xf9\x02\x5f\x1b\xeb\x17\x5e\x91\x72\xd2\x0d\x7d\x8e\xc4\x3f\xd6\x98\x6f\x1c\x8b\x4b\x3d\xda\xc6\xfb\x26\xd1\x12\x4a\xaa\xf6\xd4\x4a\xdf\xbc\xfe\x3e\xd5\x43\xe2\x64\x8c\xa3\x9a\xd1\x31\xec\x4a\x88\x3e\x17\x9d\xa9\x1b\x1f\x8b\xb8\x54\x03\xe2\xff\xff\x1c\xbe\xfa\x0a\x3e\x7f\xd4\xaf\xff\xf9\x21\x9c\x3e\x3f\x4f\x39\x7f\xc1\xa4\x1b\x6c\x13\xf7\xf6\x9f\x57\x2c\x6c\x9b\x1a\x57\x74\x18\x93\x44\x0b\xb0\x5d\x78\xdc\xcd\x75\x72\xd4\x84\x3a\x6b\xb4\x9c\xe2\x13\x80\x45\x7e\x1b\x9a\x6a\x58\xe2\x27\x14\x7d\x48\xfb\xe7\x79\xe8\x70\x82\xe2\xa7\xa9\x86\x76\xcb\xa9\x56\x73\xd0\xf0\xa6\x70\xb9\xfa\x30\x42\xf9\x59\x09\x7c\x29\xd2\x6f\xb1\x7c\xf9\x9d\xff\x34\xc0\x2b\x98\xd8\x82\x55\xcf\xca\x53\xb5\x5b\x07\x1c\x5f\x7c\xb8\x10\xa3\x95\x60\xd0\x1b\xc0\x15\x10\x38\x16\xba\x06\xd4\x55\x4a\xba\xf2\xd2\x99\x50\x82\xb7\x40\xf0\x61\x4f\x37\x3f\x81\x77\xef\x85\xae\x40\xd7\x6a\x59\x74\xf7\x40\xeb\xe6\xce\x6a\x0f\x4f\x39\xd5\x27\xe1\x7d\xa9\x68\x72\x82\x56\xc9\xbb\xc9\xe9\x9b\xa3\xe1\xf7\x4e\x6f\xb3\x27\x88\x32\xaa\x22\x5a\xd3\xf8\x1d\xde\x04\xc0\xbc\xbf\x5f\x4d\x9c\xcf\xd0\xb6\x6c\xdb\xda\x53\xce\xd8\xf7\xd6\x2b\xa1\xe1\xb7\x43\x46\xdc\xe9\xd0\x5e\x57\x93\x28\xa6\x23\x76\x7d\xbb\xec\x2a\x4d\x7c\x81\xaf\xe3\x2f\x1e\x3d\x9a\x42\xa4\x1c\x37\xa1\x4b\x53\x16\xfa\xec\x12\x16\x88\x14\x2a\x44\xfe\xec\x2a\xda\xaa\x0d\xc6\xa1\x9c\x49\x5b\xbe\x4c\x34\x1c\x06\x09\x33\xf1\xd0\xda\x0d\x5b\x6f\xe7\x59\x94\x52\xf5\x53\x24\xd1\x7c\x10\x92\x29\x18\x50\x86\xa9\x86\xd6\xf4\x96\xa5\x69\x16\xf9\xd8\xf6\xcc\x77\xbb\x8f\x45\x7e\xaf\xfe\xe3\x2e\x72\x7c\x8c\x51\xf6\xfc\x70\xdf\x52\xff\xf2\xb8\xc3\x9b\x58\x85\x69\xbd\x8d\xfc\x97\x05\x85\xc1\x91\x85\xe8\x31\xcb\xad\xbd\x74\x19\x03\x59\xb8\xcd\xfc\x1c\xe9\x1e\xbe\x63\x4e\xbc\x5b\xb5\x7e\xa4\x6d\x73\xdd\x7d\x5d\x86\xef\x0f\xd5\x34\xc1\x96\xf7\xc4\xdc\x0a\xfa\xbd\xa6\xd3\x9b\x8a\x71\xa9\x6b\x03\x17\x2c\xdf\x04\xd7\x58\x3f\xb0\x1c\x17\xa2\xab\xba\xa7\x6f\x68\x89\xb8\x58\xa1\xa2\xae\x55\x54\x4a\xaa\x96\xd6\x5e\x88\x6c\x0d\xd9\xba\xd9\x3d\x2f\x48\xd6\x65\x8f\x71\x5f\x85\xa9\xa9\x9b\xaa\x98\x59\x65\x03\x7c\xc0\xa5\xc3\x60\x55\xc3\x75\x3b\x39\x01\xc2\xd2\xd3\x97\xcf\x5c\xd8\xa7\x5b\x5b\x97\xdf\x8e\xda\xfb\xa9\x64\x32\x31\x11\xa2\xf5\xe7\x46\xee\x51\xb3\xe9\xf0\x57\x21\xbe\x42\xb4\x77\x37\x0c\xbd\xd8\xf5\x31\xa1\xb9\x2e\x7d\x3d\x50\x9d\x7b\x26\x7a\xb0\xaa\xa3\x27\x9d\xaf\xf6\xad\x67\xd9\x2e\x34\x2c\x1c\xf6\x94\x0b\x6a\xf2\xbb\x0f\x5a\x1d\x9c\x9b\xa2\xe8\x47\xca\x30\x85\x28\xb2\x07\xee\x08\x3e\xbd\xd5\xf2\xb7\x72\xff\x7c\x1e\x3c\x08\xda\x7b\x30\xf3\x19\x0f\xa4\xcf\x7e\x22\x1f\xdc\x8d\x17\x04\x09\x9c\x7b\x57\xa2\x26\x91\x7d\x79\xf1\x2b\xce\x64\x92\x98\xcc\x0e\x7e\x36\x8f\x5f\xc3\x5b\xfd\xad\x5c\xd3\xbf\xad\xdf\xd3\x29\xb4\x86\x10\x3a\xd7\xdd\xf3\xa4\x36\xa3\xc6\xf1\x0e\x47\xb9\xd3\x59\x9a\x7f\x17\x1c\xa3\x0f\x93\x36\xa3\x1a\x58\x87\xe0\x87\x3d\x6a\xf6\x01\xd7\x11\x1c\xba\xae\x65\x1b\xde\x4e\x73\xb5\xa1\xf6\xd4\x6d\x87\x66\xdb\xb6\xa4\xd1\x2d\x30\x55\x1d\x13\xb5\x09\x1f\x39\x3e\x87\x78\xef\x03\x4b\x33\x4d\xf3\xc0\x09\x71\x61\x9c\xbd\x11\xae\x7f\x35\x36\x50\xf5\xf5\x6d\xfe\xdf\xe3\x22\x1a\x5f\xa6\xed\xbb\x3b\xf7\xdb\x47\xf2\x6b\x07\x64\x78\x73\xef\x2e\x73\xba\x07\x34\xc6\x8f\x70\x2c\xd2\x34\x6d\x4f\x6b\x3b\x88\x92\x62\xd2\x4c\x26\x75\x0d\x9f\x66\x05\x12\x42\x03\x3e\x3f\x81\xb8\xb7\x08\x89\x7d\x01\xb4\x95\x95\x77\x39\xb9\x36\xbe\xe0\x8c\x0f\xca\x75\xc1\x5f\xb2\xf8\x0f\xb7\x86\x1f\x60\xed\xae\x29\x79\xc2\x76\xe5\xa4\xd1\x7c\x14\x5d\xab\x0c\xc1\x25\xbc\x53\x58\x21\xf1\x1d\xde\xc0\x05\x63\x85\x8b\x77\x60\xa4\x3a\x56\x07\x41\x4c\x5b\x74\x74\x29\x76\x12\x98\x0e\x59\xc0\x27\x96\xf9\xd0\xda\xdc\xe9\x38\x0d\x8c\x40\x97\xc2\xd0\x35\x18\x4d\x3c\x93\x30\x3a\x06\x66\x81\xae\x55\xa2\x64\x08\xef\xfc\x4e\xc7\xff\xf7\xbe\xe3\xbb\x8f\x62\x86\xf8\x4d\x51\xb0\xeb\xd3\xb2\x92\x1b\x5d\xcf\x09\xdd\x87\x7b\x26\xd7\x0e\xb2\xcf\xdb\xf6\xff\x1b\x0b\x8e\xae\x87\x63\x4e\xaf\x00\x35\x10\x79\xc7\xd0\x97\x1c\x8c\x23\x34\x42\xb7\xe2\x24\x63\xf2\x6b\x98\x4e\x20\x8a\xa0\x86\xd9\x0c\xb0\xa2\xb7\xa5\xcf\x0a\x09\x73\x3b\xc6\xe4\x0a\x73\xe8\xde\x14\x0a\xff\x40\x0c\x8a\xe9\xf6\x15\x5c\xe8\x05\x9a\xa6\xed\x10\x94\xb0\x7a\x69\x7e\x17\xf7\x74\x71\x11\x13\x26\xc5\x35\xb7\x8b\xce\x0f\xfa\x1b\x28\x28\x32\xc7\x6d\x65\x79\x77\x21\x7f\xfb\xf1\x64\x12\xfa\xec\xe1\x3f\x42\x19\xf0\xc3\xb7\x17\xf3\xcd\x7e\x77\x9e\x19\xb6\x2b\xf7\xbe\xb3\x1e\xca\xd3\xad\xe8\xfd\xa0\xd2\x39\xb0\x6d\xaf\xee\xae\x4d\xba\x37\x65\x7a\x49\xc3\x77\x67\xfe\x8b\x33\x65\x7d\x77\x7a\x19\xb5\xf7\x1f\x10\x05\x44\xb7\xd4\xc6\xee\x3b\x15\x76\xa1\x3e\x76\xc0\x69\xd5\xb6\xd2\xf5\x6d\xa7\x1a\x42\xb0\xf5\x76\x2c\x10\x30\x78\xc4\xea\xcb\xf9\x87\x46\xe8\x0e\x97\x4c\x3b\x6e\x94\xda\xef\x16\xf4\xf0\x6a\x27\xd6\x70\xa6\xfa\x6f\x4a\x3a\x69\x13\x93\xd7\x98\x97\xdd\x77\x5c\x4f\x8e\xae\xb7\xec\xd9\x3a\x1a\xff\x55\xec\x6d\x75\xcf\xd6\x25\x0f\x16\x06\x76\x25\xf9\x03\x0e\xb7\x15\x24\x08\x1b\x8c\x9a\x7e\x52\xf0\xc7\x3b\xb8\x7b\xb1\xdd\x6f\x7e\x40\x3b\xe7\x83\x2f\x07\x6e\x62\xa3\x72\x5d\x48\x12\x19\x3f\xb7\xc7\x93\xe2\xb9\x3b\xc0\xc3\x54\xf9\xf2\x6a\x38\x4e\xde\x23\x2c\x18\x1b\x3a\x1c\x2a\xc0\x31\xd8\x60\x61\xcf\x57\x8e\x63\x0f\x98\x47\xa6\x1d\x78\x4a\x3a\xf0\x58\x79\x6b\x2b\xe8\x42\xcd\xed\xe1\x49\x07\xc4\x5e\xa2\x07\xe9\xc9\x6f\x66\x18\x41\x58\x32\x72\x25\x9f\xe3\xc5\xdb\xf6\x8d\xde\xf0\x6b\x70\xef\x3c\xdf\x0f\xc3\xbb\x61\xf1\xe0\x81\x1e\xd2\xca\xe3\x1b\xd2\xa8\x73\x6b\x3b\x07\x05\x9e\x8f\x5d\x07\x4a\x8a\x7e\xda\xe6\xe3\xba\xf3\x21\xbb\xeb\x35\xea\x8c\x6f\x7f\x8d\x1b\xdc\xf3\xea\xb2\xdc\xef\xeb\x8a\xb7\x7d\x71\xf8\xe7\x21\x2a\xea\xea\xff\x15\xc5\xb0\xe4\x77\xf1\xd8\x7b\xe8\x73\x4b\x3e\xb5\xc7\xfb\xea\xc1\x13\x67\xf0\x2f\x9b\xed\xaf\xd9\x0c\xae\x48\x39\x87\x85\x3c\x59\xb2\xc9\xbf\x02\x00\x00\xff\xff\x93\x19\x44\x1a\x5a\x41\x00\x00")

func templatesParameterGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesParameterGotmpl,
		"templates/parameter.gotmpl",
	)
}

func templatesParameterGotmpl() (*asset, error) {
	bytes, err := templatesParameterGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/parameter.gotmpl", size: 16730, mode: os.FileMode(420), modTime: time.Unix(1520773107, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"config.yaml":                configYaml,
	"templates/api.gotmpl":       templatesApiGotmpl,
	"templates/config.gotmpl":    templatesConfigGotmpl,
	"templates/parameter.gotmpl": templatesParameterGotmpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"config.yaml": &bintree{configYaml, map[string]*bintree{}},
	"templates": &bintree{nil, map[string]*bintree{
		"api.gotmpl":       &bintree{templatesApiGotmpl, map[string]*bintree{}},
		"config.gotmpl":    &bintree{templatesConfigGotmpl, map[string]*bintree{}},
		"parameter.gotmpl": &bintree{templatesParameterGotmpl, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
