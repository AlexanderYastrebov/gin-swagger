// Code generated by go-bindata.
// sources:
// templates/api.gotmpl
// templates/config.gotmpl
// templates/parameter.gotmpl
// DO NOT EDIT!

package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templatesApiGotmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x58\x5f\x73\xdb\x36\x12\x7f\x26\x3f\xc5\x96\x93\xa4\xa4\x47\xa6\xda\x3e\x6a\xce\x0f\xb9\x24\x4d\x7d\x4d\x52\x8f\xa5\x5c\x1f\x5b\x98\x5c\x51\x38\x53\x00\x0b\x80\x96\x15\x0e\xbf\xfb\xcd\x2e\x40\x8a\x92\x15\x37\xf5\x83\x45\x82\xfb\x0f\xbb\xbf\xfd\x03\x34\xa2\xb8\x17\x15\x42\xd7\x41\xfe\xfa\xe6\xfa\x26\xbc\xf6\x7d\x1c\xcb\x6d\xa3\x8d\x83\x34\x8e\x92\x42\x2b\x87\x8f\x2e\x89\xa3\x44\xa1\x9b\x6f\x9c\x6b\xe8\x59\x5b\xff\x7f\x6e\x65\xa5\x44\x4d\x2f\x76\x6f\x0b\x51\xf3\xa3\x93\x5b\xe4\x25\x67\xa4\xaa\x6c\x12\xc7\x51\x52\xe9\x5a\xa8\x2a\xd7\xa6\x9a\x3f\xce\xb5\x68\xdd\xe6\x27\xbf\x2e\xdd\xa6\xbd\xcb\x0b\xbd\x9d\x57\x52\x5d\x92\x3e\x23\xef\xe6\x4d\x63\xf4\x3a\x79\xfa\xbd\xd2\x4a\x16\xf4\x94\xc4\x51\x25\x95\x17\x04\x53\xaa\x2f\xa2\x16\xaa\xd4\x4c\x3d\xe8\x39\x12\xb3\x95\xf7\xf7\x58\x6b\x5b\x08\xc3\x44\x76\x27\xaa\x0a\xcd\x7c\x2b\xcb\xb2\xc6\x9d\x30\xf8\x8d\x0c\xa2\x91\x49\x1c\xd5\xba\x3a\xd2\x6f\xa5\x69\x1b\x8b\x6a\x5e\xeb\xca\xb4\xf6\x1b\x65\x39\x23\x0a\xa9\xaa\x24\x8e\x74\x83\x2a\xbc\x1d\xc9\x9d\xac\x4f\x9f\x2f\x2b\x9d\xc4\x51\xd7\x19\xa1\x2a\x84\xfc\x2d\xae\x45\x5b\xbb\x6b\x8e\xa0\xed\xfb\xae\x6b\x8c\x54\x6e\x0d\xc9\xcb\xbf\x12\xc8\xfb\x9e\x68\x51\x95\xfe\xc1\x33\xbd\xb8\xc7\xfd\x0c\x5e\x3c\x88\xba\x45\x58\x5c\x41\x3e\xe1\xa6\x6f\x7d\x4f\x20\x99\xca\xf1\xb4\x53\x61\x59\x1c\xcf\xe7\x70\xab\x5b\x87\x16\x4a\x5c\x4b\x85\x16\x44\x5d\x83\xdb\x20\x18\xbf\xac\xd7\xfc\xb6\x44\xf3\x80\x06\x2c\x9a\x07\x59\x60\x1e\xbb\x7d\x83\x03\xa7\x75\xa6\x2d\x1c\x74\x71\x74\x51\x49\x95\xbf\x53\x95\x54\x38\xd9\xde\x6f\x0d\x1a\xe1\xa4\x56\x6c\x1c\x34\x82\x30\x27\xbf\x20\xe4\x9f\xc4\x96\xc0\x3b\x91\xe0\x45\xb0\x60\xf3\xde\xe8\xb6\x89\xa3\xa8\xeb\x40\xae\x21\x7f\xdd\xba\x8d\x36\xf2\x0b\x96\xd0\xf7\xf4\x02\x44\xfa\x8b\x50\x65\x8d\xe6\xe7\x56\x15\x30\x3a\x29\xba\xd1\xd6\xc1\x53\x51\x7d\x3c\x90\xf4\xbc\xf5\x42\xab\xb5\xac\x5a\x83\xbf\x63\x5d\xff\xaa\xf4\x4e\x01\x2a\x71\x57\x93\x1b\x54\x79\xf8\x6c\x61\x9e\xef\xb0\xae\x2f\xef\x03\x4d\xd9\x68\xa9\x9c\xcd\xe3\x35\xe9\x4d\x0d\x5c\x78\x5f\x64\x67\x44\xa6\x1b\x14\xb5\xdb\xb0\x85\x44\x9e\x66\x70\xa7\x75\x9d\xd1\x76\x77\xa3\xde\xc5\x15\x98\x9c\xcd\x4c\x93\xa9\xb2\x24\x8b\x23\xf2\xcb\x48\x99\xbf\x7f\xb7\x4a\x93\xb9\x2d\x36\xb8\x15\x97\xa5\xb4\x85\x7e\x40\xb3\x4f\x66\x5e\x78\xe1\x1e\xfd\xc6\xdf\xf8\x22\xc0\x6a\xa2\x68\xa4\x23\x45\x13\x77\x47\xd1\x92\x05\x7d\xbe\xfd\x00\xe0\x53\x1f\xfe\xfc\x9f\xd5\x6a\x91\x78\x0d\x7f\xb4\xa6\x4e\xfe\x9c\x50\xae\x28\xf2\x67\x29\x09\x13\x81\xf4\xf3\x35\x0b\xa4\xbf\x63\xd2\x56\x1e\x04\xf6\x27\x06\x2c\x00\x92\x79\xc8\xad\x9c\xc8\x93\xd9\x89\xde\x05\x24\xe1\xfb\xe5\x4f\xf9\x0f\xfe\x33\x85\x3b\x2a\xdc\x63\xfe\x9f\xe5\x6f\x9f\x52\xaa\x75\xf9\xd2\x09\xd7\xda\xdf\x7e\x9d\xc1\xab\x71\xdf\x59\x1c\x45\x7d\x76\xc6\x91\x3e\x3a\xc9\x0c\xfc\x43\xc0\xd3\x24\x68\x59\x46\xc0\x89\x23\x33\x78\xfe\xc8\xc2\xe7\xbc\x4e\x56\x2d\x79\xfb\xa7\x76\x79\xa7\xa4\x4b\x2f\x8a\x2c\x67\x2d\x59\xc0\xe5\x91\x29\x20\x2d\xa7\xa0\x5f\x84\x5f\x56\xab\x1b\xd8\x84\x4f\xad\xc5\x12\xd6\xda\x30\xc1\x14\x36\x61\x5b\x24\x8c\x13\x99\x32\xc8\x43\xbb\x0c\xa0\xfd\xda\x76\x8f\x31\xfa\x24\xc5\xe2\xc8\x93\x32\x90\x0e\x5c\x71\x64\xd0\xb5\x46\x3d\x0b\xc2\xb0\x83\x53\x04\xfe\xe2\x97\x49\xe1\x00\x93\x10\x94\x29\x4c\x3c\xd5\x22\xe8\xdc\xa7\x59\x88\x3e\xfd\x97\x6b\xf8\xce\xaf\xe7\x41\x98\xe7\x39\x07\x8b\xa5\x2f\x61\x9f\x95\x78\x10\xb2\x26\x8f\xcc\xe0\x95\x67\xce\x58\x22\x60\x6d\xf1\x19\x01\x8c\xab\x29\x03\xc1\xc3\xc7\x2d\xc8\x1e\x22\x26\x95\x43\xb3\x16\x05\x82\xdb\x08\x07\xdb\xd6\x3a\xb8\x43\x90\xdb\xa6\xc6\x2d\x2a\x87\x25\x48\x05\xda\x94\x68\xc0\x69\x68\x8c\x7e\x90\x25\x92\xa0\xbb\xd6\x52\x31\xb6\x50\xeb\x4a\x16\x63\x84\xcf\x56\xe1\x51\xe9\xa8\xad\x8b\x83\xb7\xf6\x21\x8e\xff\xa4\x18\x3f\x09\x5e\x28\xbf\x37\xc2\x88\xad\x85\xbe\x9f\x41\xe3\x1f\x2f\xba\x2e\x0f\x13\x48\xdf\xe7\x67\x85\x79\xa6\xae\xa3\x92\x09\x7d\x9f\xc1\x85\x68\x64\x7e\x8b\xb6\xd1\xca\xe2\xb4\x1a\x33\x26\x2b\xa9\xe4\x17\xbc\x11\x6e\x93\x36\xc2\x6d\x42\x9a\x64\x43\x0d\xe9\x46\x94\x85\x21\x25\xbf\xc5\xa6\x16\x05\xa6\xa7\xef\xc4\x3d\x83\xa4\x4b\x66\x90\x2c\x92\x19\x5c\xfe\x98\xcd\x20\xe9\xe9\xd5\xbf\x9d\x36\x80\xd0\xca\x26\x15\x7f\xd2\x03\xbf\xe6\x7e\xb6\xf9\x44\x44\x1a\xbe\x0e\x61\x99\x85\xb4\xe3\x86\x45\xb1\x98\x81\xd3\xf7\xa8\xa8\x3e\x7a\xab\x67\x40\x53\x01\x1a\x98\x0c\x08\xf9\x8a\x97\xb2\xa1\xaf\xd0\xd6\x91\xfb\x2a\x65\x0f\x05\xe7\x13\xee\xd2\x6c\x58\xcc\x3f\x5b\x4c\xb9\xdb\xa1\xaf\x76\x29\x95\x93\x60\xfd\xe2\x0a\x5e\x79\x29\x9d\x6f\xcd\x0b\xf0\x5c\x94\x3b\x67\x71\xe1\x19\xcf\x47\x74\xda\x50\xe1\x2a\x78\x68\x68\x5c\xc9\xa8\xf5\xef\x99\xd9\xe6\xc3\xf8\x96\x7f\xe0\xc9\xeb\x83\xa6\x82\xc8\xe6\xcb\xf5\xe0\x98\xef\xae\x40\xc9\x9a\x53\xf2\x1f\x49\x1f\x9c\x79\xad\xa4\x5b\x36\x42\xa5\x5e\x1e\x01\xa3\x03\xab\xc4\xfd\x94\x3b\xf1\x75\x3e\x4c\x1b\x0a\x21\xff\x88\x6e\xa3\x4b\x48\xde\xbf\x5b\x25\xf0\xed\x5e\x39\xdd\x18\xa7\x91\x72\xd4\xbf\x6c\x3a\x8e\x6f\x52\x95\xf8\x38\x83\x17\x6e\xdf\xf0\xf8\xf6\x46\x2b\xdb\x6e\xd1\x7e\xc4\x52\x72\xaf\xe3\xfc\x94\xeb\x40\xd9\xf7\xb3\x90\x2c\x49\xd7\x11\x13\x3f\xf0\x42\x96\xc5\x63\x82\x9d\x9d\x95\xc6\xd2\xcf\x18\xec\xfc\x44\xf5\x82\xb7\xc3\xe6\x2f\xae\x20\x3d\xd9\x52\x06\x3c\x46\x11\x9d\xc5\xa2\x35\xd2\xed\xdf\xd2\x7c\x28\x19\x21\x6c\xf0\xf2\xcc\xfa\xc0\x14\x30\x35\x90\x00\x97\x9a\xb0\xe8\x5f\x5e\x94\xb8\x26\x31\xbc\xb9\xf3\x4a\x06\xdf\x8e\x13\x20\xfe\xc5\x6c\xa3\x58\x9e\x0b\xf0\xc6\xe8\xc6\xe6\x3c\x95\x24\xe1\xe8\xe0\x99\x78\x83\xab\x21\xd7\x16\x57\x63\xde\xc5\xdc\x30\x8e\x3f\x5f\x5d\x41\x92\xf8\xa2\x7f\xf2\x01\x8e\xa7\xf1\xaf\x5b\x10\x38\x58\x77\x7f\x04\xd5\x89\xaf\xfb\x9e\x63\x03\x9c\xc4\xde\x5c\x5e\x48\x49\xf3\x04\x34\xcb\x42\x37\x68\xf9\xcb\x13\xc8\x58\xfa\xe6\x63\xc0\x54\xcf\x00\x85\x49\x27\x50\xe1\x9e\x19\xd4\xbe\x0b\x53\xac\xef\x74\x83\xf9\x8b\x63\xc7\xf8\x26\x4b\xff\x33\x1f\x07\x8f\xb3\x67\xb6\x77\x9a\x09\xcf\xb9\xe1\x48\xe6\x44\xf8\x38\xa7\x3f\x9f\xef\x3c\xe5\x8f\x35\xe8\x3c\xcd\xb7\x56\x26\x92\x95\x77\x5d\x48\xfa\xbe\x4f\x27\xbd\xe8\xe4\x3c\x46\x6b\xe4\x4b\xf8\xfb\xfe\x37\xf8\x78\xe8\x0a\xe7\xa9\xb2\x2c\x1e\x5b\xe1\xd0\xe1\xbc\xb1\x93\xb9\x02\xcd\x78\x44\x7b\x76\x14\xa0\xc5\x71\xba\x0a\xdd\x23\x74\x91\x38\xf2\xcd\x0a\x2e\xde\xf0\x6f\x1c\x59\xcf\x70\xe1\xc7\x1b\x7e\x89\xa3\x95\x74\xf5\x30\xe2\xc7\xd1\x7f\xd1\x58\xa9\x87\x96\x1b\x0c\xfa\x84\xbb\xa0\x8b\xd3\x95\xb7\x63\x41\x80\xc2\xdd\xf9\x2e\x39\x32\xa4\xf6\xa1\x38\xf4\xc6\x63\x7b\x32\xb8\x08\xcc\x1d\x97\xff\xef\xfc\xe7\xfc\x2d\xde\xb5\xdc\xfd\x23\xea\x71\x4b\x74\x1f\x75\x39\xf4\xbb\x1a\x85\x45\x7a\x0f\x53\xba\x68\x24\x77\x3c\x2f\x88\x78\xfc\xde\x17\x4f\x1a\x35\x21\xdb\x3e\x14\x8c\xf0\x41\x13\x81\xf2\xad\xb4\x3c\x27\xf3\x87\xb0\x7e\x94\x0e\xc3\x9a\x6f\x26\x94\x1a\xf4\xcf\xaf\x0e\x6a\x68\x85\xfd\xb8\xe0\x66\x93\x5f\xab\xb5\xce\xbd\x63\xfb\x9e\x0f\x2e\xc1\xaf\xd3\xef\x83\xab\x3d\x05\xed\x66\x3e\x0f\xa5\x1b\xf8\x6e\x05\x28\x4e\x87\xe3\x27\x4d\x8f\x25\xfb\x66\xab\x4b\x64\x97\x3d\xf1\x18\xf3\xe5\xb7\x58\x49\xeb\xd0\xa4\x3c\x7e\xf9\x3c\xf0\xc3\xc0\x8c\x5a\x6b\x36\x6a\xb3\xe8\xc0\xdf\x81\xd0\x4f\xe5\x07\xd3\x15\x3e\xba\x9f\xb5\xd9\x0a\xe7\xd0\xc0\x4e\xba\x0d\x28\x0d\x85\xae\xb5\xb1\x7c\x97\x42\x31\x19\x09\xd2\x57\xb4\x72\xc4\xd3\x05\x9f\xbe\x61\x96\x05\x38\xd3\x62\x9f\xf9\x68\xe5\x01\x83\x57\xf0\x6a\x82\x42\x32\xfd\x75\x59\x9a\x05\x0c\x7f\x43\x84\xca\xd2\xa0\xb5\xe4\xc1\x70\x2e\x09\x24\x4f\x77\x46\xb1\x47\x51\xae\xe4\x16\x75\xeb\x16\x00\x3f\xfe\x00\x17\xe0\xe4\x16\xa9\x80\x6b\xc5\x11\xfe\xdd\x48\x87\x23\xc9\x19\x0a\x72\xcc\x04\x8b\xe3\xb1\x7e\x80\x09\x7b\x79\xa2\xfc\xcc\x05\x80\x7d\x28\xc2\xb9\x64\x7f\xf0\xf4\x48\x17\x4e\x34\x5f\xc6\xb8\xc6\x53\x71\xd3\x43\xea\x97\x27\xa7\xd4\xa9\x64\xf2\x67\x28\x1e\xa2\x91\x21\x51\x6f\x5b\x05\xa6\x55\x4f\x6a\x06\x65\xae\x83\x9d\xac\x6b\xa8\x09\x19\x0a\xb4\x02\x94\x6e\x83\xc6\x9f\x30\xb5\xff\x5d\x42\x89\x0d\xaa\x92\xc6\x6f\xad\x48\x22\x09\x0a\x69\xdb\x08\x4b\xe7\x4f\xa7\x0f\xe9\x3d\xdc\x88\x88\x21\x95\x33\x32\x21\xcd\x00\x8d\xd1\x9c\xd7\x04\x0e\x42\xfb\x3a\x4d\xb8\x0c\xa8\x0a\xbe\x7f\x69\xe1\x12\x5e\xda\xef\xc9\x08\xe1\x03\x0c\x2f\x6d\x32\x03\xe1\x73\x86\x1e\x42\x72\xd0\xa3\xdf\x00\x43\xc1\xcf\x89\x22\x78\x3d\xbf\x56\x3c\x49\x20\x6f\x81\xe7\xc5\xe0\x90\x81\xe7\x03\x6f\xf6\xb5\x2a\xd9\xba\xd4\x8f\x7c\xcf\x13\xad\x3e\x2c\xd3\x51\xc1\xea\xc3\xf2\x0d\x1a\xf7\xb3\xf4\x46\x1d\x56\x7f\xc5\x3d\x2d\x0e\x07\x8b\xe5\xa6\x75\xa5\xde\x29\xef\xe2\x8a\x4a\xc5\xba\xad\xeb\x3d\xd8\xe1\xc3\x93\x80\x9c\x71\xdd\x20\x65\xea\xbf\x53\x63\x47\x9a\x70\xeb\x9b\xff\x5b\x14\xf7\x95\xd1\xad\x2a\x69\x8c\x1e\x61\xf0\xbb\x74\x9b\xa5\xac\x86\x4b\x85\xaf\x80\x82\x93\x7b\x79\xfd\x7e\xf5\xee\xf6\xa3\xbf\x65\xa0\x00\x89\xd6\xe9\xad\x70\xb2\x10\x75\xbd\x8f\xc7\xa2\x54\xe6\xb0\xda\xe0\x81\xf5\x00\x26\x3a\x31\x89\x51\x8e\xbf\x6f\xe6\x2b\xb5\x33\x9e\x18\x40\xb5\xc3\xbb\xd1\x13\xf3\x39\x5c\xbb\xef\x2d\x34\xda\x5a\x49\xe5\xcf\x69\xd0\x0d\xcd\x85\x64\x01\x03\x0f\x84\xda\x83\x6a\xb7\x77\x64\xfc\xe0\x54\xf2\xa0\x9f\x1e\x77\x1b\x59\x6c\xd8\x26\xb6\xf7\x11\x8b\xd6\x21\x68\x85\x70\xb7\xe7\x1f\xb1\xa6\x62\x16\x14\x87\x2d\x6c\x84\x85\x3b\x44\x75\x10\x68\xdb\xa2\x40\x6b\xd9\xe2\xf3\xd8\x3e\xf6\x6b\x3a\x72\xe6\x79\x1e\x6e\x52\x38\x74\x93\x08\x5a\x59\xbd\xe1\x5b\x90\xad\xb8\xc7\xb4\xd8\x08\x05\xda\xe6\x4b\x76\xd2\x0c\x7e\xcc\x98\x42\x89\x3a\xff\xa4\x9d\x5c\xef\x53\xa6\x9f\x41\xb8\xab\xcf\x83\x57\x29\xdd\x2b\x3d\xdc\xd6\x10\xd6\xff\x75\xc9\x94\x54\x8e\x0e\xa8\x20\x84\xa7\x44\x8b\xc6\x90\x4e\x91\x73\x3e\x72\xda\xd0\xd2\xe4\x6c\x75\x58\xe1\x42\xfc\xce\x18\xbf\xcd\x37\xb5\xb6\xa1\xce\x0d\xe8\x43\x63\xe2\x70\xf3\x11\x47\x14\xec\x3f\x66\xb0\xf6\x97\x98\x3c\xab\x8e\x5e\x20\xa6\xa0\x79\xcd\x6a\xcf\xe8\x3d\x2b\x34\xac\x29\x59\xc7\x3d\x45\xf0\x41\x6e\x17\xb0\x76\x57\x95\x8e\xff\x1f\x00\x00\xff\xff\x91\x05\x3b\xb3\x05\x19\x00\x00")

func templatesApiGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesApiGotmpl,
		"templates/api.gotmpl",
	)
}

func templatesApiGotmpl() (*asset, error) {
	bytes, err := templatesApiGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/api.gotmpl", size: 6405, mode: os.FileMode(420), modTime: time.Unix(1525955683, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesConfigGotmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x54\x4d\x8f\xdb\x36\x10\x3d\x8b\xbf\x62\xaa\xc3\x5a\x2a\x22\x7a\x91\x53\x10\xc0\x87\x6d\x36\x41\x17\xbb\x07\xa3\x76\x9b\x33\x4d\x0d\x25\xc2\x14\x29\x90\x23\x2f\x8c\x8d\xff\x7b\x41\x7d\x38\xb2\xbd\xed\x21\x32\x60\x88\x33\xe2\xbc\xe1\x9b\xf7\xd8\x0a\xb9\x17\x15\xc2\xdb\x1b\xf0\x87\xf5\xd3\x7a\x5c\x9e\x4e\x8c\xe9\xa6\x75\x9e\x20\x63\x49\xaa\x1a\x4a\x19\x4b\xd2\xca\xb5\xfb\x8a\x6b\xbb\x14\x06\x25\xd5\xae\x11\x61\xb9\xd7\xb6\x6a\xb5\xe5\x87\x8f\x29\x4b\x5c\x8b\x96\xbc\x90\xda\x56\x90\x56\x9a\xea\x6e\xc7\xa5\x6b\x96\xb3\xf8\xfc\xbd\xa8\x5c\xca\x72\xc6\xa4\xb3\xa1\x47\x2a\x51\x89\xce\xd0\x43\x59\x7a\x0c\x01\x56\x90\x7e\xfe\x74\xff\xe9\xbe\xff\x68\xb9\x84\x2f\xce\x2a\x5d\x41\x89\x4a\x5b\x0c\x40\x35\x82\x1c\x42\xae\x25\xed\x6c\x00\xe5\x7c\x1f\x7e\x58\x3f\x41\x40\x7f\x40\xcf\x19\x1d\x5b\x9c\xb6\x06\xf2\x9d\x24\x78\x63\xc9\x84\xf1\xf3\x09\xe4\xb5\xad\x58\xf2\x88\xbb\xae\x82\xf9\xb3\x73\xce\xb0\xe4\xc9\x06\x94\x9d\xc7\x3f\xb7\xdb\xf5\x3c\xfe\xd0\x51\xfd\xa8\x83\xd8\x19\x2c\xe7\xf1\xed\xcb\xe6\x0b\x7a\xfa\xa6\x0d\x5e\x21\x6c\x5f\x36\xcf\x78\x9c\x25\xce\x99\xef\x68\xcc\xb3\x75\xaf\xf6\x5c\x70\xac\xe5\xf6\x68\xff\xfe\xeb\xe5\xb6\xdb\xad\x17\x12\xfd\xbc\xdb\x19\xc1\x7c\xc8\xb2\x13\x63\xaa\xb3\x12\x32\x09\xbf\x0f\x4c\xe4\xf0\x5d\x53\xfd\x38\xf0\xfd\xcd\x88\x2a\x64\xf9\x94\x8b\xf4\x4c\x63\x8d\xa9\x2c\x2d\x23\x25\xe9\x07\x48\xbf\xda\xd8\x15\xf4\x6b\x30\xae\xaa\xe2\xa4\x85\x2d\xa1\x6d\xbd\x53\xd0\x20\x79\x2d\x03\x4f\x73\xfe\x87\x73\xe6\x1f\xe1\xb3\x3b\xc9\x7b\x42\xf3\xeb\x9a\x62\x18\x40\xac\x3a\xcd\x82\x1c\x18\x1d\x08\x2d\x38\xfb\x01\x90\x57\x1c\xfa\xf9\x83\xf3\x70\xcf\xfb\x5f\xbf\x8e\xf5\x59\x92\x8c\xdd\x67\x97\xaa\xc9\xf9\xa6\xa7\x66\x04\x9f\xa2\xd7\xf0\x7a\x9c\x66\x51\x13\xb5\xb1\x89\x0d\xfa\x83\x96\x08\xce\x9a\x23\xc4\x19\x5f\x9d\x62\x3e\xfe\x9b\x6a\x64\x42\x21\xd1\x53\xa1\xb4\xc1\x58\x6d\x2d\xa8\x8e\xe7\xd9\xbe\x6c\x20\xaa\x00\x62\x02\xba\x80\x25\xbc\xd6\x68\x7b\x71\x46\xee\x62\xb5\xcd\x78\x9e\x8b\xbe\x67\xea\x79\x17\x6d\x8f\xc7\x77\xc1\x9e\xf1\xf8\x2b\x58\xa3\x1e\x6f\xa0\xca\x41\x87\xc5\x2b\x1a\x53\xec\xa3\x32\x23\xe0\xa8\x4e\x10\x1d\xb9\x46\x90\x96\xb0\xe4\x3f\xbf\x00\x8f\xc1\x75\x5e\x62\x18\xc1\x66\x2c\xde\x08\xfc\x3f\x11\x45\x47\xf5\x15\x56\xdd\xfb\x5b\x18\xf3\x7f\x08\x73\x3b\xde\x32\x17\x7d\x54\x74\xde\x0c\x13\x27\x38\x1b\xab\xa7\x8b\x1c\x1c\x84\xd1\xa5\x20\x04\x17\x01\x3f\x42\xbf\x23\xbc\xcb\xda\xb8\x35\x67\x2c\xf1\x48\x9d\xb7\x20\xa3\xd3\x96\x4b\x58\x0b\x1f\x10\xda\xf8\x1f\xc6\x2b\xaa\xf3\x22\x5e\x51\xa0\xbc\x6b\x40\xba\xa6\x11\xb6\x34\xda\x22\xa8\x68\x3e\x7e\xeb\xcf\xbe\x46\x96\x03\x7a\xef\xfc\xdc\x92\x63\x82\xb1\x44\x2b\xf8\xed\x52\x98\x70\x77\x07\xd9\x85\x78\x60\xb5\x82\x34\x85\x1f\x3f\x60\x3e\xe7\x21\x9a\xc7\xb2\x53\xef\xaa\x21\xfe\x35\x62\xa9\x2c\x5d\x14\xc5\x85\xa2\x17\xbd\xc7\xc7\xe8\xa4\xbc\x05\x34\x5d\x20\xd8\x21\x84\x16\xa5\x56\x7a\xd2\xdb\xa2\x28\x2e\xdc\xb5\x52\xc2\x04\x5c\xa4\x39\x4b\x4e\x67\xaa\xac\x36\xec\x14\xb9\x3a\xe8\xe6\x33\x28\x5a\x55\x8e\xfd\x1b\x00\x00\xff\xff\x74\x7a\x61\xab\x8e\x06\x00\x00")

func templatesConfigGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesConfigGotmpl,
		"templates/config.gotmpl",
	)
}

func templatesConfigGotmpl() (*asset, error) {
	bytes, err := templatesConfigGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/config.gotmpl", size: 1678, mode: os.FileMode(420), modTime: time.Unix(1525950326, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesParameterGotmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5b\xdd\x73\xdb\xb6\xb2\x7f\xb6\xfe\x8a\x2d\x6f\x9b\x21\x73\x65\x2a\xb7\xb7\xd3\x07\xdd\xba\x33\x4d\xe2\x34\xbe\x6d\x93\x9c\xb8\x49\x1f\x32\x99\x16\x22\x21\x09\x0d\x09\xd0\x00\x64\x59\x87\xc3\xff\xfd\x0c\x3e\xf9\x29\x5a\x72\xdc\x8f\xd3\x53\x3f\x24\xc2\xd7\x62\xf7\x87\xc5\x62\x77\x01\x96\x25\xa4\x78\x49\x28\x86\x40\x64\x24\xc1\x05\xe2\x28\xbf\x46\x19\x49\x91\x64\x3c\xa8\xaa\x49\x59\x02\x59\x02\xe3\x10\xff\x40\xe8\x85\xc4\xb9\x80\xf8\x07\x74\x63\x7e\x99\xf6\x04\xe5\x38\x23\xff\xc4\x10\xbf\x40\x39\x86\xaa\xba\x54\x85\xf9\x19\x10\x2a\xbf\xfc\x22\xcc\x30\x0d\x0d\x15\x44\x53\x08\x29\x93\x10\x5f\x88\x6f\x38\x47\xbb\xc8\x16\x9f\x23\xf1\x94\x88\x84\x93\x9c\x50\x35\x71\xe4\xbb\x5d\x50\x89\xf9\x12\x25\xb8\xae\xba\x94\x1c\xa3\x3c\x52\x3f\x5f\x6c\xb2\x0c\x2d\x32\x35\xe7\xc3\xb2\x04\x4c\x53\xa8\xaa\xb2\x84\xf8\x2d\xca\x36\xf8\xfc\xa6\xe0\x58\x08\xc2\x28\x54\x55\x14\x4d\x7c\x0f\x2b\x54\x2d\x51\x55\x4d\xc8\x12\x30\xe7\x8a\x6b\x2b\x3e\xf6\xcd\x8a\xfb\xf8\x15\x92\x6b\xa8\xaa\x29\x94\x25\x14\x9c\x50\xb9\x84\xe0\xb3\xab\x00\xe2\xef\x59\x82\xa4\x99\x43\x37\x0e\xa2\xa1\x5b\x9a\xf3\x45\xff\xa7\xa7\xfb\xe4\x0c\x28\xc9\xa0\x9c\x00\x70\x2c\x37\x9c\xaa\xda\x49\x35\xc0\x6a\x03\xf2\x21\x56\x6d\xf3\x3d\xb1\xea\xe9\x1d\xcf\xe8\x1b\x4a\xae\x36\x78\x8c\xd7\x46\x8f\xe3\xd8\xfd\xa3\x35\xe8\x48\x24\xce\xe9\x26\xdf\x03\x81\x6a\xfa\xb7\x92\xdd\xe8\xaf\x95\xe8\x18\x20\xea\x5f\xce\xce\x24\x1b\x21\x59\xfe\xd6\x40\x41\x18\x7d\xa5\xf8\x96\xe4\x1a\x07\xa6\xa3\xdd\x98\xdf\x63\xba\x92\xeb\xbd\x1b\xd3\x34\x5b\xbb\xe2\x60\x6c\x20\x5a\x96\x38\x13\xb8\xaa\x82\xa0\x2c\x31\x4d\x0f\x84\xb8\x0d\x4a\xd8\x44\xa5\x0b\x8a\x9e\xad\x37\x24\x6a\xe2\x68\x5a\x9f\x68\x79\x9f\x31\x9e\x23\x29\x31\x87\xaa\x8a\x2f\x25\x27\x74\x15\xd6\x9d\xcd\x9e\xab\x85\xbe\x15\x61\x2d\x92\x03\x0b\xdd\x8c\x82\xe5\x9a\xff\x5a\x60\xd5\x42\x1f\x05\xd6\x2b\x4d\x97\x0e\x43\x65\x1b\xff\x3a\x40\xfd\x52\x96\xb5\xc4\xbf\x1c\xa7\x55\x84\x92\x7c\x93\xef\xdd\x80\xaa\xd1\x70\x83\xaf\x20\xbe\xdc\xa2\xd5\x0a\xf3\x1f\x77\x05\x86\x80\x50\x89\x57\x98\xab\xfd\x7c\x41\xa5\x67\xe7\xbe\x61\x1d\x9b\x97\x98\x79\x33\xa1\xe0\x5b\x66\x0c\xd5\x6c\x7c\xf9\x45\x38\x84\xf1\xf8\xaa\x44\x6e\x87\x1a\x4c\x74\xe9\xfc\x26\xc9\x36\x82\x5c\x63\x5f\x7d\xec\xb6\x1d\x01\xd8\x34\xfe\xc7\x01\xec\x30\xe9\x00\xec\xaa\x8f\x03\x78\x93\x49\x52\x64\xf8\xe5\x72\x0f\xc6\xbe\xfd\xfe\x80\xd3\x48\x7c\x0c\x00\x0d\x9e\x8f\x12\x56\x1d\xcd\xe3\xbe\xc6\x7d\x6a\xc6\xc7\xb9\x22\xc7\xc0\x72\xf4\xc9\x50\xf3\xfe\x5f\xd7\x81\xc3\xe5\x60\x28\xdd\xff\xde\x5b\x29\x38\x2b\x30\x97\xbb\x4e\x60\xd4\x70\xf3\x2e\x84\xf7\x60\x0c\xb4\x12\xe7\x45\x86\xe4\xb8\xab\x13\x9b\xbe\x6d\x8f\x71\x48\xca\xa1\x25\x35\xed\x5a\x6f\xf5\x3a\x2a\xc9\x83\xb2\xf4\x2b\x55\x55\x81\xa9\xb0\xbb\xd7\xf4\xd7\xb5\x43\x18\x7b\x20\xa7\xb0\xd4\x3d\xc5\x38\x5e\x03\x7c\x6b\x25\xe8\x8a\x3f\x14\x51\x36\x05\x3f\xed\xb8\x88\x0e\xf3\x05\xa1\x69\xe1\xa0\xd2\xe3\x83\xbd\xde\x64\x3d\x87\x1a\x65\x6c\xd3\xe4\x1a\x71\xa5\x09\xd7\x88\x53\x15\xd7\xc4\x4f\xd6\x24\x4b\x07\xbc\xda\xd7\xda\xab\xfd\x96\x69\xeb\x56\x55\x93\x25\xe3\x50\xc7\xbb\x66\xd4\x73\x24\xea\x05\x14\xae\xf6\x09\xa3\xd7\x98\xab\x15\xb2\x15\x43\x4b\xa7\x88\x5f\xd0\x14\xdf\xbc\x45\xb6\x68\xed\xe5\xcf\x6d\x8d\xbd\x95\xcf\xb7\x6a\xf5\x39\xa2\x2b\x7c\x50\xf7\x27\x7a\xc5\xba\x82\xb8\x45\x52\xa8\xeb\x56\x27\xca\x5e\x2a\xf3\x33\x10\x5b\xb4\x8a\x2f\x8b\x8c\xc8\xc7\x3b\x23\x5a\x78\x10\xc3\x7d\x2b\xe2\x70\xcb\x32\x9c\x28\x28\x0d\x35\xe5\xdc\x18\x6e\x86\xd4\xc6\x2d\xa9\x19\x0c\x96\xf1\x53\x03\xa3\x97\x43\x69\x60\x77\x55\x7c\xe3\xad\xac\x4e\xdd\xee\x6a\x20\xe2\xc9\x98\x33\xf5\x76\x71\x95\x0c\x76\x9f\x36\xf6\x4c\x73\xd7\x30\x2e\xe2\x0b\xaa\xf7\x81\xd2\xb6\xb0\x9e\x6d\x6f\x08\x68\x9a\x5b\xd6\x37\xa8\x87\x79\xad\x0d\x0e\xd3\x21\xc5\x62\x0b\xbf\x1a\xb6\xbe\xee\xde\x01\x3e\x6b\x39\xe2\x57\x88\x0b\xfc\xd7\x45\xed\x70\x64\xac\x4e\xdd\x0e\x83\xa1\x67\x4d\x9b\x9d\xca\x14\xba\x3b\x63\xdf\x61\xd4\xde\x1f\x87\xd8\xbd\x33\x40\x45\x81\x69\x7a\xd0\x42\xbd\x3e\x14\xab\xa6\x8d\x2e\x50\xf2\x01\x19\x83\x15\xbf\xb2\xbf\x95\x48\xb3\x19\xfc\xb8\x26\x02\x96\x24\xc3\xb0\x45\x02\x56\x98\x62\x8e\x24\x4e\x61\xb1\x03\xb9\xc6\xda\xe6\xac\x30\x07\xc9\x58\x16\xab\xfe\xe7\x29\x91\x84\xae\x40\xfa\x71\x39\x59\xad\x25\x14\x9c\x5d\x63\x58\x6e\xa4\x26\xb5\xc6\x14\x76\x6c\x03\x1c\x9f\xf2\x0d\x6d\x51\x72\x53\x40\xc2\xf2\x1c\xd1\x74\x32\x21\x79\xc1\xb8\x84\x70\x02\x10\x50\x2c\x67\x6b\x29\x8b\x40\xe1\x1d\xac\x88\x5c\x6f\x16\x71\xc2\xf2\xd9\x8a\xd0\xd3\x15\xa3\x24\x51\xbf\x82\x6e\x23\x3b\x65\x05\xa6\xa8\x20\x33\xa3\xa8\x23\x1d\xdc\xc1\x3d\xd2\x85\x6f\xa8\x24\xf9\x01\x3d\x66\x39\x49\xd3\x0c\x6f\x11\x1f\xeb\xac\x24\xef\x36\xe7\xe4\xc3\x07\x9c\x31\x91\x20\xae\x45\xb3\xe8\xcc\x50\x41\xb4\xe8\x42\xf2\x65\x2e\xf7\x52\xd4\xad\x81\xd5\x49\x73\x18\xc5\x4f\xf1\x12\x6d\x32\x79\xa1\xd1\x14\xe6\x8c\x6b\xed\x46\xa7\x92\x0d\xed\xb6\x63\x3f\xfd\x80\x77\x53\xf8\xf4\x5a\xa9\x91\xda\x2a\x71\x8b\x88\x6a\x55\x7b\xa8\x43\xcf\x76\xef\x50\x8d\xb4\x56\xa9\xae\x48\x24\xa8\x95\xd0\x3c\xa7\x69\xc1\x08\x95\x80\x6f\x70\xb2\x91\x58\x68\xbd\x48\x18\xc7\x90\xb1\x15\x49\x80\x2d\x75\x0d\xc7\x6a\x87\xa5\x8a\x0e\x67\x1b\x89\x15\x69\x3d\x30\x9e\x2c\x37\x34\x19\x27\x1e\xae\x11\x4d\x33\xcc\x41\x75\x0d\x13\x79\x03\x0f\x57\x84\xaa\x63\x44\xe2\x1b\xe9\x5d\x6f\x8e\x74\x4a\x74\x0a\x85\xf9\xf9\x70\x90\xa8\xe9\xe7\x85\x8b\xe0\x21\x2a\x48\xfc\x1a\x8b\x82\x51\x81\x23\x50\x94\x9f\x9b\xf9\x9e\x69\xce\x26\x27\xd6\x5e\x6a\x46\x7b\xd3\x47\xaa\xc7\x49\x97\x89\xd9\xac\xde\x14\x96\x9d\x25\x67\x39\x70\x7c\xb5\xc1\x42\x4e\x4e\x4e\x6c\xed\xfc\x0c\x5e\xe0\xed\x08\xa7\x61\x34\x39\x39\xb1\x67\x80\x19\x13\x73\x8c\xd2\xd7\x86\x90\x62\x47\x75\xe8\x9a\xf9\x13\x3d\xe6\xe5\xe2\x57\x35\x0c\x73\x1e\x87\x0f\xad\xb9\x7f\xc2\xf2\x82\x09\x22\xf1\xb9\x2a\xab\xb1\x27\x05\x67\x8b\x0c\xe7\xaa\xab\xc2\xe2\x95\x29\x6a\x22\x27\x3f\x12\x99\xe1\x39\x40\xf0\x86\x16\x9c\x25\x58\x08\x1d\x56\x9c\x53\x49\xe4\x2e\x0e\xa6\xba\xd3\xa5\x44\x72\x23\xe6\xa0\xd6\xca\x4c\x1b\x3f\x61\x29\x0e\xa3\xc8\xb4\x3f\xc5\x12\x91\x6c\x0e\xb6\x4d\xcf\x1c\x9a\xb6\x4a\xfd\x93\xc8\x9b\xf8\x27\x4e\x24\xe6\xf1\x73\x8c\x52\xcc\xc3\x28\xbe\xc4\x32\x0c\x34\xc6\x54\x9e\xaa\x43\x45\xb9\xdc\xa8\x28\x32\x62\x4e\x9e\x99\xe5\xfa\xbf\x7f\x15\x8c\x06\x91\x23\xf3\xff\x97\x2f\x5f\x84\xb6\x29\x36\x7c\x4d\xc1\x96\x75\x27\xb3\x98\x13\x33\x73\xad\xe3\xaa\x41\x14\x0a\x02\xab\x6c\x0a\xd9\x7d\xaa\x65\xe3\x18\x45\x4f\x6c\x89\x4c\xd6\xa0\x06\x6b\x99\x35\xf6\x09\x12\x18\x94\xc9\xb3\x1c\xbc\x60\x56\x90\xb9\x63\xf3\x9b\x05\xe3\xf2\x27\x22\xd7\xa6\x43\xe8\xc7\x2b\x9a\xa9\xd9\xf5\xf3\x96\x4c\xbe\xc7\xd4\x4c\xf6\x98\xa5\xbb\xc8\x88\x51\x4d\x8c\xdd\x1f\x57\x24\x48\x38\x46\x6a\x87\x22\xa0\x78\x3b\xbc\xe3\x6c\x4f\xb6\xf8\x15\x27\x52\x91\xdc\x12\xb9\xd6\x1b\xd8\xf2\x04\xda\x40\x08\x20\x94\x48\xa2\xc7\xa6\x76\x07\xdf\xa6\xc5\xa3\xdb\x51\x3b\x26\x2a\xaa\x08\x5b\xe6\xcf\x03\x6f\x17\x42\x45\xbf\x96\x0f\x57\x67\xa3\xdf\x67\x24\xc3\xba\xb7\x69\xf0\x67\xe9\xc5\xd3\xaa\x72\x43\xce\xa0\x1f\x51\xea\xa0\xd8\x38\x2d\xc6\x17\xd5\x0b\xdb\x8b\x72\xbb\xb3\x76\x82\xd2\xa8\x63\x81\x7d\x2e\xd1\xfd\x30\x61\x2f\x40\x54\x47\x7a\x0f\xc6\xac\xd3\xa1\x18\x68\x77\xae\x4d\x48\x49\x3c\xff\x1d\x6e\x34\x1e\x34\xe5\x6c\xe0\x0d\x1e\xf0\xe9\x20\x18\xe0\xb4\x75\x54\x55\x19\x95\x88\x50\x01\x28\xcb\xb4\xfa\x2d\xd8\x86\xa6\xde\x92\x32\xae\x2b\xcb\x12\xd6\x9b\x1c\xd1\x26\x01\x50\x1e\x9c\x36\x10\x6a\x0e\xb9\x2b\x48\x82\xb2\x4c\x3b\x3e\x02\x03\xe2\x18\xd8\x42\x91\xc6\xa9\x31\xc8\xc8\xec\x53\x6b\x4e\x27\xb3\x99\x1a\x66\x4f\xee\xb9\x9e\x0f\x4b\xcc\x85\x76\xb3\xec\x14\x13\xa9\x5c\xdc\x31\xf6\x85\xe4\x9b\x44\x42\x39\x19\xd6\xe6\xd9\x43\xbb\x96\x4f\xb1\x5a\x83\xc2\x3a\xd2\x6a\x8a\x5e\x4d\x2b\x2d\xad\xb8\x24\x1c\x5b\x45\x73\xa5\x39\x48\xbe\xc1\xdd\xbe\x36\xa7\x67\xba\xda\x82\xd3\x8b\x5e\xe6\x0f\xaa\xea\xab\xd6\x5a\x35\x86\xf7\x08\x9b\x6c\xac\x25\x6c\x0a\x03\x84\x7d\xaf\xaf\x3b\x84\x7d\x43\x8f\xb0\xcf\xcd\x59\xda\xb6\x0c\x2f\x97\x73\x73\xbd\xdb\xec\x30\x20\xaf\xb9\xb0\xf0\x12\x83\x29\xdb\xb1\x8d\xe6\x01\x89\x5a\x43\x09\x6d\x0f\x6d\x34\x77\x87\xda\xe4\xbf\x19\x68\x0b\x73\xeb\x93\xbb\x96\x01\x4e\xfd\xf5\xad\x61\x54\x17\x3d\x9f\xae\x71\x80\xcd\xe6\x38\x42\x5b\xe3\xea\xc6\xee\xb8\xce\x8d\x31\x80\xa9\x18\x56\x9b\x46\x60\x37\x01\xb8\xb0\xc2\x34\x6a\xbb\x03\x06\x32\x0e\x13\x80\xba\x16\x4c\xb5\xa1\x33\xd0\xb9\x4b\xaf\x6b\xdf\x6c\x61\xde\x4f\x3d\xb6\x8c\xb2\x37\xbf\x0f\x67\x3e\x6b\xa1\xed\xd7\x65\xb2\xc6\x39\xb2\xae\x73\xd3\x4c\x5a\xf7\xf7\xde\xcc\xa4\x3f\x82\x8e\xb9\x0b\xf6\x67\x4f\x9d\xbc\x1a\x34\x2c\x3d\x4e\x8d\x58\xf1\x85\x78\x8c\x04\x56\x24\xda\xb3\x74\x3a\x39\x46\x46\x26\x6f\x1f\x5f\x95\xb3\xd2\x0d\x5f\x13\x16\x4c\xae\x61\x41\x68\x2a\x34\x23\x2e\xea\x52\x1e\x85\xf5\x6b\xa7\x40\x24\x20\x21\x36\xb9\x8e\x04\x90\x54\x11\x61\x91\xe1\x1b\x15\x5b\xd2\x95\x00\xa2\x4a\x39\xa6\x12\x10\xd8\xb4\x9f\xe2\x37\x34\xd1\x4f\xfc\x1a\xaf\x88\x90\x7c\x17\x99\xe4\x84\x72\x28\x0d\xcc\x8a\x15\x65\xf6\x85\x26\xe0\xbd\x10\x09\x5b\x92\x65\xb0\x11\x58\xd9\x5c\xa4\xa3\xd6\x1c\xcb\x35\x4b\x41\x99\x7d\x61\x5c\x13\x9d\xd6\x78\x8d\x13\x4c\xae\x31\x77\x80\x8e\xb9\x23\x11\x74\x5c\xec\x8e\xc7\x6f\x98\x73\x3e\x0b\xc7\x02\xde\xbd\xd7\x75\x75\xc2\xcc\x1b\x7b\x9b\xb7\xd1\xc9\x3e\x23\xe4\x0b\xbc\x35\xda\x2f\x1a\xa9\xf5\x49\x3d\xf4\x39\x12\xff\xd8\x60\xbe\xf3\x24\xae\xf4\x68\x1b\x9f\x9a\xc4\x80\x50\x5c\xb9\x53\x2b\x7e\xf3\xfa\xfb\x58\x0f\x09\xa3\x7d\x14\xd5\x8c\x9e\x60\x9d\xf2\x6e\x52\xd1\x99\x25\x63\x63\x11\x97\x6a\x40\xf8\xbf\x9f\xc3\x57\x5f\xc1\xe7\x8f\xba\xf9\xea\x66\xc0\xa1\xcf\xcf\x73\xce\x5f\x30\xe9\x07\xdb\x44\x93\xfb\x6b\x24\xb7\x5d\x55\xe5\x93\x64\xfb\x38\xd1\x0c\xf4\x13\xe5\xe3\x54\x27\x27\x55\x5b\x66\x8d\x96\x17\x7c\x02\xb0\x4c\x6f\x43\x53\x0d\x8b\x06\x7d\x97\x3d\xe7\x79\xdb\xe0\xb4\x92\xf5\xc6\x57\xac\x97\x53\xad\xe6\xa0\xe2\x4d\xe1\x6a\xfd\x61\x4f\xcb\xcf\x8a\xe1\x2b\x11\x7f\x8b\xe5\xcb\xef\x9a\xcf\x5a\x1a\x09\x3e\x9b\x60\xed\x68\x79\xac\x76\xeb\x80\xe1\x0b\x8f\x67\x62\xef\xcd\x05\xe8\x0d\xe0\x13\x5e\x1c\x0b\x9d\xb3\xac\x33\x7b\x75\x3a\xf4\x42\x28\xc6\x1d\x10\x7c\xd8\xd2\xcd\xcf\xe0\xdd\x7b\xa1\x6f\x4c\x4a\xb5\x2c\xba\x7b\x4b\xea\xea\xce\x62\x0f\x4f\x39\xd5\x27\xe1\x7d\x89\x68\x22\x58\x27\xe4\xdd\xf8\x6c\xaa\xa3\xa1\xf7\x4e\x6f\xb3\x27\x88\x32\xaa\x3c\x5a\x53\xf9\x1d\xde\xb5\x80\x79\x7f\xbf\x92\x78\x9b\xa1\x75\xd9\xd6\xb5\x03\xad\xde\x0b\xb7\xe1\x77\x6f\x86\xdd\xe9\xd0\x5e\x57\x93\x28\xa2\x7b\xf4\xfa\x76\xde\x19\x17\xca\xa4\x86\x5f\x3c\x7a\x34\x85\x40\x19\x6e\x42\x57\x26\x8d\xf9\xd9\x15\x2c\x11\xc9\x94\x8b\xfc\xd9\x75\xd0\xcb\x65\x87\x6d\x3e\x23\x97\x6e\x8f\x34\x1c\x06\x89\xd2\x85\x58\xbd\xb5\x1b\xd6\xde\xda\xb2\x28\xa1\xca\xa7\x48\xa2\xf9\x20\x24\x53\x30\xa0\x0c\xb7\x9a\xb6\xaa\xb3\x2c\x55\xb5\x4c\xf7\x6d\xcf\x74\xdc\x7c\x2c\xd3\x7b\xb5\x1f\x77\xe1\xe3\x63\x94\xb2\x63\x87\xbb\x9a\xfa\xb7\xc5\x1d\xde\xc4\xca\x4d\xeb\x6c\xe4\xbf\x35\xa8\xed\x1c\x59\x88\x1e\xb3\xd4\xea\x4b\x1d\x31\x90\xa5\xdf\xcc\xcf\x91\xee\xd1\x34\xcc\x51\xe3\x16\xb8\xeb\x69\xdb\x58\xf7\x50\x93\xd1\xb4\x87\x6a\x9a\xd6\x96\x6f\xb0\xd9\x73\xfa\x1b\x55\xe7\x37\x05\xe3\x52\xe7\x06\x16\x2c\xdd\xb5\xae\x5d\x7f\x60\x29\xce\x44\x7d\x4b\x14\xbf\xa1\x39\xe2\x62\x8d\xb2\xb2\x54\x5e\x29\x29\x5c\x9b\xbb\xc0\xeb\x0d\xe9\xbd\x44\xb8\xcc\x48\x52\x47\x8f\x61\x57\x84\xa9\xc9\xf3\x2b\x9f\x59\x45\x03\x7c\xc0\xa4\xc3\x60\x56\xc3\x77\x3b\x3b\x03\xc2\xe2\xf3\x97\xcf\xbc\xdb\xa7\x6b\x9d\xc9\x77\xa3\x0e\x7e\xe6\x1b\x4d\x8c\x87\x68\xed\xb9\xe1\x7b\xaf\xda\xd4\xf8\x2b\x17\x5f\x21\xda\x79\xcb\x00\x1d\xdf\xf5\x31\xa1\xa9\x4e\xd4\x3e\x50\x9d\x3b\x2a\x7a\xb4\xa8\x7b\x4f\xba\xa6\xd8\xb7\x9e\x65\x63\x68\x58\x38\xec\x29\xd7\xba\x43\x1a\x3f\x68\xb5\x73\x6e\x52\xf8\x1f\xc9\xc3\x14\x82\xc0\x1e\xb8\x7b\xf0\xe9\xac\x56\x73\x2b\x77\xcf\xe7\xc1\x83\xc0\xdd\xdb\x9a\x62\x38\x10\x3e\x37\x03\xf9\xd6\x5b\x8e\x8c\x20\x81\xd3\xc6\x15\xbe\x09\x64\x5f\xea\xd4\x78\x14\x99\xc8\x0e\x7e\x36\x0f\xb7\xdb\xaf\x50\x7a\xb1\x66\xf3\x75\xc9\x81\x46\xc1\x29\x42\xdb\xb8\x8e\xcf\x13\xdb\x88\x1a\x87\x23\x86\x72\xd4\x58\x9a\xbf\x05\xc7\xe8\xc3\xc4\x45\x54\x03\xeb\xd0\xfa\x61\x8f\x9a\x43\xc0\xf5\x0d\x1e\x5d\x5f\xd3\x87\xb7\x96\x5c\x6d\xa8\x03\x65\x1b\x91\xac\xaf\x4b\x1a\xdd\x0c\x53\xd5\x31\x52\x9b\xf0\x91\xa7\x73\x8c\xf5\x3e\x32\x35\xd3\x4c\x9d\x2f\x8c\xb1\x37\xcc\x75\xaf\x72\x07\xb2\xbe\x4d\x9d\xff\x7d\x4c\x44\xd5\xe4\xa9\x7f\xd7\xec\x7f\x37\x91\xfc\xda\x03\xd9\x7e\x69\xe2\xaf\x1e\xeb\x07\x5f\xc6\x8e\x70\x2c\xe2\x38\x76\xa7\xb5\x1d\x44\x49\x36\xa9\x26\x93\xb2\x84\x4f\x93\x0c\x09\xa1\x01\x9f\x9f\x41\xd8\x59\x84\xc8\xbe\x58\xeb\x45\xe5\x75\x4c\xae\x95\xaf\x75\xc6\xb7\xd2\x75\xad\xaf\xb0\x9a\x37\x3b\xc3\x0f\x06\xc7\x73\x4a\x0d\x66\xeb\x74\xd2\xde\x78\x14\x6d\x55\x84\xe0\x03\xde\x29\xac\x91\xf8\x0e\xef\x60\xc1\x58\xe6\xfd\x1d\xd8\x93\x1d\x2b\x5b\x4e\x8c\x4b\x3a\xfa\x10\x3b\x6a\xa9\x0e\x59\xc2\x27\x96\xf8\xd0\xda\xdc\xe9\x38\x6d\x29\x81\x4e\x85\xa1\x2d\x18\x49\x1a\x2a\x61\x64\x6c\xa9\x05\xda\xaa\x40\xc9\x34\xbc\x6b\x76\x3a\xfd\x9f\xf7\x35\xdd\x43\x04\x33\x8d\xdf\x64\x19\xdb\x9e\xe7\x85\xdc\xe9\x7c\x4e\xdb\x7c\xf8\x67\x9d\x6e\x90\x7d\x8e\x79\xf8\xf7\x41\x1c\x6d\x87\x7d\xce\x46\x02\x6a\xc0\xf3\x0e\xa1\xcb\x39\x18\x43\x68\x98\x76\xec\x44\xfb\xf8\xd7\x30\x9d\x41\x10\x40\x09\xb3\x19\x60\xd5\xee\x52\x9f\x05\x12\xe6\x76\x8c\xc9\x35\xe6\x4e\x46\xc2\xa8\x68\x1e\x88\xad\x64\xba\x7d\xb5\xd9\xb6\x02\xf5\xf5\xe8\xd8\x7d\x6a\xed\xf7\xd4\x7e\x11\x13\x26\xc4\x35\x97\x9b\xbf\xd7\xed\xaa\x31\xcd\x03\xaf\xc1\xfa\x76\xf8\xf6\x64\xbe\xd9\xef\xde\x32\x43\x3f\x73\xdf\xb9\xe7\xec\xc5\xe9\x96\xf5\xae\x53\xe9\x0d\x58\xdf\xaa\xfb\x6b\x93\xfa\x0d\xa4\x5e\xd2\xf6\x3b\xc9\xe6\x0b\x49\xa5\x7d\x77\x7a\xc9\x77\xf0\xc7\x6f\xad\x46\xbf\xd4\x46\xef\x6b\x11\xc6\x50\xdf\x77\xc0\x69\xd1\x7a\xe1\x7a\xdf\xa8\xb6\x21\xe8\xbd\x75\x6c\x31\xd8\x7a\x74\xdd\xe4\xf3\x4f\x8d\xd0\x1d\x2e\x99\x46\x6e\x94\x5c\xd9\x81\xde\xbe\xda\x09\x35\x9c\xb1\xfe\x12\xaa\xe6\x36\x32\x71\x8d\xf9\x1e\xe1\x8e\xeb\xc9\xd1\xb6\xa7\xcf\xd6\xd0\x34\x5f\x71\xdf\x96\xf7\x74\x26\x79\x30\x31\x30\x16\xe4\x0f\x18\x5c\xc7\x48\xcb\x6d\x30\x62\x36\x83\x82\x3f\xdf\xc1\xdd\xf1\xed\x7e\xf3\x03\xda\x1b\x1f\x7c\x35\x70\x13\x1b\xe4\x9b\x4c\x92\xa0\xf3\x9e\x63\xf4\xf1\xba\x05\xa1\x1d\x2a\x5f\x5d\x0f\xfb\xc9\x07\xb8\x05\xfb\x86\x0e\xbb\x0a\x70\x0a\xd6\x59\x38\xf0\x55\xee\xbe\x07\xf7\x7b\xa6\x1d\x78\xfa\x3c\xf0\xb8\xbe\xb7\x15\x74\xa2\xe6\x76\xf7\xa4\x06\xe2\x20\xd6\x5b\xe1\xc9\x6f\xa6\x18\x2d\xb7\x64\xcf\x95\x7c\x8a\x97\x6f\xdd\x9b\xd2\xe1\xaf\x17\x1a\xe7\xf9\x61\x18\xde\x0d\x8b\x07\x0f\xf4\x10\xc7\x4f\x53\x91\xf6\x1a\x37\xd7\xb9\x95\xe0\xf9\xd8\x75\xa0\x24\xeb\x86\x6d\x4d\x5c\x47\x3f\xbc\xf0\xbd\xf6\x1a\xe3\xdb\x5f\x8f\xb7\xee\x79\x75\x5a\xee\x8f\x35\xc5\x7d\x5b\xdc\xfe\x9c\x49\x79\x5d\xdd\xaf\x7e\x86\x39\xbf\x8b\xc5\x3e\x40\x9e\x5b\xe2\xa9\x03\xbe\x07\x18\x3c\x71\x06\xbf\xca\xb7\xbf\x66\x33\xb8\x26\xf9\x1c\x96\xf2\x6c\xc5\x26\xff\x0a\x00\x00\xff\xff\x2f\xc9\xc3\x28\x16\x44\x00\x00")

func templatesParameterGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesParameterGotmpl,
		"templates/parameter.gotmpl",
	)
}

func templatesParameterGotmpl() (*asset, error) {
	bytes, err := templatesParameterGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/parameter.gotmpl", size: 17430, mode: os.FileMode(420), modTime: time.Unix(1525953369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/api.gotmpl": templatesApiGotmpl,
	"templates/config.gotmpl": templatesConfigGotmpl,
	"templates/parameter.gotmpl": templatesParameterGotmpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"templates": &bintree{nil, map[string]*bintree{
		"api.gotmpl": &bintree{templatesApiGotmpl, map[string]*bintree{}},
		"config.gotmpl": &bintree{templatesConfigGotmpl, map[string]*bintree{}},
		"parameter.gotmpl": &bintree{templatesParameterGotmpl, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

