// Code generated by go-bindata.
// sources:
// config.yaml
// templates/api.gotmpl
// templates/config.gotmpl
// templates/parameter.gotmpl
// DO NOT EDIT!

package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _configYaml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb4\x92\x4f\x4b\xc3\x30\x18\xc6\xef\x7e\x8a\x97\x9e\xb6\x83\x9d\xe7\xde\x04\x15\x14\x94\x81\xbb\x6f\xaf\xed\xd3\x18\x97\x7f\x24\x99\xa2\x25\xdf\x5d\x9a\x6e\x93\x4d\xd1\x0d\xd9\xed\x6d\xd3\xdf\xd3\x5f\x9e\x44\xf1\xbb\x5d\xc5\xea\x8c\x88\x9d\x53\xb2\xe6\x28\xad\xe9\x1f\x89\xce\xc9\xb0\x46\x45\xb5\x35\xad\x14\x2b\x8f\xfc\x96\x28\xd8\x95\xaf\x51\x51\xd1\x75\x54\xce\xb4\xbb\x92\x9e\x52\x9a\x44\x68\xa7\x38\x22\x4c\x06\xa0\x14\x36\x6a\xa7\x8a\x35\x15\xd9\x0b\xc4\x4c\x2d\xba\x8e\x5e\xac\x34\x37\x52\x61\xca\xf1\x99\xca\x59\x5e\xa4\xf2\x11\xfe\x15\x7e\xca\xf5\x92\x05\x28\xa5\x45\x4a\x1b\xbe\x95\x0a\xf3\x41\xa8\xd8\xfe\xa0\xd8\x11\x85\x7e\x42\xd3\xa0\x99\x07\x87\x7a\x4f\x96\x43\x40\xac\xc2\x1b\x0b\x01\x7f\x17\xac\xb9\xee\x3f\x3e\x81\xdb\x8e\xc4\x37\xc5\x90\x43\x0e\x2d\x92\x9d\x3c\x61\x8b\x43\x7a\xbf\xa2\x6d\x03\x15\x76\x4f\xbd\x41\x2b\x8d\xec\x6f\xc3\x8f\x4d\x66\xe4\x18\xa9\xfb\x1e\xf8\xd3\x69\x48\x18\x05\xc3\x4b\xf9\x01\x1a\x39\x0e\x35\xab\x7e\x2c\x1f\x58\x63\x3c\x1e\xd0\xb5\xb7\x75\xf0\xf9\xc2\xee\xb9\x3b\xf6\xac\x11\xe1\xc3\xa1\x4d\x6f\x89\xdf\xfb\x96\x2d\x89\x48\x23\x05\xd3\x6f\x4c\x84\x31\x5d\x50\x4a\x07\x1e\x44\x79\x39\xbd\xdd\xce\x9b\x61\xc0\xa1\x02\x8e\x08\xda\x83\x4d\xf3\xef\x42\xe7\x5f\x95\xe5\x6e\x3f\x03\x00\x00\xff\xff\x82\x4f\xcf\x1e\x17\x04\x00\x00")

func configYamlBytes() ([]byte, error) {
	return bindataRead(
		_configYaml,
		"config.yaml",
	)
}

func configYaml() (*asset, error) {
	bytes, err := configYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config.yaml", size: 1047, mode: os.FileMode(420), modTime: time.Unix(1504847842, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesApiGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x94\x58\x5f\x73\xdb\x36\x12\x7f\x26\x3f\xc5\x96\x93\xa4\xa4\x47\xa6\xda\x3e\x6a\xce\x0f\xb9\x24\x4d\x7d\x4d\x52\x8f\xa5\x5c\x1f\x5b\x98\x5c\x51\x38\x53\x00\x0b\x80\x96\x15\x0e\xbf\xfb\xcd\x2e\x40\x8a\x92\x15\x37\xf5\x83\x45\x82\xfb\x0f\xbb\xbf\xfd\x03\x34\xa2\xb8\x17\x15\x42\xd7\x41\xfe\xfa\xe6\xfa\x26\xbc\xf6\x7d\x1c\xcb\x6d\xa3\x8d\x83\x34\x8e\x92\x42\x2b\x87\x8f\x2e\x89\xa3\x44\xa1\x9b\x6f\x9c\x6b\xe8\x59\x5b\xff\x7f\x6e\x65\xa5\x44\x4d\x2f\x76\x6f\x0b\x51\xf3\xa3\x93\x5b\xe4\x25\x67\xa4\xaa\x6c\x12\xc7\x51\x52\xe9\x5a\xa8\x2a\xd7\xa6\x9a\x3f\xce\xb5\x68\xdd\xe6\x27\xbf\x2e\xdd\xa6\xbd\xcb\x0b\xbd\x9d\x57\x52\x5d\x92\x3e\x23\xef\xe6\x4d\x63\xf4\x3a\x79\xfa\xbd\xd2\x4a\x16\xf4\x94\xc4\x51\x25\x95\x17\x04\x53\xaa\x2f\xa2\x16\xaa\xd4\x4c\x3d\xe8\x39\x12\xb3\x95\xf7\xf7\x58\x6b\x5b\x08\xc3\x44\x76\x27\xaa\x0a\xcd\x7c\x2b\xcb\xb2\xc6\x9d\x30\xf8\x8d\x0c\xa2\x91\x49\x1c\xd5\xba\x3a\xd2\x6f\xa5\x69\x1b\x8b\x6a\x5e\xeb\xca\xb4\xf6\x1b\x65\x39\x23\x0a\xa9\xaa\x24\x8e\x74\x83\x2a\xbc\x1d\xc9\x9d\xac\x4f\x9f\x2f\x2b\x9d\xc4\x51\xd7\x19\xa1\x2a\x84\xfc\x2d\xae\x45\x5b\xbb\x6b\x8e\xa0\xed\xfb\xae\x6b\x8c\x54\x6e\x0d\xc9\xcb\xbf\x12\xc8\xfb\x9e\x68\x51\x95\xfe\xc1\x33\xbd\xb8\xc7\xfd\x0c\x5e\x3c\x88\xba\x45\x58\x5c\x41\x3e\xe1\xa6\x6f\x7d\x4f\x20\x99\xca\xf1\xb4\x53\x61\x59\x1c\xcf\xe7\x70\xab\x5b\x87\x16\x4a\x5c\x4b\x85\x16\x44\x5d\x83\xdb\x20\x18\xbf\xac\xd7\xfc\xb6\x44\xf3\x80\x06\x2c\x9a\x07\x59\x60\x1e\xbb\x7d\x83\x03\xa7\x75\xa6\x2d\x1c\x74\x71\x74\x51\x49\x95\xbf\x53\x95\x54\x38\xd9\xde\x6f\x0d\x1a\xe1\xa4\x56\x6c\x1c\x34\x82\x30\x27\xbf\x20\xe4\x9f\xc4\x96\xc0\x3b\x91\xe0\x45\xb0\x60\xf3\xde\xe8\xb6\x89\xa3\xa8\xeb\x40\xae\x21\x7f\xdd\xba\x8d\x36\xf2\x0b\x96\xd0\xf7\xf4\x02\x44\xfa\x8b\x50\x65\x8d\xe6\xe7\x56\x15\x30\x3a\x29\xba\xd1\xd6\xc1\x53\x51\x7d\x3c\x90\xf4\xbc\xf5\x42\xab\xb5\xac\x5a\x83\xbf\x63\x5d\xff\xaa\xf4\x4e\x01\x2a\x71\x57\x93\x1b\x54\x79\xf8\x6c\x61\x9e\xef\xb0\xae\x2f\xef\x03\x4d\xd9\x68\xa9\x9c\xcd\xe3\x35\xe9\x4d\x0d\x5c\x78\x5f\x64\x67\x44\xa6\x1b\x14\xb5\xdb\xb0\x85\x44\x9e\x66\x70\xa7\x75\x9d\xd1\x76\x77\xa3\xde\xc5\x15\x98\x9c\xcd\x4c\x93\xa9\xb2\x24\x8b\x23\xf2\xcb\x48\x99\xbf\x7f\xb7\x4a\x93\xb9\x2d\x36\xb8\x15\x97\xa5\xb4\x85\x7e\x40\xb3\x4f\x66\x5e\x78\xe1\x1e\xfd\xc6\xdf\xf8\x22\xc0\x6a\xa2\x68\xa4\x23\x45\x13\x77\x47\xd1\x92\x05\x7d\xbe\xfd\x00\xe0\x53\x1f\xfe\xfc\x9f\xd5\x6a\x91\x78\x0d\x7f\xb4\xa6\x4e\xfe\x9c\x50\xae\x28\xf2\x67\x29\x09\x13\x81\xf4\xf3\x35\x0b\xa4\xbf\x63\xd2\x56\x1e\x04\xf6\x27\x06\x2c\x00\x92\x79\xc8\xad\x9c\xc8\x93\xd9\x89\xde\x05\x24\xe1\xfb\xe5\x4f\xf9\x0f\xfe\x33\x85\x3b\x2a\xdc\x63\xfe\x9f\xe5\x6f\x9f\x52\xaa\x75\xf9\xd2\x09\xd7\xda\xdf\x7e\x9d\xc1\xab\x71\xdf\x59\x1c\x45\x7d\x76\xc6\x91\x3e\x3a\xc9\x0c\xfc\x43\xc0\xd3\x24\x68\x59\x46\xc0\x89\x23\x33\x78\xfe\xc8\xc2\xe7\xbc\x4e\x56\x2d\x79\xfb\xa7\x76\x79\xa7\xa4\x4b\x2f\x8a\x2c\x67\x2d\x59\xc0\xe5\x91\x29\x20\x2d\xa7\xa0\x5f\x84\x5f\x56\xab\x1b\xd8\x84\x4f\xad\xc5\x12\xd6\xda\x30\xc1\x14\x36\x61\x5b\x24\x8c\x13\x99\x32\xc8\x43\xbb\x0c\xa0\xfd\xda\x76\x8f\x31\xfa\x24\xc5\xe2\xc8\x93\x32\x90\x0e\x5c\x71\x64\xd0\xb5\x46\x3d\x0b\xc2\xb0\x83\x53\x04\xfe\xe2\x97\x49\xe1\x00\x93\x10\x94\x29\x4c\x3c\xd5\x22\xe8\xdc\xa7\x59\x88\x3e\xfd\x97\x6b\xf8\xce\xaf\xe7\x41\x98\xe7\x39\x07\x8b\xa5\x2f\x61\x9f\x95\x78\x10\xb2\x26\x8f\xcc\xe0\x95\x67\xce\x58\x22\x60\x6d\xf1\x19\x01\x8c\xab\x29\x03\xc1\xc3\xc7\x2d\xc8\x1e\x22\x26\x95\x43\xb3\x16\x05\x82\xdb\x08\x07\xdb\xd6\x3a\xb8\x43\x90\xdb\xa6\xc6\x2d\x2a\x87\x25\x48\x05\xda\x94\x68\xc0\x69\x68\x8c\x7e\x90\x25\x92\xa0\xbb\xd6\x52\x31\xb6\x50\xeb\x4a\x16\x63\x84\xcf\x56\xe1\x51\xe9\xa8\xad\x8b\x83\xb7\xf6\x21\x8e\xff\xa4\x18\x3f\x09\x5e\x28\xbf\x37\xc2\x88\xad\x85\xbe\x9f\x41\xe3\x1f\x2f\xba\x2e\x0f\x13\x48\xdf\xe7\x67\x85\x79\xa6\xae\xa3\x92\x09\x7d\x9f\xc1\x85\x68\x64\x7e\x8b\xb6\xd1\xca\xe2\xb4\x1a\x33\x26\x2b\xa9\xe4\x17\xbc\x11\x6e\x93\x36\xc2\x6d\x42\x9a\x64\x43\x0d\xe9\x46\x94\x85\x21\x25\xbf\xc5\xa6\x16\x05\xa6\xa7\xef\xc4\x3d\x83\xa4\x4b\x66\x90\x2c\x92\x19\x5c\xfe\x98\xcd\x20\xe9\xe9\xd5\xbf\x9d\x36\x80\xd0\xca\x26\x15\x7f\xd2\x03\xbf\xe6\x7e\xb6\xf9\x44\x44\x1a\xbe\x0e\x61\x99\x85\xb4\xe3\x86\x45\xb1\x98\x81\xd3\xf7\xa8\xa8\x3e\x7a\xab\x67\x40\x53\x01\x1a\x98\x0c\x08\xf9\x8a\x97\xb2\xa1\xaf\xd0\xd6\x91\xfb\x2a\x65\x0f\x05\xe7\x13\xee\xd2\x6c\x58\xcc\x3f\x5b\x4c\xb9\xdb\xa1\xaf\x76\x29\x95\x93\x60\xfd\xe2\x0a\x5e\x79\x29\x9d\x6f\xcd\x0b\xf0\x5c\x94\x3b\x67\x71\xe1\x19\xcf\x47\x74\xda\x50\xe1\x2a\x78\x68\x68\x5c\xc9\xa8\xf5\xef\x99\xd9\xe6\xc3\xf8\x96\x7f\xe0\xc9\xeb\x83\xa6\x82\xc8\xe6\xcb\xf5\xe0\x98\xef\xae\x40\xc9\x9a\x53\xf2\x1f\x49\x1f\x9c\x79\xad\xa4\x5b\x36\x42\xa5\x5e\x1e\x01\xa3\x03\xab\xc4\xfd\x94\x3b\xf1\x75\x3e\x4c\x1b\x0a\x21\xff\x88\x6e\xa3\x4b\x48\xde\xbf\x5b\x25\xf0\xed\x5e\x39\xdd\x18\xa7\x91\x72\xd4\xbf\x6c\x3a\x8e\x6f\x52\x95\xf8\x38\x83\x17\x6e\xdf\xf0\xf8\xf6\x46\x2b\xdb\x6e\xd1\x7e\xc4\x52\x72\xaf\xe3\xfc\x94\xeb\x40\xd9\xf7\xb3\x90\x2c\x49\xd7\x11\x13\x3f\xf0\x42\x96\xc5\x63\x82\x9d\x9d\x95\xc6\xd2\xcf\x18\xec\xfc\x44\xf5\x82\xb7\xc3\xe6\x2f\xae\x20\x3d\xd9\x52\x06\x3c\x46\x11\x9d\xc5\xa2\x35\xd2\xed\xdf\xd2\x7c\x28\x19\x21\x6c\xf0\xf2\xcc\xfa\xc0\x14\x30\x35\x90\x00\x97\x9a\x17\x25\xae\x89\x93\xf7\x73\x5e\xee\xe0\xce\x71\xe8\xc3\xbf\x98\x6d\x94\xc4\xa3\x00\xde\x18\xdd\xd8\x9c\x07\x91\x24\x9c\x16\x3c\x13\xef\x69\x35\xa4\xd7\xe2\x6a\x4c\xb5\x98\x7b\xc4\xf1\xe7\xab\x2b\x48\x12\x5f\xe7\x4f\x3e\xc0\xf1\x00\xfe\x75\x0b\x02\x07\xeb\xee\x8f\xd0\x39\x71\x6f\xdf\x73\x38\x80\xf3\xd6\x9b\xcb\x0b\x29\x69\x9e\xe0\x64\x59\xe8\x06\x2d\x7f\x79\x82\x12\x4b\xdf\xbc\xdb\x99\xea\x19\x6c\x30\xe9\x04\x1d\xdc\x26\x83\xda\x77\x61\x70\xf5\xcd\x6d\x30\x7f\x71\xec\x18\xdf\x57\xe9\x7f\xe6\xe3\xe0\xa1\xf5\xcc\xf6\x4e\xc1\xff\x9c\x1b\x4e\x64\x8e\x13\xf9\xf3\x99\xcd\xf3\xfc\x58\x6d\xce\xd3\x7c\x6b\x0d\x22\x59\x79\xd7\x85\xf4\xee\xfb\x74\xd2\x75\x4e\x4e\x5e\xb4\x46\x2e\x84\xbf\xef\x74\x83\x6b\x87\xfa\x7f\x9e\x2a\xcb\xe2\xb1\xe9\x0d\xbd\xcc\x1b\x3b\x99\x20\xd0\x8c\x87\xb1\x67\x9b\x3e\x2d\x8e\x73\x54\xe8\x13\xa1\x5f\xc4\x91\x6f\x4b\x70\xf1\x86\x7f\xe3\xc8\x7a\x86\x0b\x3f\xc8\xf0\x4b\x1c\xad\xa4\xab\x87\x61\x3e\x8e\xfe\x8b\xc6\x4a\x3d\x34\xd7\x60\xd0\x27\xdc\x05\x5d\x9c\xa5\xbc\x1d\x0b\x02\x14\xee\xce\xf7\xc3\x91\x21\xb5\x0f\xc5\xa1\x0b\x1e\xdb\x93\xc1\x45\x60\xee\xb8\xd0\x7f\xe7\x3f\xe7\x6f\xf1\xae\xe5\x3e\x1f\x51\x37\x5b\xa2\xfb\xa8\xcb\xa1\xb3\xd5\x28\x2c\xd2\x7b\x98\xc7\x45\x23\xb9\xb7\x79\x41\xc4\xe3\xf7\xbe\x78\xd2\x92\x09\xd0\xf6\xa1\x60\x60\x0f\x9a\x08\x8b\x6f\xa5\xe5\x89\x98\x3f\x84\xf5\xa3\x2c\x18\xd6\x7c\xdb\xa0\x8c\xa0\x7f\x7e\x75\x50\x43\x2b\xec\xc7\x05\xb7\x95\xfc\x5a\xad\x75\xee\x1d\xdb\xf7\x7c\x44\x09\x7e\x9d\x7e\x1f\x5c\xed\x29\x68\x37\xf3\x79\x28\xd2\xc0\xb7\x28\x40\x71\x3a\x1c\x34\x69\x4e\x2c\xd9\x37\x5b\x5d\x22\xbb\xec\x89\xc7\x98\x2f\xbf\xc5\x4a\x5a\x87\x26\xe5\x41\xcb\xe7\x81\x6f\xfb\x33\x6a\xa2\xd9\xa8\xcd\xa2\x03\x7f\xdb\x41\x3f\x95\x1f\x41\x57\xf8\xe8\x7e\xd6\x66\x2b\x9c\x43\x03\x3b\xe9\x36\xa0\x34\x14\xba\xd6\xc6\xf2\xad\x09\xc5\x64\x24\x48\x5f\xd1\xca\x11\x4f\x17\x7c\xfa\x86\x59\x16\xe0\x4c\x8b\x7d\xe6\xa3\x95\x07\x0c\x5e\xc1\xab\x09\x0a\xc9\xf4\xd7\x65\x69\x16\x30\xfc\x0d\x11\x2a\x4b\x83\xd6\x92\x07\xc3\x09\x24\x90\x3c\xdd\x19\xc5\x1e\x45\xb9\x92\x5b\xd4\xad\x5b\x00\xfc\xf8\x03\x5c\x80\x93\x5b\xa4\xba\xad\x15\x47\xf8\x77\x23\x1d\x8e\x24\x67\x28\xc8\x31\x13\x2c\x8e\x07\xf8\x01\x26\xec\xe5\x89\xf2\x33\x47\x7d\xfb\x50\x84\x13\xc8\xfe\xe0\xe9\x91\x2e\x9c\x5d\xbe\x8c\x71\x8d\xa7\xe2\xa6\xc7\xd1\x2f\x4f\xce\xa3\x53\xc9\xe4\xcf\x50\x3c\x44\x23\x43\xa2\xde\xb6\x0a\x4c\xab\x9e\xd4\x0c\xca\x5c\x07\x3b\x59\xd7\x50\x13\x32\x14\x68\x05\x28\xdd\x06\x8d\x3f\x4b\x6a\xff\xbb\x84\x12\x1b\x54\x25\x0d\xda\x5a\x91\x44\x12\x14\xd2\xb6\x11\x96\x4e\x9a\x4e\x1f\xd2\x7b\xb8\xfb\x10\x43\x2a\x67\x64\x42\x9a\x01\x1a\xa3\x39\xaf\x09\x1c\x84\xf6\x75\x9a\x70\x19\x50\x15\x7c\xff\xd2\xc2\x25\xbc\xb4\xdf\x93\x11\xc2\x07\x18\x5e\xda\x64\x06\xc2\xe7\x0c\x3d\x84\xe4\xa0\x47\xbf\x01\x86\x82\x9f\x08\x45\xf0\x7a\x7e\xad\x78\x80\x40\xde\x02\x4f\x86\xc1\x21\x03\xcf\x07\xde\xec\x6b\x55\xb2\x75\xa9\x1f\xee\x9e\x27\x5a\x7d\x58\xa6\xa3\x82\xd5\x87\xe5\x1b\x34\xee\x67\xe9\x8d\x3a\xac\xfe\x8a\x7b\x5a\x1c\x8e\x10\xcb\x4d\xeb\x4a\xbd\x53\xde\xc5\x15\x95\x8a\x75\x5b\xd7\x7b\xb0\xc3\x87\x27\x01\x39\xe3\xba\x41\xca\xd4\x7f\xa7\xc6\x8e\x34\xe1\x7e\x37\xff\xb7\x28\xee\x2b\xa3\x5b\x55\xd2\xc0\x3c\xc2\xe0\x77\xe9\x36\x4b\x59\x0d\xd7\x07\x5f\x01\x05\x27\xf7\xf2\xfa\xfd\xea\xdd\xed\x47\x7f\x9f\x40\x01\x12\xad\xd3\x5b\xe1\x64\x21\xea\x7a\x1f\x8f\x45\xa9\xcc\x61\xb5\xc1\x03\xeb\x01\x4c\x74\x36\x12\xa3\x1c\x7f\xb3\xcc\x97\x67\x67\x3c\x31\x80\x6a\x87\x77\xa3\x27\xe6\x73\xb8\x76\xdf\x5b\x68\xb4\xb5\x92\xca\x9f\xd3\xa0\x1b\x1a\x07\xc9\x02\x06\x1e\x08\xb5\x07\xd5\x6e\xef\xc8\xf8\xc1\xa9\xe4\x41\x3f\x34\xee\x36\xb2\xd8\xb0\x4d\x6c\xef\x23\x16\xad\x43\xd0\x0a\xe1\x6e\xcf\x3f\x62\x4d\xc5\x2c\x28\x0e\x5b\xd8\x08\x0b\x77\x88\xea\x20\xd0\xb6\x45\x81\xd6\xb2\xc5\xe7\xb1\x7d\xec\xd7\x74\xe4\xcc\xf3\x3c\xdc\x99\x70\xe8\x26\x11\xb4\xb2\x7a\xc3\xf7\x1d\x5b\x71\x8f\x69\xb1\x11\x0a\xb4\xcd\x97\xec\xa4\x19\xfc\x98\x31\x85\x12\x75\xfe\x49\x3b\xb9\xde\xa7\x4c\x3f\x83\x70\x2b\x9f\x07\xaf\x52\xba\x57\x7a\xb8\x97\x21\xac\xff\xeb\x92\x29\xa9\x1c\x1d\x50\x41\x08\x4f\x89\x16\x8d\x21\x9d\x22\xe7\x7c\xe4\xb4\xa1\xa5\xc9\x29\xea\xb0\xc2\x85\xf8\x9d\x31\x7e\x9b\x6f\x6a\x6d\x43\x9d\x1b\xd0\x87\xc6\xc4\xe1\x8e\x23\x8e\x28\xd8\x7f\xcc\x60\xed\xaf\x2b\x79\x44\x1d\xbd\x40\x4c\x41\xf3\x9a\xd5\x9e\xd1\x7b\x56\x68\x58\x53\xb2\x8e\x7b\x8a\xe0\x83\xdc\x2e\x60\xed\xae\x2a\x1d\xff\x3f\x00\x00\xff\xff\x93\xfc\x92\xcd\xef\x18\x00\x00")

func templatesApiGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesApiGotmpl,
		"templates/api.gotmpl",
	)
}

func templatesApiGotmpl() (*asset, error) {
	bytes, err := templatesApiGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/api.gotmpl", size: 6383, mode: os.FileMode(420), modTime: time.Unix(1523772972, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesConfigGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\x54\xcd\x6e\xdb\x38\x10\x3e\x8b\x4f\x31\xab\x43\x2c\x2d\x2a\x3a\xe8\xa9\x28\xe0\x43\xb6\x69\xb1\x41\x7c\x30\xd6\xde\xed\x99\xa6\x86\x12\x61\x8a\x14\xc8\x91\x03\x23\xf5\xbb\x2f\x48\xcb\xa9\x6c\x67\xf7\x50\x05\x08\xcc\xa1\x38\xdf\xf0\xfb\x51\x2f\xe4\x4e\x34\x08\xaf\xaf\xc0\x1f\x56\x4f\xab\x71\x79\x3c\x32\xa6\xbb\xde\x79\x82\x82\x65\xb9\xea\x28\x67\x2c\xcb\x1b\xd7\xef\x1a\xae\xed\x5c\x18\x94\xd4\xba\x4e\x84\xf9\x4e\xdb\xa6\xd7\x96\xef\x3f\xe6\x2c\x73\x3d\x5a\xf2\x42\x6a\xdb\x40\xde\x68\x6a\x87\x2d\x97\xae\x9b\x4f\xea\xd3\xdf\x55\xe3\x72\x56\x32\x26\x9d\x0d\x09\xa9\x46\x25\x06\x43\x0f\x75\xed\x31\x04\x58\x40\xfe\xf9\xd3\xfd\xa7\xfb\xf4\xd2\x7c\x0e\x5f\x9c\x55\xba\x81\x1a\x95\xb6\x18\x80\x5a\x04\x79\x2a\xb9\x9e\xb4\xb3\x01\x94\xf3\xa9\xfc\xb0\x7a\x82\x80\x7e\x8f\x9e\x33\x3a\xf4\x78\x3e\x1a\xc8\x0f\x92\xe0\x95\x65\x67\x8c\x9f\x4f\x20\xaf\x6d\xc3\xb2\x47\xdc\x0e\x0d\x4c\x9f\xad\x73\x86\x65\x4f\x36\xa0\x1c\x3c\xfe\xb9\xd9\xac\xa6\xf5\x87\x81\xda\x47\x1d\xc4\xd6\x60\x3d\xad\x6f\x96\xeb\x2f\xe8\xe9\x9b\x36\x78\x85\xb0\x59\xae\x9f\xf1\x30\xd9\x78\xdb\xf9\x8e\xc6\x3c\x5b\xf7\x62\xdf\x1a\x8e\xbd\xdc\x0e\xed\xdf\x7f\x2d\x6f\xa7\xdd\x78\x21\xd1\x4f\xa7\x9d\x10\xcc\x4f\xbb\xec\xc8\x98\x1a\xac\x84\x42\xc2\xef\x27\x26\x4a\xf8\xae\xa9\x7d\x3c\xf1\xfd\xcd\x88\x26\x14\x65\xa4\xe5\x2c\x67\x2c\x15\x79\x1d\xa9\xc8\x3f\x40\xfe\xd5\xc6\x69\x20\xad\xc1\xb8\xa6\x89\x0a\x0b\x5b\x43\xdf\x7b\xa7\xa0\x43\xf2\x5a\x06\x9e\x97\xfc\x0f\xe7\xcc\x3f\xc2\x17\x77\x92\x27\x22\xcb\xeb\x9e\xe2\x44\x7c\xec\x7a\xd6\x80\x1c\x18\x1d\x08\x2d\x38\xfb\x01\x90\x37\x1c\x92\xee\xe0\x3c\xdc\xf3\xf4\x97\xd6\xb1\x3f\xcb\xb2\x71\xea\xe2\xd2\x2d\x25\x5f\x27\x4a\x46\xf0\x73\xf5\x1a\x5e\x8f\x2a\x56\x2d\x51\x1f\x87\x58\xa3\xdf\x6b\x89\xe0\xac\x39\x40\xd4\xf6\xea\x16\x53\xd9\x6f\xba\x91\x09\x95\x44\x4f\x95\xd2\x06\x63\xb7\x95\xa0\x36\xde\x67\xb3\x5c\x43\x54\x1f\xe2\x06\x0c\x01\x6b\x78\x69\xd1\x26\x53\x46\xee\x62\xb7\xf5\x78\x9f\x8b\xb9\x27\xae\x79\x17\x6d\x87\x87\x77\xc1\x9e\xf1\xf0\x2b\x58\xa3\x0f\x6f\xa0\xea\x93\xff\xaa\x17\x34\xa6\xda\x45\x47\x46\xc0\xd1\x95\x20\x06\x72\x9d\x20\x2d\x61\xce\x7f\xbe\x01\x1e\x83\x1b\xbc\xc4\x30\x82\x4d\x58\xbc\x31\xf6\x7f\x22\x8a\x81\xda\x2b\xac\x36\xe5\x5a\x18\xf3\x7f\x08\xd3\x18\xde\x32\x17\xf3\x53\x0d\xde\x9c\x14\x27\x78\x0b\x54\xa2\x8b\x1c\xec\x85\xd1\xb5\x20\x04\x17\x01\x3f\x42\x3a\x11\xde\x65\x6d\x3c\x5a\xc6\x58\xcd\xe7\xb0\x12\x3e\x20\xf4\xf1\x7f\x18\xbf\x47\x83\x17\xf1\x7b\x04\xca\xbb\x0e\xa4\xeb\x3a\x61\x6b\xa3\x2d\x82\x8a\x49\xe3\xb7\x61\x4c\x3d\x8a\x12\xd0\x7b\xe7\xa7\x39\x1c\x37\x18\xcb\xb4\x82\xdf\x2e\xdd\x08\x77\x77\x50\x5c\x38\x06\x16\x0b\xc8\x73\xf8\xf1\x03\xa6\xe2\x9e\xaa\x29\xde\x99\x47\x1a\xbc\x05\xd5\x11\xff\x1a\xb1\x54\x91\xcf\xaa\xea\xc2\xc6\xb3\x14\xec\xb1\x7a\xb6\xdb\x0c\xba\x21\x10\x6c\x11\x42\x8f\x52\x2b\x7d\x36\xd9\xac\xaa\x2e\x22\xb5\x50\xc2\x04\x9c\xe5\x25\xcb\x8e\xec\x0c\x67\xb5\x61\xc7\xc8\xd5\x5e\x77\x9f\x41\xd1\xa2\x71\xec\xdf\x00\x00\x00\xff\xff\x44\x15\x1a\xdf\x7b\x06\x00\x00")

func templatesConfigGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesConfigGotmpl,
		"templates/config.gotmpl",
	)
}

func templatesConfigGotmpl() (*asset, error) {
	bytes, err := templatesConfigGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/config.gotmpl", size: 1659, mode: os.FileMode(420), modTime: time.Unix(1523772991, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesParameterGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x5b\xdd\x73\xdb\xb6\xb2\x7f\xb6\xfe\x8a\x2d\x6f\x9b\x21\x73\x65\x2a\xb7\xb7\xd3\x07\xdd\xba\x33\x4d\xe2\x34\xbe\x6d\x93\x9c\xb8\x49\x1f\x32\x99\x16\x12\x21\x09\x0d\x09\xd0\x00\x64\x59\x87\xc3\xff\xfd\x0c\x3e\xf9\x4d\x4b\x8e\xfb\x71\x7a\xea\x87\x44\xf8\x5a\xec\xfe\xb0\x58\xec\x2e\xc0\xa2\x80\x04\xaf\x08\xc5\x10\x88\x94\x2c\x71\x8e\x38\xca\xae\x51\x4a\x12\x24\x19\x0f\xca\x72\x52\x14\x40\x56\xc0\x38\xc4\x3f\x10\x7a\x21\x71\x26\x20\xfe\x01\xdd\x98\x5f\xa6\x7d\x89\x32\x9c\x92\x7f\x62\x88\x5f\xa0\x0c\x43\x59\x5e\xaa\xc2\xfc\x0c\x08\x95\x5f\x7e\x11\xa6\x98\x86\x86\x0a\xa2\x09\x84\x94\x49\x88\x2f\xc4\x37\x9c\xa3\x7d\x64\x8b\xcf\x91\x78\x4a\xc4\x92\x93\x8c\x50\x35\x71\xe4\xbb\x5d\x50\x89\xf9\x0a\x2d\x71\x55\x75\x29\x39\x46\x59\xa4\x7e\xbe\xd8\xa6\x29\x5a\xa4\x6a\xce\x87\x45\x01\x98\x26\x50\x96\x45\x01\xf1\x5b\x94\x6e\xf1\xf9\x4d\xce\xb1\x10\x84\x51\x28\xcb\x28\x9a\xf8\x1e\x56\xa8\x4a\xa2\xb2\x9c\x90\x15\x60\xce\x15\xd7\x56\x7c\xec\x9b\x15\xf7\xf1\x2b\x24\x37\x50\x96\x53\x28\x0a\xc8\x39\xa1\x72\x05\xc1\x67\x57\x01\xc4\xdf\xb3\x25\x92\x66\x0e\xdd\xd8\x8b\x86\x6e\xa9\xcf\x17\xfd\x9f\x9e\xee\x93\x33\xa0\x24\x85\x62\x02\xc0\xb1\xdc\x72\xaa\x6a\x27\x65\x0f\xab\x35\xc8\xfb\x58\xb5\xcd\xf7\xc4\xaa\xa7\x77\x3c\xa3\x6f\x28\xb9\xda\xe2\x31\x5e\x6b\x3d\x8e\x63\xf7\x8f\xd6\xa0\x23\x91\x38\xa7\xdb\x6c\x00\x02\xd5\xf4\x6f\x25\xbb\xd1\x5f\x2b\xd1\x31\x40\x54\xbf\x9c\x9d\xb1\x20\x10\x46\x5f\x29\x8e\x25\xb9\xc6\x81\xe9\x62\xb7\xe4\xf7\x98\xae\xe5\x66\x70\x4b\x9a\x66\x6b\x51\x1c\x80\x35\x2c\x8b\x02\xa7\x02\x97\x65\x10\x14\x05\xa6\xc9\x81\xe0\x36\xe1\x08\xeb\x78\xb4\xe1\xd0\xb3\x75\x86\x44\x75\x04\x4d\xeb\x93\xad\x90\x2c\x7b\xc6\x78\x86\xa4\xc4\x1c\xca\x32\xbe\x94\x9c\xd0\x75\x58\x75\x36\xbb\xad\x12\xfa\x56\x6c\xb5\x48\x0e\x2c\x74\x33\x0a\x96\x6b\xfe\x6b\x81\x55\x09\x7d\x14\x58\xaf\x34\x5d\xda\x0f\x95\x6d\xfc\xeb\x00\xf5\x4b\x51\x54\x12\xff\x72\x9c\x56\x11\x4a\xb2\x6d\x36\xb8\x01\x55\xa3\xe1\x06\x5f\x41\x7c\xb9\x43\xeb\x35\xe6\x3f\xee\x73\x0c\x01\xa1\x12\xaf\x31\x57\xfb\xf9\x82\x4a\xcf\xce\x7d\xc3\x3a\x36\x2f\x31\xf3\xa6\x42\xc1\xb7\x4a\x19\xaa\xd8\xf8\xf2\x8b\xb0\x0f\xe3\xf1\x55\x89\xdc\x0e\x35\x98\xe8\xd2\xf9\xcd\x32\xdd\x0a\x72\x8d\x7d\xf5\xb1\xdb\x76\x04\x60\xd3\xf8\x1f\x07\xb0\xc3\xa4\x05\xb0\xab\x3e\x0e\xe0\x6d\x2a\x49\x9e\xe2\x97\xab\x01\x8c\x7d\xfb\xfd\x01\xa7\x91\xf8\x18\x00\x6a\x3c\x1f\x25\xac\x3a\x94\xc7\xbd\x8c\xfb\xd4\x8c\x8f\x73\x42\x8e\x81\xe5\xe8\x93\xa1\xe2\xfd\xbf\xae\x03\x87\xcb\xc1\x50\xba\xff\xbd\x9f\x92\x73\x96\x63\x2e\xf7\xad\x90\xa8\xe6\xe0\x5d\x08\xef\xc1\x18\x68\x25\xce\xf2\x14\xc9\x21\x27\x27\x36\xbd\x9a\x5e\x62\x9f\x7c\x7d\x8b\x69\xda\xb5\xc6\xea\x15\x54\x32\x07\x45\xe1\xd7\xa8\x2c\x03\x53\x61\xf7\xad\xe9\xaf\x6b\xfb\xd0\xf5\x10\x4e\x61\xa5\x7b\x8a\x71\xa4\x7a\xf8\xd6\xcb\xdf\x16\xbc\x2f\x8a\xac\x0b\x7e\xda\x72\x0b\x1d\xda\x0b\x42\x93\xdc\x41\xa5\xc7\x07\x83\x1e\x64\x35\x87\x1a\x65\xac\xd2\xe4\x1a\x71\xa5\x03\xd7\x88\x53\x15\xcb\xc4\x4f\x36\x24\x4d\x7a\x3c\xd9\xd7\xda\x93\xfd\x96\x69\xbb\x56\x96\x93\x15\xe3\x50\xc5\xb8\x66\xd4\x73\x24\xde\xfa\x05\x14\xae\xf6\x09\xa3\xd7\x98\xab\x15\xb2\x15\x7d\x4b\xa7\x88\x5f\xd0\x04\xdf\xbc\x45\xb6\x68\x2d\xe5\xcf\x4d\x5d\xbd\x95\xcf\xb7\x6a\xf5\x39\xa2\x6b\x7c\x50\xf7\x27\x7a\xc5\xda\x82\xb8\x45\x52\xa8\xeb\x56\x27\xca\x20\x95\xf9\x19\x88\x1d\x5a\xc7\x97\x79\x4a\xe4\xe3\xbd\x11\x2d\x3c\x88\xe1\xae\xfd\x70\xb8\xa5\x29\x5e\x2a\x28\x0d\x35\xe5\xd6\x18\x6e\xfa\xd4\xc6\x2d\xa9\x19\x0c\x96\xf1\x53\x03\xa3\x97\x43\x69\x60\x7b\x55\x7c\xe3\xad\xac\x4e\xdd\xee\xaa\x21\xe2\xc9\x98\xd3\xf4\x76\x71\x95\x0c\x76\x9f\xd6\xf6\x4c\x7d\xd7\x30\x2e\xe2\x0b\xaa\xf7\x81\xd2\xb6\xb0\x9a\x6d\x30\xec\x33\xcd\x0d\xbb\x1b\x54\xc3\xbc\xd6\x06\x87\xe9\x90\x62\xb1\x81\x5f\x05\x5b\x57\x77\xef\x00\x9f\xb5\x1c\xf1\x2b\xc4\x05\xfe\xeb\xa2\x76\x38\x32\x56\xa7\x6e\x87\xc1\xd0\xb3\xa6\xcd\x4e\x65\x0a\xed\x9d\x31\x74\x0c\x35\xf7\xc7\x21\x76\xef\x0c\x50\x9e\x63\x9a\x1c\xb4\x50\xaf\x0f\xc5\xaa\x6e\xa3\x73\xb4\xfc\x80\x8c\xc1\x8a\x5f\xd9\xdf\x4a\xa4\xd9\x0c\x7e\xdc\x10\x01\x2b\x92\x62\xd8\x21\x01\x6b\x4c\x31\x47\x12\x27\xb0\xd8\x83\xdc\x60\x6d\x73\xd6\x98\x83\x64\x2c\x8d\x55\xff\xf3\x84\x48\x42\xd7\x20\xfd\xb8\x8c\xac\x37\x12\x72\xce\xae\x31\xac\xb6\x52\x93\xda\x60\x0a\x7b\xb6\x05\x8e\x4f\xf9\x96\x36\x28\xb9\x29\x60\xc9\xb2\x0c\xd1\x64\x32\x21\x59\xce\xb8\x84\x70\x02\x10\x50\x2c\x67\x1b\x29\xf3\x40\xe1\x1d\xac\x89\xdc\x6c\x17\xf1\x92\x65\xb3\x35\xa1\xa7\x6b\x46\xc9\x52\xfd\x0a\xda\x8d\xec\x94\xe5\x98\xa2\x9c\xcc\x8c\xa2\x8e\x74\x70\x07\xf7\x48\x17\xbe\xa5\x92\x64\x07\xf4\x98\x65\x24\x49\x52\xbc\x43\x7c\xac\xb3\x92\xbc\xdd\x9c\x91\x0f\x1f\x70\xca\xc4\x12\x71\x2d\x9a\x45\x67\x86\x72\xa2\x45\x17\x92\xaf\x32\x39\x48\x51\xb7\x06\x56\x27\xcd\x61\x14\x3f\xc5\x2b\xb4\x4d\xe5\x85\x46\x53\x98\x33\xae\xb1\x1b\x9d\x4a\xd6\xb4\xdb\x8e\xfd\xf4\x03\xde\x4f\xe1\xd3\x6b\xa5\x46\x6a\xab\xc4\x0d\x22\xaa\x55\xed\xa1\x16\x3d\xdb\xbd\x45\x35\xd2\x5a\xa5\xba\x22\xb1\x44\x8d\x24\xe6\x39\x4d\x72\x46\xa8\x04\x7c\x83\x97\x5b\x89\x85\xd6\x8b\x25\xe3\x18\x52\xb6\x26\x4b\x60\x2b\x5d\xc3\xb1\xda\x61\x89\xa2\xc3\xd9\x56\x62\x45\x5a\x0f\x8c\x27\xab\x2d\x5d\x8e\x13\x0f\x37\x88\x26\x29\xe6\xa0\xba\x86\x4b\x79\x03\x0f\xd7\x84\xaa\x63\x44\xe2\x1b\xe9\x9d\x6e\x8e\x74\x1a\x74\x0a\xb9\xf9\xf9\xb0\x97\xa8\xe9\xe7\x85\x8b\xe0\x21\xca\x49\xfc\x1a\x8b\x9c\x51\x81\x23\x50\x94\x9f\x9b\xf9\x9e\x69\xce\x26\x27\xd6\x5e\x6a\x46\x3b\xd3\x47\xaa\xc7\x49\x9b\x89\xd9\xac\xda\x14\x96\x9d\x15\x67\x19\x70\x7c\xb5\xc5\x42\x4e\x4e\x4e\x6c\xed\xfc\x0c\x5e\xe0\xdd\x08\xa7\x61\x34\x39\x39\xb1\x67\x80\x19\x13\x73\x8c\x92\xd7\x86\x90\x62\x47\x75\x68\x9b\xf9\x13\x3d\xe6\xe5\xe2\x57\x35\x0c\x73\x1e\x87\x0f\xad\xb9\x7f\xc2\xb2\x9c\x09\x22\xf1\xb9\x2a\xab\xb1\x27\x39\x67\x8b\x14\x67\xaa\xab\xc2\xe2\x95\x29\x6a\x22\x27\x3f\x12\x99\xe2\x39\x40\xf0\x86\xe6\x9c\x2d\xb1\x10\x3a\xa0\x38\xa7\x92\xc8\x7d\x1c\x4c\x75\xa7\x4b\x89\xe4\x56\xcc\x41\xad\x95\x99\x36\x7e\xc2\x12\x1c\x46\x91\x69\x7f\x8a\x25\x22\xe9\x1c\x6c\x9b\x9e\x39\x34\x6d\xa5\xfa\x67\x29\x6f\xe2\x9f\x38\x91\x98\xc7\xcf\x31\x4a\x30\x0f\xa3\xf8\x12\xcb\x30\xd0\x18\x53\x79\xaa\x0e\x15\xe5\x72\xa3\x3c\x4f\x89\x39\x79\x66\x96\xeb\xff\xfe\x55\x30\x1a\x44\x8e\xcc\xff\x5f\xbe\x7c\x11\xda\xa6\xd8\xf0\x35\x05\x5b\xd6\x9d\xcc\x62\x4e\xcc\xcc\x95\x8e\xab\x06\x91\x2b\x08\xac\xb2\x29\x64\x87\x54\xcb\x46\x30\x8a\x9e\xd8\x11\xb9\xdc\x80\x1a\xac\x65\xd6\xd8\x2f\x91\xc0\xa0\x4c\x9e\xe5\xe0\x05\xb3\x82\xcc\x1d\x9b\xdf\x2c\x18\x97\x3f\x11\xb9\x31\x1d\x42\x3f\x5e\xd1\x4c\xcc\xae\x9f\x37\x64\xf2\x3d\xa6\x66\xb2\xc7\x2c\xd9\x47\x46\x8c\x72\x62\xec\xfe\xb8\x22\xc1\x92\x63\xa4\x76\x28\x02\x8a\x77\xfd\x3b\xce\xf6\x64\x8b\x5f\xf1\x52\x2a\x92\x3b\x22\x37\x7a\x03\x5b\x9e\x40\x1b\x08\x01\x84\x12\x49\xf4\xd8\xc4\xee\xe0\xdb\xb4\x78\x74\x3b\x6a\xc7\x44\x45\x15\x61\xc3\xfc\x79\xe0\xed\x42\xa8\xb8\xd7\xf2\xe1\xea\x6c\xdc\xfb\x8c\xa4\x58\xf7\x36\x0d\xfe\x2c\xbd\x78\x5a\x96\x6e\xc8\x19\x74\x63\x49\x1d\x0e\x1b\xa7\xc5\xf8\xa2\x7a\x61\x3b\xf1\x6d\x7b\xd6\x56\x38\x1a\xb5\x2c\xb0\xcf\x22\xba\x1f\x26\xe0\x05\x88\xaa\x48\xef\xc1\x98\x75\x3a\x14\x03\xed\xce\x35\x09\x29\x89\xe7\xbf\xc3\x2d\xc6\x83\xba\x9c\x35\xbc\xc1\x03\x3e\xed\x05\x03\x9c\xb6\x8e\xaa\x2a\xa3\x12\x11\x2a\x00\xa5\xa9\x56\xbf\x05\xdb\xd2\xc4\x5b\x52\xc6\x75\x65\x51\xc0\x66\x9b\x21\x5a\x27\x00\xca\x83\xd3\x06\x42\xcd\x21\xf7\x39\x59\xa2\x34\xd5\x8e\x8f\xc0\x80\x38\x06\xb6\x50\xa4\x71\x62\x0c\x32\x32\xfb\xd4\x9a\xd3\xc9\x6c\xa6\x86\xd9\x93\x7b\xae\xe7\xc3\x12\x73\xa1\xdd\x2c\x3b\xc5\x44\x2a\x17\x77\x8c\x7d\x21\xf9\x76\x29\xa1\x98\xf4\x6b\xf3\xec\xa1\x5d\xcb\xa7\x58\xad\x41\x6e\x1d\x69\x35\x45\xa7\xa6\x91\x90\x56\x5c\x12\x8e\xad\xa2\xb9\xd2\x1c\x24\xdf\xe2\x76\x5f\x9b\xcd\x33\x5d\x6d\xc1\xe9\x45\x27\xe7\x07\x65\xf9\x55\x63\xad\x6a\xc3\x3b\x84\x4d\x1e\xd6\x12\x36\x85\x1e\xc2\xbe\xd7\xd7\x2d\xc2\xbe\xa1\x43\xd8\x67\xe5\x2c\x6d\x5b\x86\x97\xab\xb9\xb9\xd2\xad\x77\xe8\x91\xd7\x5c\x55\x78\x89\xc1\x94\xed\xd8\x5a\x73\x8f\x44\x8d\xa1\x84\x36\x87\xd6\x9a\xdb\x43\x6d\xda\xdf\x0c\xb4\x85\xb9\xf5\xc9\x5d\x4b\x0f\xa7\xfe\xca\xd6\x30\xaa\x8b\x9e\x4f\xd7\xd8\xc3\x66\x7d\x1c\xa1\x8d\x71\x55\x63\x7b\x5c\xeb\x96\x18\xc0\x54\xf4\xab\x4d\x2d\xb0\x9b\x00\x5c\x58\x61\x6a\xb5\xed\x01\x3d\x19\x87\x09\x40\x55\x0b\xa6\xda\xd0\xe9\xe9\xdc\xa6\xd7\xb6\x6f\xb6\x30\xef\x26\x1d\x1b\x46\xd9\x9b\xdf\x87\x33\x9f\xb5\xd0\xf6\xeb\x72\xb9\xc1\x19\xb2\xae\x73\xdd\x4c\x5a\xf7\xf7\xde\xcc\xa4\x3f\x82\x8e\xb9\xff\xf5\x67\x4f\x95\xbc\xea\x35\x2c\x1d\x4e\x8d\x58\xf1\x85\x78\x8c\x04\x56\x24\x9a\xb3\xb4\x3a\x39\x46\x46\x26\x6f\x1e\x5f\xa5\xb3\xd2\x35\x5f\x13\x16\x4c\x6e\x60\x41\x68\x22\x34\x23\x2e\xea\x52\x1e\x85\xf5\x6b\xa7\x40\x24\x20\x21\xb6\x99\x8e\x04\x90\x54\x11\x61\x9e\xe2\x1b\x15\x5b\xd2\xb5\x00\xa2\x4a\x19\xa6\x12\x10\xd8\xb4\x9f\xe2\x37\x34\xd1\x4f\xfc\x1a\xaf\x89\x90\x7c\x1f\x99\xe4\x84\x72\x28\x0d\xcc\x8a\x15\x65\xf6\x85\x26\xe0\xbd\x10\x09\x3b\x92\xa6\xb0\x15\x58\xd9\x5c\xa4\xa3\xd6\x0c\xcb\x0d\x4b\x40\x99\x7d\x61\x5c\x13\x9d\xd6\x78\x8d\x97\x98\x5c\x63\xee\x00\x1d\x73\x47\x22\x68\xb9\xd8\x2d\x8f\xdf\x30\xe7\x7c\x16\x8e\x05\xbc\x7b\xaf\xeb\xaa\x84\x99\x37\xf6\x36\x6f\xa3\x93\x7d\x46\xc8\x17\x78\x67\xb4\x5f\xd4\x92\xea\x93\x6a\xe8\x73\x24\xfe\xb1\xc5\x7c\xef\x49\x5c\xe9\xd1\x36\x3e\x35\x89\x01\xa1\xb8\x72\xa7\x56\xfc\xe6\xf5\xf7\xb1\x1e\x12\x46\x43\x14\xd5\x8c\x9e\x60\x95\xf2\xae\x53\xd1\x99\x25\x63\x63\x11\x97\x6a\x40\xf8\xbf\x9f\xc3\x57\x5f\xc1\xe7\x8f\xda\xf9\xea\x7a\xc0\xa1\xcf\xcf\x73\xce\x5f\x30\xe9\x07\xdb\x44\x93\xfb\xab\x25\xb7\x5d\x55\xe9\x93\x64\x43\x9c\x68\x06\xba\x89\xf2\x71\xaa\x93\x93\xb2\x29\xb3\x46\xcb\x0b\x3e\x01\x58\x25\xb7\xa1\xa9\x86\x45\xbd\xbe\xcb\xc0\x79\xde\x34\x38\x8d\x64\xbd\xf1\x15\xab\xe5\x54\xab\xd9\xab\x78\x53\xb8\xda\x7c\x18\x68\xf9\x59\x31\x7c\x25\xe2\x6f\xb1\x7c\xf9\x5d\xfd\x29\x4b\x2d\xc1\x67\x13\xac\x2d\x2d\x8f\xd5\x6e\xed\x31\x7c\xe1\xf1\x4c\x0c\xde\x5c\x80\xde\x00\x3e\xe1\xc5\xb1\xd0\x39\xcb\x2a\xb3\x57\xa5\x43\x2f\x84\x62\xdc\x01\xc1\xfb\x2d\xdd\xfc\x0c\xde\xbd\x17\xfa\xc6\xa4\x50\xcb\xa2\xbb\x37\xa4\x2e\xef\x2c\x76\xff\x94\x53\x7d\x12\xde\x97\x88\x26\x82\x75\x42\xde\x8d\xcf\xba\x3a\x1a\x7a\xef\xf4\x36\x7b\x82\x28\xa3\xca\xa3\x35\x95\xdf\xe1\x7d\x03\x98\xf7\xf7\x2b\x89\xb7\x19\x5a\x97\x6d\x5d\x33\xd0\xea\xbc\x6a\xeb\x7f\xeb\x66\xd8\x9d\xf6\xed\x75\x35\x89\x22\x3a\xa0\xd7\xb7\xf3\xce\xb8\x50\x26\x35\xfc\xe2\xd1\xa3\x29\x04\xca\x70\x13\xba\x36\x69\xcc\xcf\xae\x60\x85\x48\xaa\x5c\xe4\xcf\xae\x83\x4e\x2e\x3b\x6c\xf2\x19\xb9\x74\x7b\xa4\xe1\x30\x48\x14\x2e\xc4\xea\xac\x5d\xbf\xf6\x56\x96\x45\x09\x55\x3c\x45\x12\xcd\x7b\x21\x99\x82\x01\xa5\xbf\xd5\xb4\x95\xad\x65\x29\xcb\x55\x32\xb4\x3d\x93\x71\xf3\xb1\x4a\xee\xd5\x7e\xdc\x85\x8f\x8f\x51\xca\x96\x1d\x6e\x6b\xea\xdf\x16\xb7\x7f\x13\x2b\x37\xad\xb5\x91\xff\xd6\xa0\xa6\x73\x64\x21\x7a\xcc\x12\xab\x2f\x55\xc4\x40\x56\x7e\x33\x3f\x47\xba\x47\xdd\x30\x47\xb5\x5b\xe0\xb6\xa7\x6d\x63\xdd\x43\x4d\x46\xdd\x1e\xaa\x69\x1a\x5b\xbe\xc6\x66\xc7\xe9\xaf\x55\x9d\xdf\xe4\x8c\x4b\x9d\x1b\x58\xb0\x64\xdf\xb8\x76\xfd\x81\x25\x38\x15\xd5\x2d\x51\xfc\x86\x66\x88\x8b\x0d\x4a\x8b\x42\x79\xa5\x24\x77\x6d\xee\x02\xaf\x33\xa4\xf3\x12\xe1\x32\x25\xcb\x2a\x7a\x0c\xdb\x22\x4c\x4d\x9e\x5f\xf9\xcc\x2a\x1a\xe0\x3d\x26\x1d\x7a\xb3\x1a\xbe\xdb\xd9\x19\x10\x16\x9f\xbf\x7c\xe6\xdd\x3e\x5d\xeb\x4c\xbe\x1b\x75\xf0\xd3\xde\x68\x62\x3c\x44\x6b\xcf\x0d\xdf\x83\x6a\x53\xe1\xaf\x5c\x7c\x85\x68\xeb\x2d\x03\xb4\x7c\xd7\xc7\x84\x26\x3a\x51\xfb\x40\x75\x6e\xa9\xe8\xd1\xa2\x0e\x9e\x74\x75\xb1\x6f\x3d\xcb\xc6\xd0\xb0\x70\xd8\x53\xae\x71\x87\x34\x7e\xd0\x6a\xe7\xdc\xa4\xf0\x3f\x92\x87\x29\x04\x81\x3d\x70\x07\xf0\x69\xad\x56\x7d\x2b\xb7\xcf\xe7\xde\x83\xc0\xdd\xdb\x9a\x62\xd8\x13\x3e\xd7\x03\xf9\xc6\x5b\x8e\x94\x20\x81\x93\xda\x15\xbe\x09\x64\x5f\xea\xd4\x78\x14\x99\xc8\x0e\x7e\x36\x8f\xb5\x9b\xaf\x50\x3a\xb1\x66\xfd\x75\xc9\x81\x46\xc1\x29\x42\xd3\xb8\x8e\xcf\x13\xdb\x88\x1a\x87\x23\x86\x72\xd4\x58\x9a\xbf\x05\xc7\xe8\xc3\xc4\x45\x54\x3d\xeb\xd0\xf8\x61\x8f\x9a\x43\xc0\xf5\x0d\x1e\x5d\x5f\xd3\x85\xb7\x92\x5c\x6d\xa8\x03\x65\x1b\x91\xac\xab\x4b\x1a\xdd\x14\x53\xd5\x31\x52\x9b\xf0\x91\xa7\x73\x8c\xf5\x3e\x32\x35\x53\x4f\x9d\x2f\x8c\xb1\x37\xcc\xb5\xaf\x72\x7b\xb2\xbe\x75\x9d\xff\x7d\x4c\x44\x59\xe7\xa9\x7b\xd7\xec\x7f\xd7\x91\xfc\xda\x03\xd9\x7c\x69\xe2\xaf\x1e\xab\x07\x5f\xc6\x8e\x70\x2c\xe2\x38\x76\xa7\xb5\x1d\x44\x49\x3a\x29\x27\x93\xa2\x80\x4f\x97\x29\x12\x42\x03\x3e\x3f\x83\xb0\xb5\x08\x91\x7d\xb1\xd6\x89\xca\xab\x98\x5c\x2b\x5f\xe3\x8c\x6f\xa4\xeb\x1a\x5f\x5e\xd5\x6f\x76\xfa\x1f\x0c\x8e\xe7\x94\x6a\xcc\x56\xe9\xa4\xc1\x78\x14\xed\x54\x84\xe0\x03\xde\x29\x6c\x90\xf8\x0e\xef\x61\xc1\x58\xea\xfd\x1d\x18\xc8\x8e\x15\x0d\x27\xc6\x25\x1d\x7d\x88\x1d\x35\x54\x87\xac\xe0\x13\x4b\xbc\x6f\x6d\xee\x74\x9c\x36\x94\x40\xa7\xc2\xd0\x0e\x8c\x24\x35\x95\x30\x32\x36\xd4\x02\xed\x54\xa0\x64\x1a\xde\xd5\x3b\x9d\xfe\xcf\xfb\x8a\xee\x21\x82\x99\xc6\x6f\xd2\x94\xed\xce\xb3\x5c\xee\x75\x3e\xa7\x69\x3e\xfc\xb3\x4e\x37\xc8\x3e\xc7\x3c\xfc\x9b\x20\x8e\x76\xfd\x3e\x67\x2d\x01\xd5\xe3\x79\x87\xd0\xe6\x1c\x8c\x21\x34\x4c\x3b\x76\xa2\x21\xfe\x35\x4c\x67\x10\x04\x50\xc0\x6c\x06\x58\xb5\xbb\xd4\x67\x8e\x84\xb9\x1d\x63\x72\x83\x39\x54\x6f\x60\x45\xfd\x40\x6c\x24\xd3\xed\xab\xcd\xa6\x15\xa8\xae\x47\xc7\xee\x53\x2b\xbf\xa7\xf2\x8b\x98\x30\x21\xae\xb9\xdc\xfc\xbd\x6e\x57\x8d\x69\xee\x79\x0d\xd6\xb5\xc3\xb7\x27\xf3\xcd\x7e\xf7\x96\x19\xba\x99\xfb\xd6\x3d\x67\x27\x4e\xb7\xac\xb7\x9d\x4a\x6f\xc0\xba\x56\xdd\x5f\x9b\x54\x6f\x20\xf5\x92\x36\xdf\x49\xd6\x5f\x48\x2a\xed\xbb\xd3\x4b\xbe\x83\x3f\x78\x6b\x34\xfa\xa5\x36\x7a\x5f\x89\x30\x86\xfa\xd0\x01\xa7\x45\xeb\x84\xeb\x5d\xa3\xda\x84\xa0\xf3\xd6\xb1\xc1\x60\xe3\xd1\x75\x9d\xcf\x3f\x35\x42\x77\xb8\x64\x1a\xb9\x51\x72\x65\x07\x7a\xf3\x6a\x27\xd4\x70\xc6\xfa\x1b\xa8\x8a\xdb\xc8\xc4\x35\xe6\x4b\x84\x3b\xae\x27\x47\xbb\x8e\x3e\x5b\x43\x53\x7f\xc5\x7d\x5b\xde\xd3\x99\xe4\xde\xc4\xc0\x58\x90\xdf\x63\x70\x1d\x23\x0d\xb7\xc1\x88\x59\x0f\x0a\xfe\x7c\x07\x77\xcb\xb7\xfb\xcd\x0f\x68\x6f\x7c\xf0\x55\xcf\x4d\x6c\x90\x6d\x53\x49\x82\xd6\x7b\x8e\xd1\xc7\xeb\x16\x84\x66\xa8\x7c\x75\xdd\xef\x27\x1f\xe0\x16\x0c\x0d\xed\x77\x15\xe0\x14\xac\xb3\x70\xe0\xab\xdc\xa1\x07\xf7\x03\xd3\xf6\x3c\x7d\xee\x79\x5c\xdf\xd9\x0a\x3a\x51\x73\xbb\x7b\x52\x01\x71\x10\xeb\x8d\xf0\xe4\x37\x53\x8c\x86\x5b\x32\x70\x25\x9f\xe0\xd5\x5b\xf7\xa6\xb4\xff\xeb\x85\xda\x79\x7e\x18\x86\x77\xc3\xe2\xc1\x03\x3d\xc4\xf1\x53\x57\xa4\x41\xe3\xe6\x3a\x37\x12\x3c\x1f\xbb\x0e\x94\xa4\xed\xb0\xad\x8e\xeb\xe8\x87\x17\xbe\xd7\xa0\x31\xbe\xfd\xf5\x78\xe3\x9e\x57\xa7\xe5\xfe\x58\x53\xdc\xb5\xc5\xcd\xcf\x99\x94\xd7\xd5\xfe\xea\xa7\x9f\xf3\xbb\x58\xec\x03\xe4\xb9\x25\x9e\x3a\xe0\x7b\x80\xde\x13\xa7\xf7\x4b\x7c\xfb\x6b\x36\x83\x6b\x92\xcd\x61\x25\xcf\xd6\x6c\xf2\xaf\x00\x00\x00\xff\xff\x49\x6c\x36\x6f\x0a\x44\x00\x00")

func templatesParameterGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesParameterGotmpl,
		"templates/parameter.gotmpl",
	)
}

func templatesParameterGotmpl() (*asset, error) {
	bytes, err := templatesParameterGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/parameter.gotmpl", size: 17418, mode: os.FileMode(420), modTime: time.Unix(1523772875, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"config.yaml": configYaml,
	"templates/api.gotmpl": templatesApiGotmpl,
	"templates/config.gotmpl": templatesConfigGotmpl,
	"templates/parameter.gotmpl": templatesParameterGotmpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"config.yaml": &bintree{configYaml, map[string]*bintree{}},
	"templates": &bintree{nil, map[string]*bintree{
		"api.gotmpl": &bintree{templatesApiGotmpl, map[string]*bintree{}},
		"config.gotmpl": &bintree{templatesConfigGotmpl, map[string]*bintree{}},
		"parameter.gotmpl": &bintree{templatesParameterGotmpl, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

