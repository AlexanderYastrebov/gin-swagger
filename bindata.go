// Code generated by go-bindata.
// sources:
// config.yaml
// templates/api.gotmpl
// templates/config.gotmpl
// templates/parameter.gotmpl
// templates/parameter.gotmpl.custom
// DO NOT EDIT!

package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _configYaml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb4\x93\x49\x8f\xdb\x30\x0c\x85\xef\xfd\x15\x84\x7b\x49\x0e\x75\x7a\xf6\xad\xe8\x02\xb4\x40\x0b\x03\xc9\xdd\x61\x6d\x5a\xa3\x89\x36\x88\xf2\x6c\x86\xfe\xfb\xc0\x6b\x26\xc1\x20\x0b\x06\xb9\x31\xd1\x7b\xd4\x47\x3e\x59\xe1\xb3\x6d\x42\xf6\x09\x00\x9d\x53\xb2\xc4\x20\xad\xe9\x7e\x02\x7c\x01\x83\x9a\x32\x28\xad\xa9\xa5\x68\x3c\xf5\xff\x02\x7c\x06\xb6\x8d\x2f\x29\x03\x64\xa6\x90\x31\xf9\x07\xf2\xdf\x27\x15\x3a\x39\x0a\x27\x59\xd2\xb6\x90\x6e\xb4\xfb\x21\x3d\xc4\xb8\x0a\xa4\x9d\xc2\x40\xbc\x1a\x3a\xa7\xc2\x06\xed\x54\x32\xba\x02\x7a\x41\xa1\x77\x6d\xdb\x16\xee\xad\x34\xbf\xa4\xa2\x1c\xc3\x1d\xa4\x9b\xfe\x10\xd2\x75\x7f\x67\x8e\xe5\x0e\x05\x41\x8c\xdb\x18\x27\x7f\x2d\x15\x15\x03\x79\x32\x5f\x90\xec\xd9\x77\xd2\x15\xf4\x24\x39\x70\x06\xc1\x37\x74\x30\x2b\xe9\xff\x54\x55\x54\x15\xec\xa8\x3c\x1a\x63\x9c\xf6\x11\x85\x20\xff\x87\xad\xf9\xd9\x89\x6f\x40\x7d\x00\x31\xc3\x4f\x88\xc3\xba\x4f\x66\xb1\x7e\x2b\x39\x9b\x02\x3a\x79\xc3\x08\x86\xee\xdd\x89\xb6\x15\x29\x3e\x7c\x5b\x15\xd5\xd2\xc8\xee\xcd\xbd\xbb\xec\xde\x72\x0d\xd4\xdf\xce\x70\x96\x69\xe8\xb0\x60\x83\x3b\xf9\x42\xb0\x70\xc8\x25\xaa\xae\x4c\xff\xa1\xa6\xe5\x72\xb0\x8e\xdc\xd6\x91\xef\x3f\x8b\x23\x76\x87\x1e\x35\x05\xf2\x7c\x32\x8c\x7c\x92\x5d\x9a\xc7\xdc\xf7\x74\x2a\xb2\x06\x11\x60\xa1\xc8\x74\xe3\x0b\x5e\xc2\x57\x88\xf1\xc2\xb8\xd2\x6f\xf9\xef\xb9\x9e\x8a\xc1\x4e\x8a\xe9\x8a\x46\x47\x66\x53\x7d\x78\xed\xc5\x7e\xb1\x7d\x02\xaf\x01\x00\x00\xff\xff\x6d\x2d\x48\xe5\xa3\x04\x00\x00")

func configYamlBytes() ([]byte, error) {
	return bindataRead(
		_configYaml,
		"config.yaml",
	)
}

func configYaml() (*asset, error) {
	bytes, err := configYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config.yaml", size: 1187, mode: os.FileMode(420), modTime: time.Unix(1488579393, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesApiGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x94\x58\x5f\x73\xdb\x36\x12\x7f\x16\x3f\xc5\x96\x93\xcb\x91\x1e\x99\x6a\xfa\xa8\x39\x3f\xb8\x8e\x9b\xe8\x92\x38\x3e\x4b\x99\x3c\xb6\x30\xb9\x22\x71\xa6\x00\x16\x00\x6d\x2b\x1a\x7e\xf7\x9b\x5d\x80\x14\xa5\x28\xee\x35\x0f\x0e\x09\xee\xff\xfd\xed\x1f\xa8\x11\xf9\x83\x28\x11\x76\x3b\xc8\x2e\x6f\x17\xb7\xe1\xb5\xeb\xa2\x48\x6e\x1a\x6d\x1c\x24\xd1\x24\xce\xb5\x72\xf8\xec\xe2\x68\x12\x2b\x74\xb3\xca\xb9\x86\x9e\xb5\xf5\x7f\x67\x56\x96\x4a\xd4\xf4\x62\xb7\x36\x17\x35\x3f\x3a\xb9\x41\x3e\x72\x46\xaa\xd2\xc6\x51\x34\x89\x4b\x5d\x0b\x55\x66\xda\x94\xb3\xe7\x99\x16\xad\xab\x7e\xf1\xe7\xd2\x55\xed\x7d\x96\xeb\xcd\xac\x94\xea\xbc\xd4\x4a\xe6\xf4\x14\x47\x93\x52\x2a\x4f\x08\x63\xaa\x6f\xa2\x16\xaa\xd0\x4c\xdd\xcb\x39\x10\xb3\x91\x0f\x0f\x58\x6b\x9b\x0b\xc3\x44\xf6\x49\x94\x25\x9a\xd9\x46\x16\x45\x8d\x4f\xc2\x90\x6d\xbb\x9d\x11\xaa\x44\xc8\xde\xe2\x5a\xb4\xb5\x5b\xb0\xcb\xb6\xeb\x76\xbb\xc6\x48\xe5\xd6\x10\xff\xe3\xcf\x18\xb2\xae\x23\x5a\x54\x85\x7f\xf0\x4c\xaf\x1e\x70\x3b\x85\x57\x8f\xa2\x6e\x11\xe6\x17\x90\x8d\xb8\xe9\x5b\xd7\x51\x54\xc7\x72\x3c\xed\x58\x58\x1a\x45\xb3\x19\xdc\xe9\xd6\xa1\x85\x02\xd7\x52\xa1\x05\x51\xd7\xe0\x2a\x04\xe3\x8f\xf5\x9a\xdf\x2e\x6f\x17\x60\xd1\x3c\xca\x1c\xb3\xc8\x6d\x1b\xec\xd9\xac\x33\x6d\xee\x60\x17\x4d\xce\x4a\xa9\xb2\x6b\x55\x4a\x85\x23\xdf\x3e\x37\x68\x84\x93\x5a\xb1\x65\xd0\x08\xca\x90\xfc\x86\x90\xdd\x88\x0d\xa5\x7a\x24\xc1\x8b\x60\xc1\xe6\x9d\xd1\x6d\x13\x4d\x26\xbb\x1d\xc8\x35\x64\x97\xad\xab\xb4\x91\xdf\xb0\x80\xae\xa3\x17\x20\xd2\xf7\x42\x15\x35\x9a\xdf\x5a\x95\x47\xc1\xa9\xc9\xe4\x56\x5b\x07\xdf\x4b\xea\x7a\x8a\xa8\x63\xb7\x73\xad\xd6\xb2\x6c\x0d\x7e\xc5\xba\xfe\xa0\xf4\x93\x02\x54\xe2\xbe\xa6\x10\xa8\x62\xff\xd9\xc2\x2c\x7b\xc2\xba\x3e\x7f\x08\x34\x45\xa3\xa5\x72\x36\x8b\xd6\xad\xca\x21\x31\x70\xe6\x43\x91\x9e\x10\x99\x54\x28\x6a\x57\x91\x81\x40\xe4\x49\x0a\xf7\x5a\xd7\x29\x79\xfb\x34\xe8\x9d\x5f\x80\xc9\xd8\xcc\x24\x1e\x2b\x8b\xd3\x68\x42\x61\x19\x28\xb3\x77\xd7\xab\x24\x9e\xd9\xbc\xc2\x8d\x38\x2f\xa4\xcd\xf5\x23\x9a\x6d\x3c\xf5\xc2\x73\xf7\xec\x1d\xbf\xf2\x15\xc3\x6a\x26\x93\x81\x8e\x14\x8d\xa2\x3d\x99\x2c\x59\xd0\x97\xbb\x8f\x00\xbe\x4e\xe0\x8f\xff\x5a\xad\xe6\xb1\xd7\xf0\x7b\x6b\xea\xf8\x8f\x11\xe5\x8a\x12\x7f\x92\x92\x20\x11\x48\xbf\x2c\x58\x20\xfd\x3b\x24\x6d\xe5\x5e\x60\x77\x64\xc0\x1c\x20\x9e\x85\x2a\xc9\x88\x3c\x9e\x1e\xe9\x9d\x43\x1c\xbe\x9f\xff\x92\xfd\x1c\x3e\xb3\xae\xb9\x57\x16\xcf\x5a\x39\xf3\xe7\x1d\xfd\xc9\xdd\x73\xf6\xef\xe5\xe7\x9b\x84\x1a\x46\xb6\x74\xc2\xb5\xf6\xf3\x87\x29\xbc\x1e\xe2\x91\x46\x93\x49\x97\x9e\x08\xb0\xcf\x5a\x3c\x05\xff\x10\x60\x36\x4a\x66\x9a\x12\xa0\xa2\x89\x09\x0c\xac\xf9\xa5\x24\xcc\x66\xb0\xfa\xfc\xf6\xf3\x1c\xe4\xa6\xa9\x71\x83\xca\xc1\xac\x95\x91\xb7\x72\xc9\x61\x1a\xdb\x79\xa3\xa9\x1b\x78\x42\x2c\xa6\x10\xdf\x68\x07\xa3\x13\x42\x46\x97\x8e\x0c\x38\x0c\xdd\x4b\x96\x9c\x56\x48\x81\xf1\xd9\x4a\x96\x5e\x14\x85\x2e\xf5\x6a\x7c\xc1\x1c\xc4\x02\xa4\xe5\xbe\xe0\x0f\xe1\xfd\x6a\x75\x0b\x55\xf8\xd4\x5a\x2c\x60\xad\x0d\x13\x8c\xf1\x1c\xe2\x4a\xc2\xb8\xbb\x50\x65\xfb\x9a\x2b\x42\x35\xfd\x28\xde\x87\xc5\x73\x54\xfa\xe4\x96\x27\x65\x84\xef\xb9\xa2\x89\x41\xd7\x1a\xf5\x62\x75\x04\x0f\x8e\x4b\xe3\xbd\x3f\x26\x85\x3d\x7e\x03\x2a\xc6\xf8\xf5\x54\xf3\xa0\x73\x9b\xa4\x01\x7e\xf4\x57\xae\xe1\x27\x7f\x9e\x05\x61\x9e\xe7\x14\x2e\x97\xbe\xb5\x7e\x51\xe2\x51\xc8\x9a\x22\x32\x85\xd7\x9e\x39\x65\x89\x80\xb5\xc5\x17\x04\x30\xb0\xc7\x0c\x84\x4f\x9f\xb7\x20\xbb\xcf\x98\x54\x0e\xcd\x5a\xe4\x08\xae\x12\x0e\x36\xad\x75\x70\x8f\x7b\x5c\x62\x01\x52\x81\x36\x05\x1a\x70\x1a\x1a\xa3\x1f\x65\x81\x24\xe8\xbe\xb5\x34\x21\x2c\xd4\xba\x94\xf9\x90\xe1\xef\x47\xc3\xa0\x71\x50\xb5\x8b\x42\xa8\xb6\x21\x89\x7f\x67\x42\x7c\x9f\xb9\x71\x2b\x67\xdc\x94\x52\xc9\x6f\x78\x2b\x5c\x95\x34\xc2\x55\x01\xca\x69\xdf\x80\x76\x03\x12\xc2\x3a\x90\xdd\x61\x53\x8b\x1c\x93\xe3\x77\xe2\x9e\x42\xbc\x8b\xa7\x10\xcf\xe3\x29\x9c\xbf\x49\xa7\x10\x77\xf4\xea\xdf\x8e\xa7\x47\x18\x83\xa3\x71\x31\x1a\x9e\x27\x43\xc4\x06\x1f\xf1\x27\xe1\x6b\x1f\xba\x69\xa8\x0b\x9e\x74\x1e\xf4\x61\xca\xb0\x2f\xfe\x69\x7e\x01\xaf\xfd\xe1\xce\x8f\xdd\x39\x57\x46\xd8\x26\x92\x94\x60\x78\x32\xca\x9e\x3f\x3b\x19\xec\xf1\xd0\x84\x8b\xe0\x48\x3f\x9c\x78\x20\xf1\x40\x56\x08\xd9\x27\x74\x95\x2e\x20\x7e\x77\xbd\x8a\xe1\xff\x97\x9a\x7d\xb1\x98\xec\x17\x21\x9f\x54\xe5\xa8\xc7\xdb\x64\x58\x6f\xa4\x2a\xf0\x79\x0a\xaf\xdc\xb6\xe1\xf5\xe6\x4a\x2b\xdb\x6e\xd0\x7e\xc2\x42\xf2\x3c\x60\xb4\xc8\x75\xa0\xec\xba\x69\xc0\x44\xbc\xdb\x11\x13\x3f\xf0\x41\x4a\x70\xa1\xb9\x0d\x5d\xd7\xaf\x13\xb7\xc2\x88\x8d\xfd\xbb\x46\xef\x76\x59\x58\x51\xbb\x2e\xfb\x55\xaa\xe2\x24\xdb\x09\x75\x07\xdb\xcb\xd0\xf4\x38\xb9\x3b\xbf\xe3\xbc\x62\x43\x58\xc2\xfc\x02\x92\x23\xa9\x29\xad\xc4\x9e\xce\x62\xde\x1a\xe9\xb6\x6f\x69\x5d\x93\x9c\x50\x8e\xcf\xf2\xc4\x79\xcf\x14\x20\xd0\x93\x00\xd7\xd9\xab\x02\xd7\xc4\xc9\xe1\x3b\x2d\xb7\xf7\x68\x58\xc3\xf0\x4f\x66\x1b\x24\xf1\x74\xc6\x5b\xa3\x1b\x9b\xf1\x6e\x10\x87\x6d\xd8\x33\xed\x83\x3b\x72\xaf\xeb\x38\x1c\x70\x01\xc3\x6e\xcd\x07\x09\xb5\xad\x11\x2c\x96\xb9\x6e\xd0\xf2\x97\xef\x40\x61\xe9\x9b\x77\x9b\xa9\x5e\x80\x02\x93\x8e\xc0\xc0\x0d\x3a\xa8\xbd\x0e\xbb\x9c\x6f\xab\x2b\xfd\x80\x8a\xd7\x89\xc3\xfd\xfb\xc7\x1e\x07\x86\xae\xf3\x5d\x9f\xfe\xa6\x3e\x56\x3e\xfd\x2f\x84\xe0\x18\x5a\x2f\x85\xea\x48\xe6\xb0\xc8\x4e\x5e\x04\x2f\xaf\xc1\x43\x01\x9f\xa6\x19\x95\xf5\x5f\xca\xca\x76\xbb\x50\xf1\x5d\x97\x8c\xfa\xed\xd1\x65\x85\xce\x28\xcc\x43\xbf\xfb\x41\x8d\x0c\x2d\xbc\xef\xcc\xde\x80\xd0\x5e\xa9\x61\xf6\x17\x92\xd3\x33\x86\x4f\x86\x81\x1d\x7a\x63\xe8\x91\xd1\xc4\xb7\x57\x38\xbb\xe2\xff\xa3\x09\xf1\xa2\x81\x33\x3f\x31\xf9\x25\x68\xba\xc1\x27\x12\xc5\x98\x67\x1b\x2d\x08\x50\xf8\x74\xa2\x67\x7b\xd2\xc4\x3e\xe6\xfb\x36\x7d\xa8\x28\x85\x33\x62\xdb\x45\x3c\xfc\xfd\xb7\xec\x2d\xde\xb7\x3c\x82\xe8\x32\x99\x2d\xd1\x7d\xd2\x05\x26\x7c\x3f\xc1\x1a\x85\x45\x7a\x0f\xfb\xa4\x68\x24\xb7\xf5\xcb\xdb\x05\x31\x78\x77\xe6\xdf\x4f\x8b\xc7\x7c\x3a\xc8\x27\x88\xbc\x95\x96\xd7\x28\x86\xb7\x3f\xef\xb9\xa6\x83\xe4\x2c\x44\xe1\x02\x5e\x8f\xe2\x40\x7a\x2e\x8b\xc2\x84\x2d\x1a\x00\x7a\xb9\x45\x61\xd0\x5a\x92\x18\x96\xad\x40\x42\xa2\xbc\x21\xe1\xba\x47\x24\x77\x28\x8a\x95\xdc\xa0\x6e\xdd\x1c\xe0\xcd\xcf\x70\x06\x74\x05\xa7\xc2\xd1\xaa\x20\x8a\xaf\x46\x3a\x1c\x48\x4e\x50\x90\x99\xa3\xb8\x0d\x97\xa8\xde\x39\x8e\xe1\x48\xf9\x89\xeb\x96\x7d\xcc\xc3\xb2\xb5\xed\x37\x74\x8f\x2e\xd1\xc8\x90\xf0\xbb\x56\x81\x69\xd5\x21\xae\x68\xa1\x75\xf0\x24\xeb\x1a\x6a\x69\x1d\x2a\xd0\x0a\x50\xba\x0a\x8d\xdf\x6d\xb5\xff\x7f\x09\x05\x36\xa8\x0a\x5a\x2a\xb4\x22\x71\x24\x25\x80\xa0\x11\x96\x36\x5f\xa7\x03\x52\xfa\x1b\xa2\x60\x54\xa4\xa4\x39\x49\x01\x8d\xd1\x26\x40\x44\x04\x1f\xb2\x85\xe2\xfe\x8b\xac\x8b\xdc\xec\xcd\x0e\x39\xcb\x3e\xb2\x55\x97\xaa\xe0\xa4\x25\xec\xdc\x5f\x10\xad\x3e\x2e\x93\x41\xc1\xea\xe3\xf2\x0a\x8d\xfb\x4d\xd2\x66\x39\x3e\xfd\x80\x5b\x3a\xec\xf7\x9a\x65\xd5\xba\x82\xee\xa4\x1c\x8b\xd2\x88\x1c\xd7\x6d\x5d\x6f\xc1\xf6\x1f\x0e\xc3\x76\xec\x63\xcf\x3f\x76\xf4\xd8\xcc\x81\x26\xfc\xb0\x93\xfd\x2a\xf2\x87\xd2\xe8\x56\x15\x49\x9a\xee\xd3\xf4\x55\xba\x6a\x29\xcb\xfe\xc6\x71\x2a\x69\x4f\xd2\x55\xb0\x5c\xbc\x5b\x5d\xdf\x7d\xf2\xf7\x0f\xca\x8c\x68\x9d\xde\x08\x27\x73\x51\xd7\x5b\x12\xd6\x5f\x32\x60\x55\xe1\x9e\x75\x9f\x6c\xda\xd3\x44\x2f\x67\x4a\x0f\x8b\x9b\x15\xe5\x7c\xb9\x78\xf7\x9f\x2f\x8b\x15\xf8\x9f\x98\x40\xa8\x82\xc4\xfd\x28\x2c\x4f\x78\x3f\x84\x65\x36\x83\x85\xfb\xa7\x85\x46\x5b\x2b\xef\x6b\x24\x58\xe8\x86\xe6\x2a\x19\xc5\x58\x01\xa1\xb6\xa0\xda\xcd\x3d\x9a\xbd\x1c\x0a\xa7\x9f\xbe\x4f\x95\xcc\x2b\x36\x93\x5d\x78\xc6\x9c\xae\x4c\x5a\x21\xdc\x6f\xf9\x3f\xb1\x76\x68\x7a\xc5\xc1\xab\x4a\x58\xb8\x47\x54\x7b\x81\xb6\xcd\x73\xb4\x96\xcd\x3d\x81\xc8\xc3\x20\x27\x03\x5b\x96\x65\xe1\xce\xc5\x79\x1c\xa5\xd3\xca\xf2\x8a\xef\x4b\x1b\xf1\x80\x49\x5e\x09\x05\xda\x66\x4b\x8e\xd0\x14\xde\xa4\x4c\xa1\x44\x9d\xdd\x68\x27\xd7\xdb\x84\xe9\xa7\x10\x7e\x9b\xcb\x86\x28\x8f\x0e\x16\x37\xab\x83\x77\x8a\x39\xdd\x6e\x4b\xdd\x5f\xfc\xa8\x26\xfe\x75\xce\xa2\xa8\x09\xec\x31\x44\x95\x90\x10\x2d\x1a\x43\x46\x89\x8c\xcb\x8c\xcb\x8b\x8e\x7e\xba\x00\x25\x6b\xe6\xdf\x9f\x70\xfb\xbb\x36\xc6\x77\xc0\xab\x5a\xdb\xd0\x5d\x7a\xac\xa2\x31\x51\xb8\x44\x45\x13\x42\xc7\xef\x53\x58\xfb\x1f\x6a\x78\x13\x19\xc2\x44\x4c\x41\xf3\x9a\xd5\x9e\xd0\x7b\x52\x68\x38\x53\xb2\x8e\xba\xe8\x7f\x01\x00\x00\xff\xff\x9e\xb7\x3c\x6a\x08\x15\x00\x00")

func templatesApiGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesApiGotmpl,
		"templates/api.gotmpl",
	)
}

func templatesApiGotmpl() (*asset, error) {
	bytes, err := templatesApiGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/api.gotmpl", size: 5384, mode: os.FileMode(420), modTime: time.Unix(1488634247, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesConfigGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\x93\x4f\x6f\xa3\x30\x10\xc5\xcf\xf8\x53\xcc\x72\x68\x60\x55\x48\xb5\xa7\x6a\xa5\x1c\xb2\xfd\xa3\xad\xda\x43\xa4\x44\xbb\x67\xc7\x8c\x8d\x15\x63\x23\xdb\xb4\x8a\xda\x7c\xf7\x95\x0d\xb4\x24\xe9\xee\x61\x89\x14\x89\x31\xbc\x1f\x33\xef\x4d\x4b\xd9\x8e\x0a\x84\xd7\x57\x28\x97\xab\x87\xd5\x70\x7b\x38\x10\x22\x9b\xd6\x58\x0f\x19\x49\x52\xde\xf8\x94\x90\x24\x15\xa6\xdd\x89\x52\xea\x39\x55\xc8\x7c\x6d\x1a\xea\xe6\x3b\xa9\x45\x2b\x75\xf9\xfc\x2d\x25\x39\x21\xcc\x68\x17\x5f\xaa\x90\xd3\x4e\xf9\x65\x55\x59\x74\x0e\x16\x90\x7e\xbf\xbe\xba\xbe\x8a\x0f\xcd\xe7\x70\x63\x34\x97\x02\x2a\xe4\x52\xa3\x03\x5f\x23\xb0\xbe\x64\x5a\x2f\x8d\x76\xc0\x8d\x8d\xe5\xe5\xea\x01\x1c\xda\x67\xb4\x25\xf1\xfb\x16\xc7\x57\x9d\xb7\x1d\xf3\xf0\x4a\x92\x91\xf1\x71\x39\x6f\xa5\x16\x24\xb9\xc5\x6d\x27\x60\x7a\x6d\x8d\x51\x24\x79\xd0\x0e\x59\x67\xf1\xe7\x66\xb3\x9a\xd6\x97\x9d\xaf\x6f\xa5\xa3\x5b\x85\xd5\xb4\xbe\x79\x5a\xdf\xa0\xf5\xf7\x52\xe1\x09\x61\xf3\xb4\x7e\xc4\xfd\xe4\xe0\xfd\xe4\x37\x2a\xf5\xa8\xcd\x8b\x7e\x17\x8c\x5a\x87\xd8\xfe\x8a\x5a\x87\xd0\x86\x7f\x37\x34\xde\x59\x1a\x1a\x07\x6e\x4d\x03\xcc\x34\x0d\xd5\x95\x92\x1a\x81\x2b\x2a\x5c\x49\x78\xa7\x19\x64\x0c\xbe\xf6\xfd\xe7\xbd\x46\x96\x03\x5a\x6b\x6c\x98\xc3\x68\xc5\xbd\xa2\x22\x4b\xab\xd0\x7b\x7a\x09\xe9\x9d\xee\xf1\xb1\x00\xca\x08\x21\xb5\x28\xd3\xbc\xfc\x61\x8c\xfa\x45\x6d\x76\xc1\xca\x38\xa8\xfc\x54\x82\xf6\x83\x0d\x22\xe3\x8c\xbd\x01\x25\x9d\x47\x0d\x46\x5f\x02\x96\xa2\x84\xe8\x2b\x18\x0b\x57\x65\xfc\xc5\xfb\xa0\x4f\x92\xe4\xb6\x4f\x41\x76\x9c\x86\xbc\x5c\xc7\x21\x0d\xf0\xb1\x7a\x8a\x97\x83\x4b\x45\xed\x7d\x1b\x3e\x62\x8d\xf6\x59\x32\x04\xa3\xd5\x1e\x82\x77\x27\x5d\x4c\x6d\x3d\x53\xf3\xca\x15\x0c\xad\x2f\xb8\x54\x18\xd4\x56\xd4\xd7\xa1\x9f\xcd\xd3\x1a\x82\xbb\x10\x0e\xa0\x73\x58\xc1\x4b\x8d\x3a\x86\x4e\x6a\x11\x41\xeb\xa1\x9f\xa3\xef\x9e\xa4\xe2\x53\xda\x0e\xf7\x9f\xc2\x1e\x71\xff\x3f\xac\x21\x67\x67\xa8\xaa\xcf\x57\xf1\x82\x4a\x15\xbb\x90\xb8\x00\x1c\x52\x07\xb4\xf3\xa6\xa1\x5e\x32\x98\x97\x1f\x4f\x80\x45\x67\x3a\xcb\xd0\x0d\xb0\xc9\x14\xcf\x82\xfb\x57\x22\xed\x7c\x7d\xc2\xaa\xe3\xde\x52\xa5\xfe\x45\x98\xae\xd9\x44\x7c\x08\x34\x21\x89\xe4\xf0\xe5\xd8\x4e\xb8\xb8\x80\xec\x68\xe4\xb0\x58\x40\x9a\xc2\xdb\x1b\x4c\xa7\xd3\x57\xf3\xb0\x0e\x89\x45\xdf\x59\x0d\xbc\xf1\xe5\x5d\xd8\x11\x9e\xa5\xb3\xa2\x38\xca\xc1\x0c\xa8\xae\x60\xa8\x8e\x7e\xcd\xa0\xe9\x9c\x87\x2d\x82\x6b\x91\x49\x2e\x47\x97\x66\x45\x71\x94\xc9\x05\xa7\xca\xe1\x2c\xcd\x49\x72\x20\x64\xe4\x69\x19\xb6\xfc\x4f\x00\x00\x00\xff\xff\x55\x21\x7e\xba\x5a\x05\x00\x00")

func templatesConfigGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesConfigGotmpl,
		"templates/config.gotmpl",
	)
}

func templatesConfigGotmpl() (*asset, error) {
	bytes, err := templatesConfigGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/config.gotmpl", size: 1370, mode: os.FileMode(420), modTime: time.Unix(1487446608, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesParameterGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x5b\x5b\x73\xdb\xb6\xb6\x7e\x36\x7f\xc5\x2a\x4f\x9b\x21\x33\x0a\x9d\xd3\xd3\xe9\x83\x4f\xdd\x99\x26\x71\x1b\x9f\xb6\x71\x4e\xdc\xe6\x25\x93\x69\x61\x11\x92\xd0\x90\xa0\x0c\x40\xbe\x6c\x0e\xff\xfb\x1e\x5c\x09\x50\x20\x2d\x39\xee\x6e\x77\x77\xf3\x12\x11\xd7\xb5\x3e\xac\x3b\xe0\xb6\x85\x12\x2f\x08\xc5\x90\xf2\x8a\xcc\xf1\x1a\x31\x54\x5f\xa1\x8a\x94\x48\x34\x2c\xed\xba\xa4\x6d\x81\x2c\xa0\x61\x50\xfc\x48\xe8\xa9\xc0\x35\x87\xe2\x47\x74\xa3\x7f\xe9\xfe\x39\xaa\x71\x45\xfe\x81\xa1\x78\x85\x6a\x0c\x5d\x77\x2e\x3f\x8e\x8e\x81\x50\xf1\xe5\x17\x59\x85\x69\xa6\x57\x41\xb4\x84\x8c\x36\x02\x8a\x53\xfe\x0d\x63\xe8\x36\x37\x9f\x2f\x11\x7f\x41\xf8\x9c\x91\x9a\x50\xb9\x71\xee\x86\x9d\x52\x81\xd9\x02\xcd\x71\xdf\x74\x2e\x18\x46\x75\x2e\x7f\xbe\xda\x54\x15\xba\xa8\xe4\x9e\x8f\xdb\x16\x30\x2d\xa1\xeb\xda\x16\x8a\xb7\xa8\xda\xe0\x93\x9b\x35\xc3\x9c\x93\x86\x42\xd7\xe5\x79\xe2\x46\x18\xa6\x7a\x8e\xba\x2e\x21\x0b\xc0\x8c\x49\xaa\x0d\xfb\xd8\x75\x4b\xea\x8b\xd7\x48\xac\xa0\xeb\x66\xd0\xb6\xb0\x66\x84\x8a\x05\xa4\x9f\x5d\xa6\x50\xfc\xd0\xcc\x91\xd0\x7b\xa8\xce\x28\x1a\xaa\xc7\xdf\x2f\xff\x5f\xb5\xdd\x27\xc7\x40\x49\x05\x6d\x02\xc0\xb0\xd8\x30\x2a\x5b\x93\x2e\x42\xaa\x07\x79\x8c\x54\xd3\xfd\x40\xa4\xba\xf5\xf6\x27\xf4\x67\x4a\x2e\x37\x78\x8a\x56\x6f\xc4\x7e\xe4\xfe\xd1\x12\xb4\x27\x12\x27\x74\x53\x8f\x40\x20\xbb\xfe\xad\x78\xd7\xf2\x6b\x38\xda\x07\x88\xfe\x97\xb5\x33\x06\x04\xd2\xd0\xd7\x92\x62\x41\xae\x70\xaa\x87\x18\x95\xfc\x01\xd3\xa5\x58\x8d\xaa\xa4\xee\x36\x16\xc5\x02\xe8\x61\xd9\xb6\xb8\xe2\xb8\xeb\xd2\xb4\x6d\x31\x2d\x77\x04\x37\x84\x23\xf3\xf1\x18\xc2\xa1\x76\xdb\x9a\x92\xfb\x08\xea\xde\xe7\x1b\x2e\x9a\xfa\xdb\x86\xd5\x48\x08\xcc\xa0\xeb\x8a\x73\xc1\x08\x5d\x66\xfd\x60\xad\x6d\x3d\xd3\x77\x62\xab\x58\xb2\x60\xa1\x9b\x49\xb0\x6c\xf7\x5f\x0b\xac\x9e\xe9\xbd\xc0\x7a\xad\xd6\xa5\x71\xa8\x4c\xe7\x5f\x07\xa8\x5f\xdb\xb6\xe7\xf8\xd7\xfd\xa4\x8a\x50\x52\x6f\xea\x51\x05\x94\x9d\x9a\x1a\x7c\x09\xc5\xf9\x35\x5a\x2e\x31\xfb\xe9\x76\x8d\x21\x25\x54\xe0\x25\x66\x52\x9f\x4f\xa9\x70\xe4\x3c\x34\xac\x53\xfb\x12\xbd\x6f\xc5\x25\x7c\x8b\xaa\x41\x3d\x19\x5f\x7e\x91\xc5\x30\x9e\x3e\x95\xdc\x6a\xa8\xc6\x44\x7d\x9d\xdc\xcc\xab\x0d\x27\x57\xd8\x35\xef\xab\xb6\x13\x00\xeb\xce\xff\x38\x80\x2d\x26\x03\x80\x6d\xf3\x7e\x00\x6f\x2a\x41\xd6\x15\x3e\x5b\x8c\x60\xec\xfa\x1f\x0e\x38\x85\xc4\xc7\x00\xe0\xd1\xbc\x17\xb3\xd2\x29\x4f\x47\x19\x0f\x29\x19\x1f\x17\x84\xec\x03\xcb\xde\x9e\xa1\xa7\xfd\xbf\xae\x52\x8b\xcb\xce\x50\xda\xff\x5d\x9c\xb2\x66\xcd\x1a\x33\x71\x3b\x48\x89\xbc\x00\xef\x94\xbb\x08\x46\x43\x2b\x70\xbd\xae\x90\x18\x0b\x72\x0a\x3d\x2a\x8c\x12\x63\xfc\xc5\x0e\x53\xf7\x2b\x89\x55\x27\x28\x79\x4e\xdb\xd6\x9d\x51\xd7\xa5\xba\xc1\xe8\xad\x1e\xaf\x5a\x63\xe8\x3a\x08\x67\xb0\x50\x23\xf9\x34\x52\x11\xba\xd5\xf1\x0f\x19\x8f\x65\x91\x3e\xe3\x4f\x06\x61\xa1\x45\xfb\x82\xd0\x72\x6d\xa1\x52\xf3\xd3\xd1\x08\xb2\xdf\x43\xce\xd2\x56\x29\xb9\x42\x4c\xca\xc0\x15\x62\x54\xe6\x32\xc5\xf3\x15\xa9\xca\x48\x24\xfb\x46\x45\xb2\xdf\x35\xca\xae\x75\x5d\xb2\x68\x18\xf4\x39\xae\x9e\xf5\x12\xf1\xb7\xee\x00\xb9\x6d\x7d\xde\xd0\x2b\xcc\xe4\x09\x99\x86\xd8\xd1\xc9\xc5\x4f\x69\x89\x6f\xde\x22\xf3\x69\x2c\xe5\x2f\xa1\xac\xde\x49\xe7\x5b\x79\xfa\x0c\xd1\x25\xde\x69\xf8\x73\x75\x62\x43\x46\xec\x21\x49\xd4\x55\xaf\x65\x65\x74\x95\xa3\x63\xe0\xd7\x68\x59\x9c\xaf\x2b\x22\x9e\xdd\x6a\xd6\xb2\x9d\x08\xde\xb6\x1f\x16\xb7\xaa\xc2\x73\x09\xa5\x5e\x4d\x86\x35\x9a\x9a\x98\xd8\xd8\x23\xd5\x93\xc1\x10\xfe\x44\xc3\xe8\xf8\x90\x12\x38\x3c\x15\xd7\x79\x27\xa9\x33\xab\x5d\x1e\x22\x6e\x19\xed\x4d\xef\x66\x57\xf2\x60\xf4\xd4\xd3\x19\x5f\x6b\x1a\xc6\x8b\x53\xaa\xf4\x40\x4a\x5b\xd6\xef\x36\x9a\xf6\xe9\xee\xc0\xee\xa6\xfd\x34\x27\xb5\xe9\x6e\x32\x24\x49\x0c\xf0\xeb\x61\xdb\x96\xdd\x7b\xc0\x67\x2c\x47\xf1\x1a\x31\x8e\xff\xba\xa8\xed\x8e\x8c\x91\xa9\xbb\x61\xd0\xeb\x19\xd3\x66\xb6\xd2\x1f\x43\xcd\x18\x73\x43\xa1\x7e\xec\x62\xf7\x8e\x01\xad\xd7\x98\x96\x3b\x1d\xd4\x9b\x5d\xb1\xf2\x6d\xf4\x1a\xcd\x3f\x20\x6d\xb0\x8a\xd7\xe6\xb7\x64\xe9\xf0\x10\x7e\x5a\x11\x0e\x0b\x52\x61\xb8\x46\x1c\x96\x98\x62\x86\x04\x2e\xe1\xe2\x16\xc4\x0a\x2b\x9b\xb3\xc4\x0c\x44\xd3\x54\x85\x1c\x7f\x52\x12\x41\xe8\x12\x84\x9b\x57\x93\xe5\x4a\xc0\x9a\x35\x57\x18\x16\x1b\xa1\x96\x5a\x61\x0a\xb7\xcd\x06\x18\x7e\xc2\x36\x34\x58\xc9\x6e\x01\xf3\xa6\xae\x11\x2d\x93\x84\xd4\xeb\x86\x09\xc8\x12\x80\x94\x62\x71\xb8\x12\x62\x9d\x4a\xbc\xd3\x25\x11\xab\xcd\x45\x31\x6f\xea\xc3\x25\xa1\x4f\x96\x0d\x25\x73\xf9\x2b\x1d\x76\x36\x4f\x9a\x35\xa6\x68\x4d\x0e\xb5\xa0\x4e\x0c\xb0\x8e\x7b\x62\x08\xdb\x50\x41\xea\x1d\x46\x1c\xd6\xa4\x2c\x2b\x7c\x8d\xd8\xd4\x60\xc9\xb9\xe2\x87\x0b\xb6\xa8\xc5\xe8\x30\xd5\x9b\x1a\x41\xd3\x1e\xa6\x78\x81\x17\x68\x53\x89\x53\x05\x11\xd7\x8e\x2b\x50\x31\x2b\x67\x9e\xc8\x9a\xb9\x9f\x7e\xc0\xb7\x33\xf8\xf4\x4a\xca\x86\x94\xff\x22\x58\x44\xf6\x4a\xc5\x18\xac\x67\x86\x0f\x56\xcd\x93\xc4\x85\xab\x0c\xa9\x02\xe2\xe1\x21\x3c\x23\xb4\x94\xd3\x11\x9f\xa3\xa0\x5a\xe9\x82\x23\xae\xc2\x52\xe9\x39\x38\x30\x7c\xb9\xc1\x5c\x80\xd2\x17\x2c\x30\xe3\x20\x1a\x25\x19\x4b\x42\xa5\x64\xcd\x1b\x2a\xf0\x8d\x28\x92\xc5\x86\xce\xc7\x17\xcf\xe6\xe2\x06\x1e\x2f\x09\x95\xae\x41\x4e\xc8\xa1\x4d\x0e\xd6\x9a\xae\xa3\x63\x78\x14\x9d\xa5\xe9\x6e\xbb\xe4\xc0\x98\x48\x3d\xa1\x90\xb4\xbd\xd1\x94\xc9\x85\xf3\xe4\x60\x68\x04\x0f\xe4\x8c\xb3\x8b\xdf\xe4\x24\xcc\x58\x91\x3d\x36\xb6\xf0\x79\x53\xaf\x1b\x4e\x04\x3e\x91\xdf\x79\x72\x70\x30\x17\x37\xc5\xff\x9d\x9f\xbd\xca\x08\x15\x99\x9e\x55\x3c\x6f\x4a\x9c\xe5\xb9\x32\xcd\x67\x17\xbf\xc9\x61\xda\xa4\x26\x07\x5d\xa2\x66\x9c\x63\x91\xa5\x9a\x9c\x74\x66\xe8\xca\x75\xd7\x2b\x7c\x23\xb2\xdc\x0f\xf2\x94\xce\x4e\x70\xa8\x50\x44\x84\x72\x40\x55\xa5\xd0\xbd\x68\x36\xb4\x34\xcb\x4a\xc7\xa0\x1a\xdb\x16\x56\x9b\x1a\xd1\xe0\xd4\xa4\x3d\x53\x86\x5a\xee\x21\x6e\xd7\x64\x8e\xaa\x4a\x99\x01\x8e\x01\x31\x0c\xcd\x85\x5c\x1a\x97\xb0\x60\x4d\x0d\x08\xa4\xa2\x16\x06\xbd\xe4\xf0\x50\x4e\x33\x5a\x7e\xe4\x9d\xb2\x34\x3a\x66\x8b\x44\x48\x83\x3f\x45\x3e\x17\x6c\x33\x17\xd0\x86\x5a\xd0\x4b\xdd\x63\x23\x87\x2f\xb0\x4c\x69\xd6\xc6\xad\xc8\x2d\xb6\x5a\x82\xf2\x8c\xa4\x92\x30\x6c\x74\xc4\x7e\x1d\x81\x60\x1b\x3c\x1c\x6b\x72\x5b\x3d\xd4\x7c\x1c\xd9\xe0\x66\x98\x01\x43\xd7\x7d\x05\x41\x91\xb6\xef\xd8\x5a\x58\x57\x25\xcc\xc2\xfa\x23\xb2\xb0\x1b\xf5\xf5\x60\x61\xd7\xb1\xb5\xb0\xcb\x51\xcd\xda\xe6\x1b\xce\x16\x47\xfa\x82\xc3\x1f\x10\xe1\x57\x17\xee\x1c\xc7\xa0\xbf\xcd\x5c\xaf\x3b\xc2\x51\x30\x95\xd0\x70\xaa\xd7\x3d\x9c\x6a\x8a\x60\x7a\xa2\xf9\x38\x32\x1e\xca\xf6\x44\x28\x75\x17\x18\x9a\x50\xf5\xe9\xe8\xb4\x9d\x11\x32\xfd\x79\x84\x06\xf3\xfa\xce\xe1\xbc\xc1\x9d\x09\x80\x6e\x88\x8b\x8d\x17\xe6\x24\x00\xa7\x86\x19\xaf\x75\x38\x21\x12\x7f\x27\x00\x7d\x2b\xe8\x66\xbd\x4e\x64\xf0\x70\x3d\x99\xe9\x6b\x77\xa1\x57\x32\x1f\x47\xdb\x29\x78\x3f\xcc\xf7\x1c\x8f\x0f\x5d\x0c\xaf\x2a\x04\xe7\xf3\x15\xae\x91\xf1\x39\xbd\xc2\x9e\xbe\x30\x7e\xe3\xc1\xae\x3e\xbe\x25\x15\x56\x2a\xbe\xcf\x6d\x88\x09\x1f\xfd\x54\x2e\xee\x8c\x86\x94\x6a\xb6\x8a\x53\xfe\x0c\x71\x2c\x97\x08\x77\x19\x0c\xb2\x84\x4c\x6c\xee\x79\x5e\x5d\xac\xd0\x91\xd5\xb3\xde\xb5\xc0\x45\x23\x56\xc6\x0f\x4a\x42\x3c\xff\x68\xfd\xe2\x0c\x88\x00\xc4\xf9\xa6\xc6\x1c\xc4\x0a\x09\x19\x1f\xad\x2b\x7c\x23\x23\x2d\xba\xe4\x40\xe4\x57\x8d\xa9\x00\x04\x26\x09\x96\xf4\x66\x3a\x6c\x28\xde\xe0\x25\xe1\x82\xdd\xe6\x3a\x54\x07\x62\x61\x96\xa4\x48\xb3\xcf\xd5\x02\xa0\xfc\x3b\x97\x9b\x5d\x93\xaa\x82\x0d\xc7\xd2\xe6\x22\x15\xc3\xd5\x58\xac\x9a\x12\xa4\xd9\xe7\xda\x0b\xab\x20\xff\x0d\x9e\x63\x72\x85\x99\x05\xf4\xf1\x84\x01\xcf\x61\xe0\x51\x07\xae\x5a\x13\x27\x53\x8b\x2b\xc4\x80\x61\x0e\xef\xde\xab\xb6\x3e\x7d\x74\xc6\xde\x64\x31\x2a\xf5\xd5\x4c\xbe\xc2\xd7\x5a\xfa\xb9\x57\x62\x4a\xfa\xa9\x2f\x11\xff\xff\x0d\x66\xb7\x6e\x89\x4b\x35\xdb\x44\x6b\x3a\x4c\xe6\x92\x2a\xeb\xb5\x8a\x9f\xdf\xfc\x50\xa8\x29\x59\x3e\xb6\xa2\xdc\xd1\x2d\xd8\x17\x80\xfc\x55\x54\x9e\xa5\x6d\x2c\x62\x42\x4e\xc8\xfe\xe7\x73\xf8\xea\x2b\xf8\xfc\xe9\xb0\x7a\x73\xe0\x05\x18\xca\x7f\x9e\x30\xf6\xaa\x11\x6e\xb2\x49\xbb\xec\x3f\xaf\xd4\x63\x9b\x3a\x97\x32\x8e\x51\xa2\x08\xd8\x2e\x1b\x4d\xaf\x9a\x1c\x74\x21\xcf\x0a\x2d\xc7\x78\x02\xb0\x28\xef\x42\x53\x4e\xcb\xfd\xc8\x71\x08\xe9\xd0\x9f\x87\x06\x27\x28\x5d\xe9\x5a\x56\x7f\x9c\xf2\x34\xa3\x82\x37\x83\xcb\xd5\x87\x91\x9e\x5f\x24\xc1\x97\xbc\xf8\x0e\x8b\xb3\xef\xfd\x8b\x5d\x2f\xdd\x35\xe5\x86\x81\x94\xab\xc8\x30\x62\xf8\xb2\xfd\x89\x18\xad\xe3\x81\x52\x00\x97\xfe\x31\xcc\x55\x98\xd8\xe7\xb9\x7d\x71\xe0\x94\x4b\xc2\x2d\x10\x2c\x6e\xe9\x8e\x8e\xe1\xdd\x7b\xae\xea\x87\xad\x3c\x16\x35\x3c\xe0\xba\xbb\x37\xdb\xf1\x2d\x67\xca\x13\x3e\x14\x8b\x2f\x31\x2a\x31\xb3\x4c\xde\x8f\x4e\x5f\x1c\xf5\x7a\xef\x94\x9a\x3d\x47\x54\x66\x8f\xa8\xd2\x8d\xdf\xe3\xdb\x00\x98\xf7\x0f\xcb\x89\xb3\x19\x4a\x96\x4d\x9b\xf5\x72\x5a\xbe\xb7\xde\x78\xc4\x5f\x7e\x68\x72\x67\x31\x5d\x97\x9b\xc8\x45\x47\xe4\xfa\x6e\xda\x65\x16\xf3\x0a\x5f\x67\x5f\x3c\x7d\x3a\x83\x94\x61\x54\xca\xcc\x5e\x25\xf5\x9f\x5d\xc2\x02\x91\x4a\x86\xc8\x9f\x5d\xa5\x5b\x95\x9d\x2c\xa4\x33\xb7\xc5\xa7\x5c\xc1\xa1\x91\xd0\x1b\xc7\xce\x2e\x2e\xbd\xbd\x65\x91\x4c\xb5\x2f\x90\x40\x47\x51\x48\x66\xa0\x41\x89\xf7\xea\xbe\x6e\x70\x2c\x5d\xb7\x88\xa7\x93\x33\x58\x94\xd3\xe6\x63\x51\x3e\xa8\xfd\xb8\x0f\x1d\x1f\x23\x94\x03\x3b\x3c\x94\xd4\xbf\x2d\x6e\x5c\x89\x65\x98\x36\x50\xe4\xbf\x25\x28\x0c\x8e\x0c\x44\xcf\x9a\xd2\xc8\x4b\x9f\x31\x90\x85\x53\xe6\x97\x48\x8d\xf0\x0d\x73\xee\xdd\x89\x0c\x23\x6d\x93\xeb\xee\x6a\x32\x7c\x7b\x28\xb7\x09\x54\xde\x23\x73\x2b\xe8\xf7\x9a\x4e\x6e\xd6\x0d\x13\xaa\x36\x70\xd1\x94\xb7\xc1\x25\xc4\x8f\x4d\x89\x2b\xde\xd7\x4c\x8b\x9f\x69\x8d\x18\x5f\xa1\xaa\x6d\x65\x54\x4a\xd6\xb6\xcf\x96\xb3\xb7\xa6\x6c\xdd\xcb\x9d\x57\x64\xde\x67\x8f\xd9\x90\x85\x19\xb0\x66\x23\xb0\x8c\x99\x65\x36\xc0\x22\x26\x1d\xa2\x55\x0d\x37\xec\xf8\x18\x48\x53\x9c\x9c\x7d\xeb\xc2\x3e\xd5\x6a\x4d\xbe\x9d\xb5\xf3\x43\xb7\x3c\xd1\x11\xa2\xb1\xe7\x9a\xee\x51\xb1\xe9\xf1\x97\x21\xbe\x44\x74\x70\xb3\x07\x83\xd8\x55\x26\x4a\xaa\x6c\xf6\x48\x0e\x1e\x88\xe8\xde\xac\x8e\x7a\x3a\x9f\xed\x3b\x7d\xd9\x14\x1a\x06\x0e\xe3\xe5\x82\xe2\xeb\xb4\xa3\x55\xc1\xb9\xaa\x16\x7e\x2c\x0d\x33\x48\x53\xe3\x70\x47\xf0\x19\x9c\x96\xaf\xca\x43\xff\x1c\x75\x04\xf6\x16\x43\x7f\x66\x91\xf4\xd9\x4f\xe4\x83\x9b\xcd\x8a\x20\x8e\x4b\xef\x42\x4b\x27\xb2\x67\x17\xbf\xe1\xb9\xc8\x73\x9d\xd9\xc1\x2f\xfa\xe9\x62\x78\x27\xbb\x95\x6b\xfa\x77\xad\x3b\x1a\x05\x2b\x08\xa1\x71\x9d\xde\xa7\x30\x19\x35\xce\x26\x0c\xe5\xa4\xb1\xd4\xff\x2e\x18\x46\x1f\x12\x9b\x51\x45\xce\x21\xf8\x61\x5c\xcd\x2e\xe0\xba\x0e\x87\xae\x6b\xd9\x86\xb7\xe7\x5c\x2a\xd4\x8e\xbc\x4d\x70\xb6\x2d\x4b\x0a\xdd\x0a\x53\x39\x30\x97\x4a\xf8\xd4\xad\xb3\x8f\xf5\xde\xb3\x34\xd3\x75\x8f\x1c\x11\x17\xda\xd8\x6b\xe2\x86\x77\x20\x91\xaa\xaf\x2f\xf3\xff\x1a\x13\xd1\xf9\x34\x6d\x5f\xd2\xb8\xdf\x3e\x92\x5f\x3b\x20\xc3\x7b\x57\x77\xd7\xd0\x3f\x7f\xd0\x76\x84\x61\x5e\x14\x85\xf5\xd6\x66\x12\x25\x55\xd2\xa9\x2b\x9b\x4f\xe7\x15\xe2\x5c\x01\x7e\x74\x0c\xd9\xe0\x10\x72\xf3\x7e\x63\x2b\x2b\xef\x73\x72\x25\x7c\x81\x8f\x0f\xca\x75\xc1\xdf\x21\xf8\xcf\x6e\xe2\xcf\x67\xa6\x6b\x4a\x1e\xb1\x61\x39\x29\x9a\x8f\xa2\x6b\x99\x21\xb8\x84\x77\x06\x2b\xc4\xbf\xc7\xb7\x70\xd1\x34\x95\x8b\x77\x60\xa4\x3a\xd6\x06\x41\x8c\x2d\x3a\xba\x14\x3b\x0f\x44\x87\x2c\xe0\x13\xb3\x78\xec\x6c\xee\xe5\x4e\x03\x21\x50\xa5\x30\x74\x0d\x9a\x13\x4f\x24\x34\x8f\x81\x58\xa0\x6b\x99\x28\xe9\x8e\x77\xfe\xa0\x27\xff\xfd\xbe\x5f\x77\x17\xc6\x74\xe7\x37\x55\xd5\x5c\x9f\xd4\x6b\x71\xab\xea\x39\xa1\xf9\x70\x8f\x9c\xec\x24\xf3\x38\x69\xf7\x17\xf2\x0c\x5d\xc7\x63\x4e\xaf\x00\x15\x89\xbc\x33\x18\x52\x0e\xda\x10\x6a\xa2\x2d\x39\xf9\x18\xfd\x0a\xa6\x63\x48\x53\x68\xe1\xf0\x10\xb0\xec\xb7\xa5\xcf\x35\xe2\xfa\x76\xac\x11\x2b\xcc\xa0\x7f\x11\xc6\x7d\x87\x18\x14\xd3\xcd\x1b\xa6\xd0\x0a\x74\x9d\x1d\x10\x94\xb0\x06\x69\x7e\x1f\xf7\xf4\x71\x51\xc3\x75\x8a\xab\xdf\xb6\x39\x3b\xe8\x2b\x50\x50\x64\xce\x6c\x65\x79\xba\x90\xbf\xfd\xf4\x2d\x0f\x6d\x76\xfc\x4f\x08\x22\x76\xf8\xee\x62\xbe\xd6\x77\x67\x99\x61\xbb\x72\xef\x1b\xeb\x58\x9e\x6e\x48\x1f\x06\x95\xce\x80\x6d\x5b\x75\x77\x6d\xd2\xbf\x08\x52\x47\x1a\xbe\x1a\xf2\xdf\x0b\x49\xe9\xbb\xd7\xbb\x96\x9d\xff\xfc\x23\xe8\x74\x47\xad\xe5\xbe\x67\x61\x0a\xf5\x31\x07\xa7\x58\xdb\x4a\xd7\xb7\x8d\x6a\x08\xc1\xd6\xcb\x9f\x80\xc0\xe0\x09\xa2\x4f\xe7\x9f\x1a\xa1\x7b\x5c\x32\x4d\xdc\x28\xd9\x6f\x0b\x7a\x78\xb5\x93\x29\x38\x0b\xf5\x17\x01\x3d\xb5\xb9\xce\x6b\xf4\xbb\xdc\x7b\x9e\x27\x43\xd7\x5b\xf2\x6c\x0c\x8d\xff\xa6\xf1\xae\xba\xa7\x35\xc9\xd1\xc2\xc0\x54\x92\x1f\x31\xb8\x96\x90\x20\x6c\xd0\x6c\xfa\x49\xc1\x9f\xcf\x71\x0f\x62\xbb\xdf\xdd\x41\x3b\xe3\x83\x2f\x23\x37\xb1\x69\xbd\xa9\x04\x49\xb5\x9d\xdb\xe1\x41\xe8\x91\x73\xe0\x61\xaa\x7c\x79\x15\x8f\x93\x77\x08\x0b\xc6\xa6\xc6\x43\x05\x78\x02\x26\x58\xd8\xf1\x8d\xda\xd8\xf3\xd3\x91\x6d\x23\x0f\x01\x23\x4f\x4d\xb7\x54\x41\x15\x6a\xee\x0e\x4f\x7a\x20\x76\x22\x3d\x48\x4f\x7e\x37\xc1\x08\xc2\x92\x91\x2b\xf9\x12\x2f\xde\xda\xc7\x58\xf1\xb7\xbc\x9e\x3f\xdf\x0d\xc3\xfb\x61\xf1\xe8\x91\x9a\x62\xe9\xf1\x05\x69\xd4\xb8\xd9\xc1\x41\x81\xe7\x63\xcf\x81\x92\x6a\x98\xb6\xf9\xb8\x4e\x3e\x43\x76\xa3\x46\x8d\xf1\xdd\x6f\x29\x83\x7b\x5e\x55\x96\xfb\x63\x4d\xf1\xb6\x2d\x0e\x1f\xf7\xcb\xa8\x6b\xf8\x06\x3e\x4e\xf9\x7d\x2c\xf6\x0e\xfc\xdc\x91\x4f\xed\xf0\x3a\x36\xea\x71\xa2\x7f\x97\x6a\x7e\xfd\x33\x00\x00\xff\xff\xd1\x20\x09\x20\x0a\x3f\x00\x00")

func templatesParameterGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesParameterGotmpl,
		"templates/parameter.gotmpl",
	)
}

func templatesParameterGotmpl() (*asset, error) {
	bytes, err := templatesParameterGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/parameter.gotmpl", size: 16138, mode: os.FileMode(420), modTime: time.Unix(1488040614, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesParameterGotmplCustom = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xbc\x55\x51\x8f\xdb\x44\x10\x7e\xb6\x7f\xc5\x60\x0a\xb2\x51\x6e\xcd\xf3\x41\x40\xea\xdd\x15\x0e\x55\x49\xe0\x2a\x5e\x10\x52\x37\xf6\xc4\xde\xd6\xde\x75\x77\xd7\xc9\x05\xcb\xff\x1d\xcd\xae\x9d\xda\xb9\x14\x10\x94\xbe\x9c\x7c\xbb\x33\xdf\x7c\xf3\xcd\xb7\x93\x86\x67\x6f\x79\x81\xd0\x75\xc0\x36\xc3\x77\xdf\x87\x61\x9a\xc2\xab\x52\x18\xd8\x89\x0a\xe1\xc0\x0d\x14\x28\x51\x73\x8b\x39\x6c\x8f\x60\x4b\x04\x73\xe0\x45\x81\x1a\xac\x52\x15\xa3\xf8\xbb\x5c\x58\x21\x0b\xb0\xa7\xbc\x5a\x14\xa5\x85\x46\xab\x3d\xc2\xae\xb5\x0e\xaa\x44\x09\x47\xd5\x82\xc6\x2b\xdd\xca\x19\xd2\x58\x82\xc0\x32\x55\xd7\x5c\xe6\x61\x28\xea\x46\x69\x0b\x71\x18\x44\x42\x45\x61\x18\x44\x85\xb0\x65\xbb\x65\x99\xaa\xd3\x42\xc8\xab\x42\x49\x91\xd1\x57\x74\x76\xa7\xae\x54\x83\x92\x37\x22\x45\xad\x95\x36\x94\xdc\x75\xa0\xb9\x2c\x10\xd8\x2d\xee\x78\x5b\xd9\x7b\x07\x6f\xa0\xef\xbb\x0e\x1a\x2d\xa4\xdd\x41\xf4\xc5\xbb\x08\x58\xdf\xbb\x70\x94\x39\x0c\x9f\x3e\xf3\xd9\x5b\x3c\x2e\xe0\xd9\x9e\x57\x2d\xc2\xf5\x12\xd8\x0c\x82\x6e\xa1\xef\xe1\x0c\x6d\x08\x9f\x63\x26\x61\x48\x19\x59\xc5\x8d\x59\xf1\xda\xa1\xc5\x0d\x37\x19\xaf\xc4\x1f\x08\x8c\xce\x12\x0a\x4c\x53\x78\x2e\x64\x4e\x98\xf3\x5b\xaa\xb4\xe7\x95\xc8\xb9\x45\x03\x5c\xe6\xb0\x15\x32\x37\xc0\x41\xe3\xbb\x16\x8d\x85\xad\xca\x8f\x60\x95\xd3\xb9\x10\xd2\x4b\x2b\x2d\x3e\x5a\x16\xee\x5a\x99\x7d\x18\x38\xce\xec\x23\x7c\x55\x08\xc9\x6e\x7c\x42\x02\x5d\x18\xec\xb9\x06\x8d\x06\x7e\xfb\xdd\x89\x1a\x86\x01\x39\x65\x7d\xbb\x06\xd3\x36\x6e\x52\xca\x96\xe4\x8a\x92\x4b\x5f\xbc\xe1\x9a\xd7\x06\xe2\x9a\x1f\xb7\x08\x42\x82\x41\x3a\xb2\xe8\x52\x6b\x91\xe7\x15\x1e\xb8\xc6\x84\x4d\xc7\xb3\xf1\x59\x83\x60\x62\xe7\x9a\x63\xf7\x66\xc3\x6d\xe9\xee\x80\xfd\xc8\xcd\xaf\xbe\x77\xa1\xa4\x0f\x15\x3b\x40\xad\x49\xc7\x51\x95\x8b\xad\xcd\x55\xf7\xad\xfa\x8a\x71\x44\x0f\x61\x38\x8e\x92\xe4\x1b\x87\xf7\xd9\x12\xa4\xa8\xa8\xfd\x80\x7a\x5f\x02\x6f\x1a\x94\x79\xac\xd1\x2c\x28\x20\x09\x03\xc2\xc4\xca\xe0\x84\xea\xcf\x2d\xea\xe3\xff\xc3\xd5\x41\x7f\x14\xae\xec\xde\x3c\x57\xf9\x40\xb3\xef\x61\x9c\x26\x7b\xc8\x4a\xac\xf9\xf7\x8e\x27\x95\xfc\xc5\x1b\xca\x9b\x41\xda\x97\x28\x0b\x5b\xc2\xb7\x4b\xf8\xfa\xc3\xb5\x94\x36\x2e\x4f\x68\xcc\xe3\xb3\x17\x11\x67\xbc\xc6\xb9\xcf\x17\xe7\xaf\x86\xbd\x54\x99\x53\x0c\xfa\x3e\x21\xe2\x9e\x36\xd5\x23\x1f\x3a\x7b\x91\x06\x3f\xa8\x57\xc7\xc6\xbf\xae\x60\xd0\x94\x28\x93\xb5\x7f\x7a\x58\xaf\xe2\x2f\x29\x32\x09\x83\x51\xf3\x51\x23\xf0\xd6\x3a\x71\xf4\x08\x63\xd4\x72\x09\x42\xb1\xbb\xf5\x0b\x57\xf0\x13\xb5\x18\x9c\x9a\x84\xc9\xf2\xf9\xab\xea\x2b\x3c\x6c\xb8\x36\x78\x47\xff\xfe\x57\x0a\x0b\x88\x22\x6f\x93\xe4\xb2\x36\xf4\xe7\x44\x6c\x32\x8f\xd1\x37\xa3\x97\xdd\x70\x42\x1f\x4f\xb3\x78\x40\xfb\x8f\xb8\x8d\xa3\x7a\xb2\x7c\x87\x4f\xe7\xc7\x0a\x25\x49\x90\xc0\x77\x83\xfb\x50\xeb\xf5\xf6\x0d\xcd\x7d\x10\xe5\x46\xd5\x8d\x32\xc2\xe2\xfb\x57\xe7\xf5\xd1\x68\x18\x63\xc9\xc0\xca\xb9\x43\x48\x1b\x7b\x00\x76\xa3\x72\x8c\x93\xc4\x29\xb0\xde\xbe\x49\x9c\xb1\x6d\xab\xa5\x23\x44\x19\x2b\x7c\xb4\x71\x12\xf6\x6e\x75\x3f\xd9\x55\x93\x55\x75\xf6\xe2\x63\xa5\xcf\xd6\xd7\x74\x41\xb8\x2d\xef\xd6\xf1\xe5\x5d\x70\x7f\x7b\x69\x13\xf8\xdf\x14\x63\xb5\x90\x45\xe2\x3b\x27\x35\x86\xc1\x6d\xb8\xb5\xa8\x69\xa8\x4f\x37\xcd\x78\x39\x5f\x21\x7f\xe3\x0c\x57\x6e\x01\xaf\xbb\x6e\x4c\xef\xfb\xd7\x97\xb6\x0e\x09\x46\xa7\xa7\x29\x8e\xbb\xe6\x4e\xb6\xb4\x64\xcc\x41\xd8\xac\xf4\x78\x03\xe1\x41\xc9\x21\x20\xe3\x06\xc1\x51\x23\x5a\xd7\xef\x41\xa5\xa8\x26\x66\xc8\xfd\x4f\xf8\xf5\xac\x28\x4d\x9f\x60\x5e\x70\x51\xfd\x9b\xf6\xa6\x31\x9f\xef\x23\xcf\xa9\xef\xbd\x25\xd3\x14\x2e\x88\x49\x11\x1f\xb3\xd4\xb9\xa4\x69\x0a\x33\x55\xd3\x14\x9c\xd5\xbc\x0a\x13\x69\x26\xa7\x93\xaf\x3f\x03\x00\x00\xff\xff\x47\x03\xdd\x44\xe3\x09\x00\x00")

func templatesParameterGotmplCustomBytes() ([]byte, error) {
	return bindataRead(
		_templatesParameterGotmplCustom,
		"templates/parameter.gotmpl.custom",
	)
}

func templatesParameterGotmplCustom() (*asset, error) {
	bytes, err := templatesParameterGotmplCustomBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/parameter.gotmpl.custom", size: 2531, mode: os.FileMode(420), modTime: time.Unix(1488029067, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"config.yaml": configYaml,
	"templates/api.gotmpl": templatesApiGotmpl,
	"templates/config.gotmpl": templatesConfigGotmpl,
	"templates/parameter.gotmpl": templatesParameterGotmpl,
	"templates/parameter.gotmpl.custom": templatesParameterGotmplCustom,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"config.yaml": &bintree{configYaml, map[string]*bintree{}},
	"templates": &bintree{nil, map[string]*bintree{
		"api.gotmpl": &bintree{templatesApiGotmpl, map[string]*bintree{}},
		"config.gotmpl": &bintree{templatesConfigGotmpl, map[string]*bintree{}},
		"parameter.gotmpl": &bintree{templatesParameterGotmpl, map[string]*bintree{}},
		"parameter.gotmpl.custom": &bintree{templatesParameterGotmplCustom, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

