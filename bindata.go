// Code generated by go-bindata.
// sources:
// config.yaml
// templates/api.gotmpl
// templates/config.gotmpl
// templates/parameter.gotmpl
// DO NOT EDIT!

package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _configYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x92\x4f\x4b\xc3\x30\x18\xc6\xef\x7e\x8a\x97\x9e\xb6\x83\x9d\xe7\xde\x04\x15\x14\x94\x81\xbb\x6f\xaf\xed\xd3\x18\x97\x7f\x24\x99\xa2\x25\xdf\x5d\x9a\x6e\x93\x4d\xd1\x0d\xd9\xed\x6d\xd3\xdf\xd3\x5f\x9e\x44\xf1\xbb\x5d\xc5\xea\x8c\x88\x9d\x53\xb2\xe6\x28\xad\xe9\x1f\x89\xce\xc9\xb0\x46\x45\xb5\x35\xad\x14\x2b\x8f\xfc\x96\x28\xd8\x95\xaf\x51\x51\xd1\x75\x54\xce\xb4\xbb\x92\x9e\x52\x9a\x44\x68\xa7\x38\x22\x4c\x06\xa0\x14\x36\x6a\xa7\x8a\x35\x15\xd9\x0b\xc4\x4c\x2d\xba\x8e\x5e\xac\x34\x37\x52\x61\xca\xf1\x99\xca\x59\x5e\xa4\xf2\x11\xfe\x15\x7e\xca\xf5\x92\x05\x28\xa5\x45\x4a\x1b\xbe\x95\x0a\xf3\x41\xa8\xd8\xfe\xa0\xd8\x11\x85\x7e\x42\xd3\xa0\x99\x07\x87\x7a\x4f\x96\x43\x40\xac\xc2\x1b\x0b\x01\x7f\x17\xac\xb9\xee\x3f\x3e\x81\xdb\x8e\xc4\x37\xc5\x90\x43\x0e\x2d\x92\x9d\x3c\x61\x8b\x43\x7a\xbf\xa2\x6d\x03\x15\x76\x4f\xbd\x41\x2b\x8d\xec\x6f\xc3\x8f\x4d\x66\xe4\x18\xa9\xfb\x1e\xf8\xd3\x69\x48\x18\x05\xc3\x4b\xf9\x01\x1a\x39\x0e\x35\xab\x7e\x2c\x1f\x58\x63\x3c\x1e\xd0\xb5\xb7\x75\xf0\xf9\xc2\xee\xb9\x3b\xf6\xac\x11\xe1\xc3\xa1\x4d\x6f\x89\xdf\xfb\x96\x2d\x89\x48\x23\x05\xd3\x6f\x4c\x84\x31\x5d\x50\x4a\x07\x1e\x44\x79\x39\xbd\xdd\xce\x9b\x61\xc0\xa1\x02\x8e\x08\xda\x83\x4d\xf3\xef\x42\xe7\x5f\x95\xe5\x6e\x3f\x03\x00\x00\xff\xff\x82\x4f\xcf\x1e\x17\x04\x00\x00")

func configYamlBytes() ([]byte, error) {
	return bindataRead(
		_configYaml,
		"config.yaml",
	)
}

func configYaml() (*asset, error) {
	bytes, err := configYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config.yaml", size: 1047, mode: os.FileMode(420), modTime: time.Unix(1501739664, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesApiGotmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x58\x5d\x73\xdb\xb6\xd2\xbe\x26\x7f\xc5\x96\x93\xa4\xa4\x47\xa6\xda\x5e\x6a\x5e\x5f\xe4\x75\xd2\xd4\xa7\x49\xea\xb1\x94\xd3\xcb\x16\x26\x57\x14\x8e\x29\x80\x05\x40\xcb\x0a\x87\xff\xfd\xcc\x2e\x40\x8a\x92\x15\xb7\xc7\x17\x16\x09\xec\x17\x76\x9f\xfd\x00\x1b\x51\x3c\x88\x0a\xa1\xeb\x20\x7f\x7b\x7b\x73\x1b\x5e\xfb\x3e\x8e\xe5\xb6\xd1\xc6\x41\x1a\x47\x49\xa1\x95\xc3\x27\x97\xc4\x51\xa2\xd0\xcd\x37\xce\x35\xf4\xac\xad\xff\x3f\xb7\xb2\x52\xa2\xa6\x17\xbb\xb7\x85\xa8\xf9\xd1\xc9\x2d\xf2\x92\x33\x52\x55\x36\x89\xe3\x28\xa9\x74\x2d\x54\x95\x6b\x53\xcd\x9f\xe6\x5a\xb4\x6e\xf3\x93\x5f\x97\x6e\xd3\xde\xe7\x85\xde\xce\x2b\xa9\x2e\x49\x9f\x91\xf7\xf3\xa6\x31\x7a\x9d\x3c\xdf\xaf\xb4\x92\x05\x3d\x25\x71\x54\x49\xe5\x05\xc1\x94\xea\xab\xa8\x85\x2a\x35\x53\x0f\x7a\x8e\xc4\x6c\xe5\xc3\x03\xd6\xda\x16\xc2\x30\x91\xdd\x89\xaa\x42\x33\xdf\xca\xb2\xac\x71\x27\x0c\xfe\x43\x06\xd1\xc8\x24\x8e\x6a\x5d\x1d\xe9\xb7\xd2\xb4\x8d\x45\x35\xaf\x75\x65\x5a\xf2\x53\xd7\x19\xa1\x2a\x84\xfc\x1d\xae\x45\x5b\xbb\x1b\x76\xaf\xed\xfb\xae\x6b\x8c\x54\x6e\x0d\xc9\xeb\xbf\x12\xc8\xfb\x9e\x68\x51\x95\xfe\xc1\x33\xbd\x7a\xc0\xfd\x0c\x5e\x3d\x8a\xba\x45\x58\x5c\x41\x3e\xe1\xa6\xbd\xbe\xa7\x08\x4e\xe5\x78\xda\xa9\xb0\x2c\x8e\xe7\x73\xb8\xd3\xad\x43\x0b\x25\xae\xa5\x42\x0b\xa2\xae\xc1\x6d\x10\x8c\x5f\xd6\x6b\x7e\x5b\xa2\x79\x44\x03\x16\xcd\xa3\x2c\x30\x8f\xdd\xbe\xc1\x81\xd3\x3a\xd3\x16\x0e\xba\x38\xba\xa8\xa4\xca\xdf\xab\x4a\x2a\x9c\x1c\xef\xb7\x06\x8d\x70\x52\x2b\x36\x0e\x1a\x41\x80\x90\x5f\x11\xf2\xcf\x62\x4b\xc8\x9a\x48\xf0\x22\x58\xb0\xf9\x60\x74\xdb\xc4\x51\xd4\x75\x20\xd7\x90\xbf\x6d\xdd\x46\x1b\xf9\x15\x4b\xe8\x7b\x7a\x01\x22\xfd\x45\xa8\xb2\x46\xf3\x73\xab\x0a\x18\x9d\x14\xdd\x6a\xeb\xe0\xb9\xa8\x3e\x1e\x48\x7a\x3e\x7a\xa1\xd5\x5a\x56\xad\xc1\xdf\xb1\xae\x7f\x55\x7a\xa7\x00\x95\xb8\xaf\xc9\x0d\xaa\x3c\x6c\x5b\x98\xe7\x3b\xac\xeb\xcb\x87\x40\x53\x36\x5a\x2a\x67\xf3\x78\x4d\x7a\x53\x03\x17\xde\x17\xd9\x19\x91\xe9\x06\x45\xed\x36\x6c\x21\x91\xa7\x19\xdc\x6b\x5d\x67\x74\xdc\xdd\xa8\x77\x71\x05\x26\x67\x33\xd3\x64\xaa\x2c\xc9\xe2\x88\xfc\x32\x52\xe6\x1f\xde\xaf\xd2\x64\x6e\x8b\x0d\x6e\xc5\x65\x29\x6d\xa1\x1f\xd1\xec\x93\x99\x17\x5e\xb8\x27\x7f\xf0\x6b\x9f\xa1\xac\x26\x8a\x46\x3a\x52\x34\x71\x77\x14\x2d\x59\xd0\x97\xbb\x8f\x00\x3e\x2f\xe1\xcf\xff\x58\xad\x16\x89\xd7\xf0\x47\x6b\xea\xe4\xcf\x09\xe5\x8a\x22\x7f\x96\x92\x30\x11\x48\xbf\xdc\xb0\x40\xfa\x3b\x26\x6d\xe5\x41\x60\x7f\x62\xc0\x02\x20\x99\x87\x24\xca\x89\x3c\x99\x9d\xe8\x5d\x40\x12\xf6\x2f\x7f\xca\x7f\xf0\xdb\x14\xee\xa8\x70\x4f\xf9\xbf\x96\xbf\x7d\x4e\xa9\x10\xe5\x4b\x27\x5c\x6b\x7f\xfb\x75\x06\x6f\xc6\x73\x67\x71\x14\xf5\xd9\x19\x47\xfa\xe8\x24\x33\xf0\x0f\x01\x4f\x93\xa0\x65\x19\x01\x27\x8e\xcc\xe0\xf9\x23\x0b\x5f\xf2\x3a\x59\xb5\xe4\xe3\x9f\xda\xe5\x9d\x92\x2e\xbd\x28\xb2\x9c\xb5\x64\x01\x97\x47\xa6\x80\xb4\x9c\x82\x7e\x11\x7e\x59\xad\x6e\x61\x13\xb6\x5a\x8b\x25\xac\xb5\x61\x82\x29\x6c\xc2\xb1\x48\x18\x27\x32\x65\x90\x87\x76\x19\x40\xfb\xad\xe3\x1e\x63\xf4\x59\x8a\xc5\x91\x27\x65\x20\x1d\xb8\xe2\xc8\xa0\x6b\x8d\x7a\x11\x84\xe1\x04\xa7\x08\xfc\xc5\x2f\x93\xc2\x01\x26\x21\x28\x53\x98\x78\xaa\x45\xd0\xb9\x4f\xb3\x10\x7d\xfa\x2f\xd7\xf0\x9d\x5f\xcf\x83\x30\xcf\x73\x0e\x16\x4b\x5f\xc2\xbe\x28\xf1\x28\x64\x4d\x1e\x99\xc1\x1b\xcf\x9c\xb1\x44\xc0\xda\xe2\x0b\x02\x18\x57\x53\x06\x82\x87\x8f\x5b\x90\x3d\x44\x4c\x2a\x87\x66\x2d\x0a\x04\xb7\x11\x0e\xb6\xad\x75\x70\x8f\x20\xb7\x4d\x8d\x5b\x54\x0e\x4b\x90\x0a\xb4\x29\xd1\x80\xd3\xd0\x18\xfd\x28\x4b\x24\x41\xf7\xad\xa5\x62\x6c\xa1\xd6\x95\x2c\xc6\x08\x9f\xad\xc2\xa3\xd2\x51\x5b\x17\x07\x6f\xed\x43\x1c\xff\x97\x62\xfc\x2c\x78\xa1\xfc\xde\x0a\x23\xb6\x16\xfa\x7e\x06\x8d\x7f\xbc\xe8\xba\x3c\x8c\x07\x7d\x9f\x9f\x15\xe6\x99\xba\x8e\x4a\x26\xf4\x7d\x06\x17\xa2\x91\xf9\x1d\xda\x46\x2b\x8b\xd3\x6a\xcc\x98\xac\xa4\x92\x5f\xf1\x56\xb8\x4d\xda\x08\xb7\x09\x69\x92\x0d\x35\xa4\x1b\x51\x16\x26\x88\xfc\x0e\x9b\x5a\x14\x98\x9e\xbe\x13\xf7\x0c\x92\x2e\x99\x41\xb2\x48\x66\x70\xf9\x63\x36\x83\xa4\xa7\x57\xff\x76\xda\x00\x42\x2b\x9b\x54\xfc\x49\x0f\xfc\x96\xfb\xd9\xe6\x13\x11\x69\xd8\x1d\xc2\x32\x0b\x69\xc7\x0d\x8b\x62\x31\x03\xa7\x1f\x50\x51\x7d\x1c\x8e\x17\x9a\x07\x9d\x0f\xb9\x79\x52\x8a\x50\x04\x3e\xe3\x2e\xcd\x86\xc5\xfc\x8b\xc5\x94\x5b\x1a\xfa\x92\x96\x66\xc7\x7b\x87\x41\x25\xff\xc8\x33\xc6\x47\x4d\xd5\x85\xc9\xc2\x49\x16\x57\xf0\xc6\x2b\xeb\x7c\x9b\x5e\x80\x17\x40\x79\x74\x16\x23\x9e\xf1\x7c\x74\xa7\xcd\x15\xae\x82\xb7\x86\x26\xc6\x8d\x8b\xa1\xa3\x10\xf2\x4f\xe8\x36\xba\x84\xe4\xc3\xfb\x55\x02\xff\x5c\xea\xe9\xb9\x18\x92\xca\x51\x2f\xb0\xe9\x38\x0a\x49\x55\xe2\xd3\x0c\x5e\xb9\x7d\xc3\xa3\xd0\xb5\x56\xb6\xdd\xa2\xfd\x84\xa5\xe4\xbe\xc1\x58\x97\xeb\x40\xd9\xf7\xb3\x00\xbc\xa4\xeb\x88\x89\x1f\x78\x21\xcb\xe2\x11\xac\x67\xe7\x8e\xb1\x8c\x72\x3c\x3b\x3f\x9d\xbc\xe2\xe3\xb0\xf9\x8b\x2b\x48\x4f\x8e\x94\x01\x8f\x24\x44\x67\xb1\x68\x8d\x74\xfb\x77\x34\x6b\x49\xf6\x30\x1b\xbc\x3c\xb3\x3e\x30\x85\x98\x0c\x24\xc0\x69\xfb\xaa\xc4\x35\x71\xf2\x79\xce\xcb\x1d\xdc\x39\x0e\x50\xf8\x17\xb3\x8d\x92\xb8\xad\xe2\xad\xd1\x8d\xcd\xb9\xa9\x27\x61\x2c\xf6\x4c\x7c\xa6\xd5\x00\xd5\xc5\xd5\x08\xdb\x98\xeb\xed\xf1\xf6\xd5\x15\x24\x89\xaf\x99\x27\x1b\x70\x3c\xcc\x7e\xdb\x82\xc0\xc1\xba\x47\xfd\x0c\x91\x89\x7b\xfb\x9e\xc3\x01\x9c\x1e\xde\x5c\x5e\x48\x49\xf3\x04\x27\xcb\x42\x37\x68\x79\xe7\x19\x4a\x2c\xed\x79\xb7\x33\xd5\x0b\xd8\x60\xd2\x09\x3a\xb8\xe5\x04\xb5\xef\xc3\x10\xe8\x1b\xc5\x60\xfe\xe2\xd8\x31\xbe\x47\xd1\xff\xcc\xc7\xc1\x43\xeb\x85\xe3\x9d\x82\xff\x25\x37\x9c\xc8\x1c\xa7\xdb\xe8\xc5\xf4\xe2\xd9\x78\xcc\xd6\xf3\x34\x93\x1c\xfe\x5b\x59\x79\xd7\x85\xf4\xee\xfb\x74\x52\xc1\x4f\x6e\x31\xb4\x46\x2e\x84\xbf\xef\x1a\x83\x6b\x87\x5a\x7a\x9e\x2a\xcb\xe2\xb1\x81\x0c\x7d\xc1\x1b\x3b\xe9\xc6\x68\xc6\x8b\xcd\x8b\x0d\x94\x16\xc7\x99\x24\x94\xe3\x50\x96\xe3\xc8\x97\x78\xb8\xb8\xe6\xdf\x38\xb2\x9e\xe1\xc2\x0f\x05\xfc\x12\x47\x2b\xe9\xea\x61\x30\x8e\xa3\x7f\xa3\xb1\x52\x0f\x8d\x2a\x18\xf4\x19\x77\x41\x17\x67\x29\x1f\xc7\x82\x00\x85\xbb\xf3\xbd\x65\x64\x48\xed\x63\x71\xe8\x28\xc7\xf6\x64\x70\x11\x98\xbb\x98\x27\x21\xbf\x9d\xbf\xc3\xfb\x96\x7b\x26\x5d\x88\xf3\x25\xba\x4f\xba\x1c\x1a\x48\x8d\xc2\x22\xbd\x87\xd9\x56\x34\x92\x7b\x83\x17\x44\x3c\xfe\xec\x8b\xe7\xed\xed\xb1\x98\x8d\x2a\x08\x84\xef\xa4\xe5\xb1\x72\x30\x6b\xcc\x64\xce\x16\xbf\x36\x88\xa1\x15\xf6\xd3\x02\x92\xae\x83\xfc\x46\xad\x75\xee\x1d\xd7\xf7\x3c\xce\x07\xbf\x4d\xf7\x07\x57\x7a\x0a\xb2\x76\x3e\x0f\x45\x18\xf8\x73\x00\x50\x1c\x0e\x97\x32\x9a\xa9\x4a\x3e\xfb\x56\x97\xc8\x2e\x79\xe6\x11\xe6\xcb\xef\xb0\x92\xd6\xa1\x49\x79\x28\xf1\x38\xf7\x6d\x71\x06\x4a\xd6\xd9\xa8\xcd\xa2\x03\x7f\x6d\xa7\x9f\xca\x8f\x6b\x2b\x7c\x72\x3f\x6b\xb3\x15\xce\xa1\x81\x9d\x74\x1b\x50\x1a\x0a\x5d\x6b\x63\xf9\xfa\x4f\x3e\x1f\x09\xd2\x37\xb4\x72\xc4\xd3\x05\xd7\x5d\x33\xcb\x02\x9c\x69\xb1\xcf\x7c\x34\xf2\x80\xb1\x2b\x78\x33\x41\x19\x99\xfe\xb6\x2c\xcd\x02\x86\xbf\x21\x10\x65\x69\xd0\x5a\xf2\x60\x98\xd6\x03\xc9\xf3\x93\x51\x6c\x51\x94\x2b\xb9\x45\xdd\xba\x05\xc0\x8f\x3f\xc0\x05\x38\xb9\x45\xaa\xcb\x5a\x95\x44\xf1\xbb\x91\x0e\x47\x92\x33\x14\xe4\x98\x09\xd6\xc6\xcb\xee\x80\x06\xf6\xf2\x44\xf9\x99\x6b\xb1\x7d\x2c\xc2\xb4\xbe\x3f\x78\x7a\xa4\x0b\x73\xfe\xd7\x31\xae\xf1\x54\xdc\xf4\xea\xf6\xf5\xd9\xdd\x6d\x2a\x99\xfc\x19\x8a\x83\x68\x64\x48\xc4\xbb\x56\x81\x69\xd5\xb3\x9a\x40\x99\xe9\x60\x27\xeb\x1a\x6a\x42\x86\x02\xad\x00\xa5\xdb\xa0\xf1\xf7\x2e\xed\x7f\x97\x50\x62\x83\xaa\xa4\xa1\x54\x2b\x92\x48\x82\x42\x5a\x36\xc2\xd2\xad\xcc\xe9\x43\xfa\x0e\xdf\x09\xc4\x90\xaa\x19\x99\x90\x66\x80\xc6\x68\xce\x5b\x02\x07\xa1\x7d\x9d\x26\x9c\xe6\xaa\x82\xef\x5f\x5b\xb8\x84\xd7\xf6\x7b\x32\x42\xf8\x00\xc3\x6b\x9b\xcc\x40\xf8\x9c\xa1\x87\x90\x1c\xf4\xe8\x0f\xc0\x50\xc8\x38\x38\x22\x78\x3d\xbf\x51\x3c\x20\x20\x1f\x81\x02\x33\x38\x64\xe0\xf9\xc8\x87\x7d\xab\x4a\xb6\x2e\xe5\x70\xfc\x0d\xd1\xea\xe3\x32\x1d\x15\xac\x3e\x2e\xaf\xd1\xb8\x9f\xa5\x37\xea\xb0\xfa\x2b\xee\x69\x71\x18\xb7\x97\x9b\xd6\x95\x7a\xa7\xbc\x8b\x2b\x23\x0a\x5c\xb7\x75\xbd\x07\x3b\x6c\x3c\x0b\xc8\x19\xd7\x0d\x52\xa6\xfe\x3b\x35\x76\xa4\x09\x1f\x2a\xf3\xff\x17\xc5\x43\x65\x74\xab\x4a\x9a\x87\x47\x18\xfc\x2e\xdd\x66\x29\xab\xe1\xaa\xfd\x0d\x50\x70\x72\x2f\x6f\x3e\xac\xde\xdf\x7d\xf2\x77\x6f\x0a\x90\x68\x9d\xde\x0a\x27\x0b\x51\xd7\xfb\x78\x2c\x4a\x65\x0e\xab\x0d\x1e\x58\x0f\x60\xa2\x7b\x84\x18\xe5\xf8\x4f\xa4\xfc\xa1\xe9\x8c\x27\x06\x50\xed\xf0\x7e\xf4\xc4\x7c\x0e\x37\xee\x7b\x0b\x8d\xb6\x56\x52\xf9\x73\x1a\x74\x43\xe3\x1e\x59\xc0\xc0\x03\xa1\xf6\xa0\xda\xed\x3d\x19\x3f\x38\x95\x3c\xe8\x87\xc2\xdd\x46\x16\x1b\xb6\x89\xed\x7d\xc2\xa2\x75\x08\x5a\x21\xdc\xef\xf9\x47\xac\xa9\x98\x05\xc5\xe1\x08\x1b\x61\xe1\x1e\x51\x1d\x04\xda\xb6\x28\xd0\x5a\xb6\xf8\x3c\xb6\x8f\xfd\x9a\x8e\x9c\x79\x9e\x87\xef\x0b\x1c\xba\x49\x04\xad\xac\xae\xf9\xdb\xc0\x56\x3c\x60\x5a\x6c\x84\x02\x6d\xf3\x25\x3b\x69\x06\x3f\x66\x4c\xa1\x44\x9d\x7f\xd6\x4e\xae\xf7\x29\xd3\xcf\x20\x7c\x5e\xce\x83\x57\x29\xdd\x2b\x3d\x7c\xc3\x20\xac\xff\xdf\x25\x53\x52\x39\x3a\xa0\x82\x10\x9e\x12\x2d\x1a\x43\x3a\x45\xce\xf9\xc8\x69\x43\x4b\xdf\x5d\x51\x03\x60\xfe\xc3\x0a\x17\xe2\xf7\xc6\xf8\x63\x5e\xd7\xda\x86\x3a\x37\xa0\x0f\x8d\x89\xc3\xf7\x80\x38\xa2\x60\xff\x31\x83\xb5\xff\xb4\xc7\x23\xe8\xe8\x05\x62\x0a\x9a\xd7\xac\xf6\x8c\xde\xb3\x42\xc3\x9a\x92\x75\xdc\x53\x04\x1f\xe5\x76\x01\x6b\x77\x55\xe9\xf8\xbf\x01\x00\x00\xff\xff\x43\xb5\x0b\x8f\xb8\x17\x00\x00")

func templatesApiGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesApiGotmpl,
		"templates/api.gotmpl",
	)
}

func templatesApiGotmpl() (*asset, error) {
	bytes, err := templatesApiGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/api.gotmpl", size: 6072, mode: os.FileMode(420), modTime: time.Unix(1521298227, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesConfigGotmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x54\xc1\x6e\xe3\x36\x10\x3d\x8b\x5f\x31\xd5\x21\x96\x8a\x95\x1c\xec\x69\xb1\x80\x0f\xee\x66\x17\x0d\xe2\x83\x51\xbb\xdd\x33\x4d\x0d\x25\xc2\x14\x29\x90\x23\x07\x46\xe2\x7f\x2f\x48\x4b\x89\x6c\xa7\x3d\xac\x0c\x18\xd0\x90\x7c\x8f\xf3\xe6\x3d\x75\x5c\xec\x79\x8d\xf0\xf2\x02\xe5\x72\xfd\xb8\x1e\x5e\x4f\x27\xc6\x54\xdb\x59\x47\x90\xb1\x24\x95\x2d\xa5\x8c\x25\x69\x6d\xbb\x7d\x5d\x2a\x33\xe7\x1a\x05\x35\xb6\xe5\x7e\xbe\x57\xa6\xee\x94\x29\x0f\x9f\x53\x96\x33\x26\xac\xf1\xf1\x50\x85\x92\xf7\x9a\x96\x55\xe5\xd0\x7b\x58\x40\xfa\xf5\xcb\xfd\x97\xfb\xb8\x69\x3e\x87\x6f\xd6\x48\x55\x43\x85\x52\x19\xf4\x40\x0d\x82\x38\x97\x6c\x47\xca\x1a\x0f\xd2\xba\x58\x5e\xae\x1f\xc1\xa3\x3b\xa0\x2b\x19\x1d\x3b\x1c\x8f\x7a\x72\xbd\x20\x78\x61\xc9\xc8\xf1\xfe\x78\x72\xca\xd4\x2c\x79\xc0\x5d\x5f\xc3\xf4\xd9\x59\xab\x59\xf2\x68\x3c\x8a\xde\xe1\x9f\xdb\xed\x7a\x5a\x5f\xf6\xd4\x3c\x28\xcf\x77\x1a\xab\x69\x7d\xbb\xda\x7c\x43\x47\x3f\x94\xc6\x2b\x86\xed\x6a\xf3\x84\xc7\xc9\xc2\xdb\xca\x4f\xd4\xfa\xc9\xd8\x67\xf3\x06\x38\x60\xd9\x3d\x9a\xbf\xff\x5a\x8d\x1b\x4f\x8c\xc9\xde\x08\xc8\x04\xfc\x7e\x6e\x2d\x87\x9f\x8a\x9a\x87\xb3\x80\x3f\x34\xaf\x7d\x96\x87\x3e\x47\xa9\x43\x29\x4b\xab\xd0\x5b\xfa\x09\xd2\xef\x26\xc0\x43\x7c\x07\x6d\xeb\x5a\x99\x1a\xb8\xa9\xa0\xeb\x9c\x95\xd0\x22\x39\x25\x7c\x99\xe6\xe5\x1f\xd6\xea\x7f\xb8\xcb\xee\x44\x19\x95\xc9\xaf\x31\xf9\x59\xc9\x80\x3a\x8a\x4a\x16\xb4\xf2\x84\x06\xac\xf9\x04\x58\xd6\x25\xc4\x41\x82\x75\x70\x5f\xc6\x5f\x7c\x0f\xf8\x2c\x49\x86\x5b\x67\x97\xe3\xcf\xcb\x4d\x6c\x76\x20\x1f\xab\xd7\xf4\x6a\x18\x4b\xd1\x10\x75\xe1\x12\x1b\x74\x07\x25\x10\xac\xd1\x47\x08\xc3\xba\xea\x62\x3a\xc7\x1b\x34\xd2\xbe\x10\xe8\xa8\x90\x4a\x63\x40\x5b\x73\x6a\x42\x3f\xdb\xd5\x06\xc2\x38\x21\x2c\x40\xef\xb1\x82\xe7\x06\x4d\x74\x59\xd0\x2e\xa0\x6d\x86\x7e\x2e\xee\x3d\xb1\xc1\x87\x6c\x7b\x3c\x7e\x48\xf6\x84\xc7\x5f\xe1\x1a\x8c\x75\x43\x55\x9d\x0d\x55\x3c\xa3\xd6\xc5\x3e\x58\x2c\x10\x0e\x36\x03\xde\x93\x6d\x39\x29\x01\xf3\xf2\x7d\x07\x38\xf4\xb6\x77\x02\xfd\x40\x36\x51\xf1\xc6\xa9\xff\xc9\xc8\x7b\x6a\xae\xb8\x9a\x18\x54\xae\xf5\xff\x31\x4c\x73\x75\xab\x5c\x08\x44\xd1\x3b\x7d\x9e\x38\xc1\x5b\x42\xa2\x5c\x64\xe1\xc0\xb5\xaa\x38\x21\xd8\x40\xf8\x19\xe2\x09\xff\xa1\x6a\xc3\xd1\x3c\xc4\x6a\x3e\x87\x35\x77\x1e\xa1\x0b\xff\x7e\xf8\xc0\xf4\x8e\x87\x0f\x0c\x48\x67\x5b\x10\xb6\x6d\xb9\xa9\xb4\x32\x08\x32\x24\xad\xbc\x0d\x63\xc4\xc8\x72\x40\xe7\xac\x9b\xe6\x70\x58\x60\x2c\x51\x12\x7e\xbb\x74\x23\xdc\xdd\x41\x76\xe1\x18\x58\x2c\x20\x4d\xe1\xf5\x15\xa6\xc3\x3d\x57\x63\xbc\x13\x87\xd4\x3b\x03\xb2\xa5\xf2\x7b\xe0\x92\x59\x3a\x2b\x8a\x0b\x1b\xcf\x62\xb0\x87\xea\x68\xb7\x19\xb4\xbd\x27\xd8\x21\xf8\x0e\x85\x92\x6a\x34\xd9\xac\x28\x2e\x22\xb5\x90\x5c\x7b\x9c\xa5\x39\x4b\x4e\x6c\xa4\x33\x4a\xb3\x53\xd0\xea\xa0\xda\xaf\x20\x69\x51\x5b\xf6\x6f\x00\x00\x00\xff\xff\x53\x94\x48\x4d\x17\x06\x00\x00")

func templatesConfigGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesConfigGotmpl,
		"templates/config.gotmpl",
	)
}

func templatesConfigGotmpl() (*asset, error) {
	bytes, err := templatesConfigGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/config.gotmpl", size: 1559, mode: os.FileMode(420), modTime: time.Unix(1521298227, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesParameterGotmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5b\x6f\x73\xdb\x36\xd2\x7f\x6d\x7d\x8a\x2d\x9f\x36\x43\xe6\x91\xa9\x3c\x7d\x3a\x7d\xa1\xab\x3b\xd3\x24\x4e\xe3\x6b\x9b\xe4\xe2\x26\x7d\x91\xc9\xb4\x30\x09\x49\x68\x48\x80\x06\x20\xdb\x3a\x0e\xbf\xfb\x0d\xfe\x10\x04\x28\x52\x96\x1c\xf7\xda\xeb\x35\x6f\x22\x62\x81\xc5\xee\x0f\x8b\xc5\xee\x02\xae\x6b\xc8\xf1\x82\x50\x0c\x91\x28\x48\x86\x2b\xc4\x51\x79\x85\x0a\x92\x23\xc9\x78\xd4\x34\x93\xba\x06\xb2\x00\xc6\x21\xfd\x81\xd0\x33\x89\x4b\x01\xe9\x0f\xe8\xc6\xfc\x32\xf4\x0c\x95\xb8\x20\xff\xc4\x90\xbe\x40\x25\x86\xa6\x39\x57\x1f\xf3\x13\x20\x54\x7e\xf9\x45\x5c\x60\x1a\x1b\x2e\x88\xe6\x10\x53\x26\x21\x3d\x13\xdf\x70\x8e\x36\x89\xfd\x7c\x8e\xc4\x53\x22\x32\x4e\x4a\x42\xd5\xc4\x89\xeb\x76\x46\x25\xe6\x0b\x94\xe1\xae\xe9\x5c\x72\x8c\xca\x44\xfd\x7c\xb1\x2e\x0a\x74\x51\xa8\x39\x1f\xd6\x35\x60\x9a\x43\xd3\xd4\x35\xa4\x6f\x51\xb1\xc6\xa7\x37\x15\xc7\x42\x10\x46\xa1\x69\x92\x64\xe2\x7a\x58\xa5\x3a\x8d\x9a\x66\x42\x16\x80\x39\x57\x52\x5b\xf5\xb1\x23\x2b\xe9\xd3\x57\x48\xae\xa0\x69\xa6\x50\xd7\x50\x71\x42\xe5\x02\xa2\xcf\x2e\x23\x48\xbf\x67\x19\x92\x66\x0e\x4d\x1c\x44\x43\x53\xfc\xf9\x92\xbf\xe9\xe9\x3e\x39\x01\x4a\x0a\xa8\x27\x00\x1c\xcb\x35\xa7\xaa\x75\xd2\x0c\x88\xea\x41\x3e\x24\xaa\x25\xdf\x93\xa8\x8e\xdf\xe1\x82\xbe\xa1\xe4\x72\x8d\x77\xc9\xea\xf5\x38\x4c\xdc\xdf\xdb\x82\x0e\x44\xe2\x94\xae\xcb\x11\x08\x14\xe9\x3f\x4a\x77\x63\xbf\x56\xa3\x43\x80\xe8\x7e\xb5\x7e\xc6\x82\x40\x18\x7d\xa5\x24\x96\xe4\x0a\x47\xa6\x8b\xdd\x92\xdf\x63\xba\x94\xab\xd1\x2d\x69\xc8\xd6\xa3\xb4\x00\x7a\x58\xd6\x35\x2e\x04\x6e\x9a\x28\xaa\x6b\x4c\xf3\x3d\xc1\x0d\xe1\x88\x7d\x3c\xfa\x70\xe8\xd9\xb6\x86\x24\x3e\x82\x86\xfa\x64\x2d\x24\x2b\x9f\x31\x5e\x22\x29\x31\x87\xa6\x49\xcf\x25\x27\x74\x19\x77\x9d\xcd\x6e\xeb\x94\xbe\x15\x5b\xad\x52\x0b\x16\xba\xd9\x09\x56\x4b\xfe\x73\x81\xd5\x29\x7d\x10\x58\xaf\x34\x5f\x3a\x0c\x95\x25\xfe\x79\x80\xfa\xa5\xae\x3b\x8d\x7f\x39\xcc\xaa\x08\x25\xe5\xba\x1c\xdd\x80\x8a\x68\xa4\xc1\x97\x90\x9e\x5f\xa3\xe5\x12\xf3\x1f\x37\x15\x86\x88\x50\x89\x97\x98\xab\xfd\x7c\x46\xa5\x13\xe7\xbe\x61\xdd\x35\x2f\x31\xf3\x16\x42\xc1\xb7\x28\x18\xea\xc4\xf8\xf2\x8b\x78\x08\xe3\xdd\xab\x92\xb4\x3b\xd4\x60\xa2\xbf\x4e\x6f\xb2\x62\x2d\xc8\x15\x76\xcd\x87\x6e\xdb\x1d\x00\x1b\xe2\x7f\x1d\xc0\x2d\x26\x3d\x80\xdb\xe6\xc3\x00\x5e\x17\x92\x54\x05\x7e\xb9\x18\xc1\xd8\xd1\xef\x0f\x38\x8d\xc4\xc7\x00\xe0\xc9\x7c\x90\xb2\xea\x50\xde\x1d\x65\xdc\xa7\x65\x7c\x5c\x10\x72\x08\x2c\x07\x9f\x0c\x9d\xec\xff\x73\x15\xb5\xb8\xec\x0d\x65\xfb\xbf\x8b\x53\x2a\xce\x2a\xcc\xe5\xa6\x97\x12\x79\x01\xde\x99\x70\x11\x8c\x81\x56\xe2\xb2\x2a\x90\x1c\x0b\x72\x52\xd3\x2b\x8c\x12\x87\xf4\x1b\x5a\x4c\x43\xd7\x16\xab\x57\x50\xe9\x1c\xd5\xb5\x5b\xa3\xa6\x89\x4c\x83\xdd\xb7\xa6\xbf\x6e\x1d\x42\xd7\x41\x38\x85\x85\xee\x29\x76\x23\x35\x20\xb7\x5e\xfe\xbe\xe2\x43\x59\xa4\xaf\xf8\x71\x2f\x2c\x6c\xd1\xbe\x20\x34\xaf\x5a\xa8\xf4\xf8\x68\x34\x82\xec\xe6\x50\xa3\x8c\x57\x9a\x5c\x21\xae\x6c\xe0\x0a\x71\xaa\x72\x99\xf4\xc9\x8a\x14\xf9\x40\x24\xfb\x5a\x47\xb2\xdf\x32\xed\xd7\x9a\x66\xb2\x60\x1c\xba\x1c\xd7\x8c\x7a\x8e\xc4\x5b\xb7\x80\xa2\x6d\x7d\xc2\xe8\x15\xe6\x6a\x85\x6c\xc3\xd0\xd2\x29\xe6\x67\x34\xc7\x37\x6f\x91\xfd\xb4\x9e\xf2\xe7\xd0\x56\x6f\x95\xf3\xad\x5a\x7d\x8e\xe8\x12\xef\xd5\xfd\x89\x5e\xb1\xbe\x22\xed\x22\x29\xd4\x35\xb5\x55\x65\x94\xcb\xfc\x04\xc4\x35\x5a\xa6\xe7\x55\x41\xe4\xe3\x8d\x51\x2d\xde\x4b\xe0\x6d\xff\xd1\xe2\x56\x14\x38\x53\x50\x1a\x6e\x2a\xac\x31\xd2\x0c\x99\x4d\xbb\xa4\x66\x30\x58\xc1\x8f\x0d\x8c\x4e\x0f\x65\x81\xfd\x55\x71\xc4\x5b\x45\x9d\xb6\xbb\xcb\x43\xc4\xb1\x31\xa7\xe9\xed\xea\x2a\x1d\xec\x3e\xf5\xf6\x8c\xbf\x6b\x18\x17\xe9\x19\xd5\xfb\x40\x59\x5b\xdc\xcd\x36\x9a\xf6\x19\x72\xe0\x77\xa3\x6e\x98\xb3\xda\x68\x3f\x1b\x52\x22\x06\xf8\x75\xb0\x6d\xdb\xee\x1d\xe0\xb3\x9e\x23\x7d\x85\xb8\xc0\x7f\x5e\xd4\xf6\x47\xc6\xda\xd4\xed\x30\x18\x7e\xd6\xb5\xd9\xa9\xcc\x47\x7f\x67\x8c\x1d\x43\xe1\xfe\xd8\xc7\xef\x9d\x00\xaa\x2a\x4c\xf3\xbd\x16\xea\xf5\xbe\x58\xf9\x3e\xba\x42\xd9\x07\x64\x1c\x56\xfa\xca\xfe\x56\x2a\xcd\x66\xf0\xe3\x8a\x08\x58\x90\x02\xc3\x35\x12\xb0\xc4\x14\x73\x24\x71\x0e\x17\x1b\x90\x2b\xac\x7d\xce\x12\x73\x90\x8c\x15\xa9\xea\x7f\x9a\x13\x49\xe8\x12\xa4\x1b\x57\x92\xe5\x4a\x42\xc5\xd9\x15\x86\xc5\x5a\x6a\x56\x2b\x4c\x61\xc3\xd6\xc0\xf1\x31\x5f\xd3\x80\x53\x3b\x05\x64\xac\x2c\x11\xcd\x27\x13\x52\x56\x8c\x4b\x88\x27\x00\x11\xc5\x72\xb6\x92\xb2\x8a\x14\xde\xd1\x92\xc8\xd5\xfa\x22\xcd\x58\x39\x5b\x12\x7a\xbc\x64\x94\x64\xea\x57\xd4\x27\xb2\x63\x56\x61\x8a\x2a\x32\x33\x86\xba\xa3\x43\x7b\x70\xef\xe8\xc2\xd7\x54\x92\x72\x8f\x1e\xb3\x92\xe4\x79\x81\xaf\x11\xdf\xd5\x59\x69\xde\x27\x97\xe4\xc3\x07\x5c\x30\x91\x21\xae\x55\xb3\xe8\xcc\x50\x45\xb4\xea\x42\xf2\x45\x29\x47\x39\x6a\x6a\x64\x6d\xd2\x1c\x46\xe9\x53\xbc\x40\xeb\x42\x9e\x69\x34\x85\x39\xe3\x82\xdd\xd8\x9a\xa4\x67\xdd\x76\xec\xa7\x1f\xf0\x66\x0a\x9f\x5e\x29\x33\x52\x5b\x25\x0d\x98\x28\xaa\xda\x43\x3d\x7e\xb6\x7b\x8f\x6b\xa2\xad\x4a\x75\x45\x22\x43\x41\x11\xf3\x94\xe6\x15\x23\x54\x02\xbe\xc1\xd9\x5a\x62\xa1\xed\x22\x63\x1c\x43\xc1\x96\x24\x03\xb6\xd0\x2d\x1c\xab\x1d\x96\x2b\x3e\x9c\xad\x25\x56\xac\xf5\xc0\x74\xb2\x58\xd3\x6c\x37\xf3\x78\x85\x68\x5e\x60\x0e\xaa\x6b\x9c\xc9\x1b\x78\xb8\x24\x54\x1d\x23\x12\xdf\x48\x17\x74\x73\xa4\xcb\xa0\x53\xa8\xcc\xcf\x87\x83\x4c\x4d\x3f\xa7\x5c\x02\x0f\x51\x45\xd2\xd7\x58\x54\x8c\x0a\x9c\x80\xe2\xfc\xdc\xcc\xf7\x4c\x4b\x36\x39\xb2\xfe\x52\x0b\xba\x35\x7d\xa2\x7a\x1c\xf5\x85\x98\xcd\xba\x4d\x61\xc5\x59\x70\x56\x02\xc7\x97\x6b\x2c\xe4\xe4\xe8\xc8\xb6\xce\x4f\xe0\xc1\x2e\x39\x9b\xc9\xd1\x91\x3d\x01\xcc\x88\x94\x63\x94\xbf\x36\x6c\x94\x30\xc9\xe4\xe8\xa8\xef\xe4\x8f\xf4\x98\x97\x17\xbf\xaa\x61\x98\xf3\x34\x7e\x68\x9d\xfd\x13\x56\x56\x4c\x10\x89\x4f\xd5\xb7\x1a\x7b\x54\x71\x76\x51\xe0\x52\x75\x55\x48\xbc\x32\x9f\x9a\xc9\xd1\x8f\x44\x16\x78\x0e\x10\xbd\xa1\x15\x67\x19\x16\x42\xa7\x13\xa7\x54\x12\xb9\x49\xa3\xa9\xee\x74\x2e\x91\x5c\x8b\x39\xa8\x95\x32\xd3\xa6\x4f\x58\x8e\xe3\x24\x31\xf4\xa7\x58\x22\x52\xcc\xc1\xd2\xf4\xcc\xb1\xa1\x29\xed\x8e\x32\x79\x93\xfe\xc4\x89\xc4\x3c\x7d\x8e\x51\x8e\x79\x9c\xa4\xe7\x58\xc6\x91\x46\x98\xca\x63\x75\xa4\xa8\x80\x1b\x55\x55\x41\xcc\xb9\x33\xb3\x52\xff\xef\xaf\x82\xd1\x28\x69\xd9\xfc\xfd\xfc\xe5\x8b\xd8\x92\x52\x23\xd7\x14\xec\xb7\xee\x64\x96\x72\x62\x66\xee\x2c\x5c\x11\x44\xa5\x20\xb0\xa6\xa6\x90\x1d\x33\x2c\x9b\xbf\x28\x7e\xe2\x9a\xc8\x6c\x05\x6a\xb0\xd6\x59\x63\x9f\x21\x81\x41\x39\x3c\x2b\xc1\x0b\x66\x15\x99\xb7\x62\x7e\x73\xc1\xb8\xfc\x89\xc8\x95\xe9\x10\xbb\xf1\x8a\x67\x6e\xf6\xfc\x3c\xd0\xc9\xf5\x98\x9a\xc9\x1e\xb3\x7c\x93\x18\x35\x9a\x49\x33\xbe\x3f\xad\xf0\x19\xa3\x12\x11\x2a\x00\x15\x85\xde\x8f\x17\x6c\x4d\x73\x67\x99\x8c\xeb\xc6\xba\x86\xd5\xba\x44\xd4\x67\x00\xea\x44\xd4\x90\xab\x39\xe4\xa6\x22\x19\x2a\x0a\x7d\x90\x08\x0c\x88\x63\x60\x17\x8a\x35\xce\x8d\x81\x23\xa3\xb9\x35\xd0\xc9\x6c\xa6\x86\x59\x4f\x38\xd7\xf3\x61\x89\xb9\xd0\xc7\x96\x9d\x62\x22\x55\xc8\xb0\x4b\x7c\x21\xf9\x3a\x93\x50\x87\xce\xb1\xdb\x6c\x0f\xed\x52\x3d\xc5\x2a\x29\xae\x6c\x60\xa2\xa6\xd8\x6a\x09\x0a\x7c\x4a\x4a\xc2\xb1\x75\x9d\xed\xd7\x1c\x24\x5f\xe3\x7e\x5f\x5b\x1d\x31\x5d\xed\xc7\xbc\x0d\x8f\xfb\x35\x14\x68\x9a\xaf\x20\x28\xf3\x77\x84\x2d\xc6\xa6\xae\x65\x19\x9b\x8f\x01\xc6\xae\xd7\xd7\x3d\xc6\x8e\xb0\xc5\xd8\x55\x39\x2c\x6f\xfb\x0d\x2f\x17\x73\x73\x45\xe6\x77\x18\xd0\xd7\x94\x7e\x9d\xc6\x60\xbe\xed\x58\x8f\x3c\xa0\x51\x30\x94\xd0\x70\xa8\x47\xee\x0f\xb5\x65\x54\x33\xd0\x7e\xcc\x6d\x8c\xd3\x52\x06\x24\x75\x57\x60\x46\x50\xfd\xe9\xe4\x6c\x89\x03\x62\xfa\xe3\x08\x0d\xc6\x75\xc4\xfe\xb8\xde\xad\x1b\x80\x69\x18\x36\x1b\x2f\x50\x9e\x00\x9c\x59\x65\xbc\xd6\xfe\x80\x81\x0c\x6e\x02\xd0\xb5\x82\x69\x36\x7c\x06\x3a\xf7\xf9\x3d\x47\xc2\x46\x11\x86\x93\xfd\x98\x6f\x17\x71\xba\x6e\x7e\x40\xf1\x70\xe6\xb2\x40\x5d\x63\x3a\xcf\x56\xb8\x44\x36\x14\xe9\x36\xec\xd9\x53\x1b\x4e\xdc\xdb\xe5\xd9\x33\x52\x60\xbd\xc5\x0f\xb9\x4f\xb3\x09\x88\x5f\x0c\x18\x74\x2c\x5b\x92\x1a\xb5\xd2\x33\xf1\x18\x09\xac\x58\x84\xb3\xf4\x3a\xb5\x82\xec\x98\xdc\x0b\xc8\x4c\xb9\xcb\x78\x69\xef\xf4\x86\x0b\x26\x57\xa0\x72\x70\xa1\x05\x69\xa3\x58\x01\xa8\x8d\x13\xa6\x40\x24\x20\x21\xd6\xa5\x8e\xac\x90\x54\x11\x76\x55\xe0\x1b\x15\xab\xd3\xa5\x00\xa2\xbe\x4a\x4c\x25\x20\xb0\x65\x14\x25\x6f\x6c\xa2\xc9\xf4\x35\x5e\x12\x21\xf9\x26\x31\xc9\x9e\x3a\xa2\x0d\xcc\x4a\x14\xe5\xf6\x85\x66\x00\x3a\xec\x13\x6a\xb2\x6b\x52\x14\xb0\x16\x58\xf9\x5c\xa4\xb3\x80\x12\xcb\x15\xcb\x41\xb9\x7d\x61\x82\x35\x9d\x26\xbe\xc6\x19\x26\x57\x98\xb7\x80\xee\x8a\xb6\x12\xe8\x05\x2d\xbd\x08\xca\x08\xa7\x92\xd3\x2b\xc4\xd5\x01\x07\xef\xde\xeb\xb6\xae\x00\xe1\x9c\xbd\xcd\x83\x75\xf1\xc4\x28\xf9\x02\x5f\x1b\xeb\x17\x5e\x91\x72\xd2\x0d\x7d\x8e\xc4\x3f\xd6\x98\x6f\x1c\x8b\x4b\x3d\xda\xc6\xfb\x26\xd1\x12\x4a\xaa\xf6\xd4\x4a\xdf\xbc\xfe\x3e\xd5\x43\xe2\x64\x8c\xa3\x9a\xd1\x31\xec\x4a\x88\x3e\x17\x9d\xa9\x1b\x1f\x8b\xb8\x54\x03\xe2\xff\xff\x1c\xbe\xfa\x0a\x3e\x7f\xd4\xaf\xff\xf9\x21\x9c\x3e\x3f\x4f\x39\x7f\xc1\xa4\x1b\x6c\x13\xf7\xf6\x9f\x57\x2c\x6c\x9b\x1a\x57\x74\x18\x93\x44\x0b\xb0\x5d\x78\xdc\xcd\x75\x72\xd4\x84\x3a\x6b\xb4\x9c\xe2\x13\x80\x45\x7e\x1b\x9a\x6a\x58\xe2\x27\x14\x7d\x48\xfb\xe7\x79\xe8\x70\x82\xe2\xa7\xa9\x86\x76\xcb\xa9\x56\x73\xd0\xf0\xa6\x70\xb9\xfa\x30\x42\xf9\x59\x09\x7c\x29\xd2\x6f\xb1\x7c\xf9\x9d\xff\x34\xc0\x2b\x98\xd8\x82\x55\xcf\xca\x53\xb5\x5b\x07\x1c\x5f\x7c\xb8\x10\xa3\x95\x60\xd0\x1b\xc0\x15\x10\x38\x16\xba\x06\xd4\x55\x4a\xba\xf2\xd2\x99\x50\x82\xb7\x40\xf0\x61\x4f\x37\x3f\x81\x77\xef\x85\xae\x40\xd7\x6a\x59\x74\xf7\x40\xeb\xe6\xce\x6a\x0f\x4f\x39\xd5\x27\xe1\x7d\xa9\x68\x72\x82\x56\xc9\xbb\xc9\xe9\x9b\xa3\xe1\xf7\x4e\x6f\xb3\x27\x88\x32\xaa\x22\x5a\xd3\xf8\x1d\xde\x04\xc0\xbc\xbf\x5f\x4d\x9c\xcf\xd0\xb6\x6c\xdb\xda\x53\xce\xd8\xf7\xd6\x2b\xa1\xe1\xb7\x43\x46\xdc\xe9\xd0\x5e\x57\x93\x28\xa6\x23\x76\x7d\xbb\xec\x2a\x4d\x7c\x81\xaf\xe3\x2f\x1e\x3d\x9a\x42\xa4\x1c\x37\xa1\x4b\x53\x16\xfa\xec\x12\x16\x88\x14\x2a\x44\xfe\xec\x2a\xda\xaa\x0d\xc6\xa1\x9c\x49\x5b\xbe\x4c\x34\x1c\x06\x09\x33\xf1\xd0\xda\x0d\x5b\x6f\xe7\x59\x94\x52\xf5\x53\x24\xd1\x7c\x10\x92\x29\x18\x50\x86\xa9\x86\xd6\xf4\x96\xa5\x69\x16\xf9\xd8\xf6\xcc\x77\xbb\x8f\x45\x7e\xaf\xfe\xe3\x2e\x72\x7c\x8c\x51\xf6\xfc\x70\xdf\x52\xff\xf2\xb8\xc3\x9b\x58\x85\x69\xbd\x8d\xfc\x97\x05\x85\xc1\x91\x85\xe8\x31\xcb\xad\xbd\x74\x19\x03\x59\xb8\xcd\xfc\x1c\xe9\x1e\xbe\x63\x4e\xbc\x5b\xb5\x7e\xa4\x6d\x73\xdd\x7d\x5d\x86\xef\x0f\xd5\x34\xc1\x96\xf7\xc4\xdc\x0a\xfa\xbd\xa6\xd3\x9b\x8a\x71\xa9\x6b\x03\x17\x2c\xdf\x04\xd7\x58\x3f\xb0\x1c\x17\xa2\xab\xba\xa7\x6f\x68\x89\xb8\x58\xa1\xa2\xae\x55\x54\x4a\xaa\x96\xd6\x5e\x88\x6c\x0d\xd9\xba\xd9\x3d\x2f\x48\xd6\x65\x8f\x71\x5f\x85\xa9\xa9\x9b\xaa\x98\x59\x65\x03\x7c\xc0\xa5\xc3\x60\x55\xc3\x75\x3b\x39\x01\xc2\xd2\xd3\x97\xcf\x5c\xd8\xa7\x5b\x5b\x97\xdf\x8e\xda\xfb\xa9\x64\x32\x31\x11\xa2\xf5\xe7\x46\xee\x51\xb3\xe9\xf0\x57\x21\xbe\x42\xb4\x77\x37\x0c\xbd\xd8\xf5\x31\xa1\xb9\x2e\x7d\x3d\x50\x9d\x7b\x26\x7a\xb0\xaa\xa3\x27\x9d\xaf\xf6\xad\x67\xd9\x2e\x34\x2c\x1c\xf6\x94\x0b\x6a\xf2\xbb\x0f\x5a\x1d\x9c\x9b\xa2\xe8\x47\xca\x30\x85\x28\xb2\x07\xee\x08\x3e\xbd\xd5\xf2\xb7\x72\xff\x7c\x1e\x3c\x08\xda\x7b\x30\xf3\x19\x0f\xa4\xcf\x7e\x22\x1f\xdc\x8d\x17\x04\x09\x9c\x7b\x57\xa2\x26\x91\x7d\x79\xf1\x2b\xce\x64\x92\x98\xcc\x0e\x7e\x36\x8f\x5f\xc3\x5b\xfd\xad\x5c\xd3\xbf\xad\xdf\xd3\x29\xb4\x86\x10\x3a\xd7\xdd\xf3\xa4\x36\xa3\xc6\xf1\x0e\x47\xb9\xd3\x59\x9a\x7f\x17\x1c\xa3\x0f\x93\x36\xa3\x1a\x58\x87\xe0\x87\x3d\x6a\xf6\x01\xd7\x11\x1c\xba\xae\x65\x1b\xde\x4e\x73\xb5\xa1\xf6\xd4\x6d\x87\x66\xdb\xb6\xa4\xd1\x2d\x30\x55\x1d\x13\xb5\x09\x1f\x39\x3e\x87\x78\xef\x03\x4b\x33\x4d\xf3\xc0\x09\x71\x61\x9c\xbd\x11\xae\x7f\x35\x36\x50\xf5\xf5\x6d\xfe\xdf\xe3\x22\x1a\x5f\xa6\xed\xbb\x3b\xf7\xdb\x47\xf2\x6b\x07\x64\x78\x73\xef\x2e\x73\xba\x07\x34\xc6\x8f\x70\x2c\xd2\x34\x6d\x4f\x6b\x3b\x88\x92\x62\xd2\x4c\x26\x75\x0d\x9f\x66\x05\x12\x42\x03\x3e\x3f\x81\xb8\xb7\x08\x89\x7d\x01\xb4\x95\x95\x77\x39\xb9\x36\xbe\xe0\x8c\x0f\xca\x75\xc1\x5f\xb2\xf8\x0f\xb7\x86\x1f\x60\xed\xae\x29\x79\xc2\x76\xe5\xa4\xd1\x7c\x14\x5d\xab\x0c\xc1\x25\xbc\x53\x58\x21\xf1\x1d\xde\xc0\x05\x63\x85\x8b\x77\x60\xa4\x3a\x56\x07\x41\x4c\x5b\x74\x74\x29\x76\x12\x98\x0e\x59\xc0\x27\x96\xf9\xd0\xda\xdc\xe9\x38\x0d\x8c\x40\x97\xc2\xd0\x35\x18\x4d\x3c\x93\x30\x3a\x06\x66\x81\xae\x55\xa2\x64\x08\xef\xfc\x4e\xc7\xff\xf7\xbe\xe3\xbb\x8f\x62\x86\xf8\x4d\x51\xb0\xeb\xd3\xb2\x92\x1b\x5d\xcf\x09\xdd\x87\x7b\x26\xd7\x0e\xb2\xcf\xdb\xf6\xff\x1b\x0b\x8e\xae\x87\x63\x4e\xaf\x00\x35\x10\x79\xc7\xd0\x97\x1c\x8c\x23\x34\x42\xb7\xe2\x24\x63\xf2\x6b\x98\x4e\x20\x8a\xa0\x86\xd9\x0c\xb0\xa2\xb7\xa5\xcf\x0a\x09\x73\x3b\xc6\xe4\x0a\x73\xe8\xde\x14\x0a\xff\x40\x0c\x8a\xe9\xf6\x15\x5c\xe8\x05\x9a\xa6\xed\x10\x94\xb0\x7a\x69\x7e\x17\xf7\x74\x71\x11\x13\x26\xc5\x35\xb7\x8b\xce\x0f\xfa\x1b\x28\x28\x32\xc7\x6d\x65\x79\x77\x21\x7f\xfb\xf1\x64\x12\xfa\xec\xe1\x3f\x42\x19\xf0\xc3\xb7\x17\xf3\xcd\x7e\x77\x9e\x19\xb6\x2b\xf7\xbe\xb3\x1e\xca\xd3\xad\xe8\xfd\xa0\xd2\x39\xb0\x6d\xaf\xee\xae\x4d\xba\x37\x65\x7a\x49\xc3\x77\x67\xfe\x8b\x33\x65\x7d\x77\x7a\x19\xb5\xf7\x1f\x10\x05\x44\xb7\xd4\xc6\xee\x3b\x15\x76\xa1\x3e\x76\xc0\x69\xd5\xb6\xd2\xf5\x6d\xa7\x1a\x42\xb0\xf5\x76\x2c\x10\x30\x78\xc4\xea\xcb\xf9\x87\x46\xe8\x0e\x97\x4c\x3b\x6e\x94\xda\xef\x16\xf4\xf0\x6a\x27\xd6\x70\xa6\xfa\x6f\x4a\x3a\x69\x13\x93\xd7\x98\x97\xdd\x77\x5c\x4f\x8e\xae\xb7\xec\xd9\x3a\x1a\xff\x55\xec\x6d\x75\xcf\xd6\x25\x0f\x16\x06\x76\x25\xf9\x03\x0e\xb7\x15\x24\x08\x1b\x8c\x9a\x7e\x52\xf0\xc7\x3b\xb8\x7b\xb1\xdd\x6f\x7e\x40\x3b\xe7\x83\x2f\x07\x6e\x62\xa3\x72\x5d\x48\x12\x19\x3f\xb7\xc7\x93\xe2\xb9\x3b\xc0\xc3\x54\xf9\xf2\x6a\x38\x4e\xde\x23\x2c\x18\x1b\x3a\x1c\x2a\xc0\x31\xd8\x60\x61\xcf\x57\x8e\x63\x0f\x98\x47\xa6\x1d\x78\x4a\x3a\xf0\x58\x79\x6b\x2b\xe8\x42\xcd\xed\xe1\x49\x07\xc4\x5e\xa2\x07\xe9\xc9\x6f\x66\x18\x41\x58\x32\x72\x25\x9f\xe3\xc5\xdb\xf6\x8d\xde\xf0\x6b\x70\xef\x3c\xdf\x0f\xc3\xbb\x61\xf1\xe0\x81\x1e\xd2\xca\xe3\x1b\xd2\xa8\x73\x6b\x3b\x07\x05\x9e\x8f\x5d\x07\x4a\x8a\x7e\xda\xe6\xe3\xba\xf3\x21\xbb\xeb\x35\xea\x8c\x6f\x7f\x8d\x1b\xdc\xf3\xea\xb2\xdc\xef\xeb\x8a\xb7\x7d\x71\xf8\xe7\x21\x2a\xea\xea\xff\x15\xc5\xb0\xe4\x77\xf1\xd8\x7b\xe8\x73\x4b\x3e\xb5\xc7\xfb\xea\xc1\x13\x67\xf0\x2f\x9b\xed\xaf\xd9\x0c\xae\x48\x39\x87\x85\x3c\x59\xb2\xc9\xbf\x02\x00\x00\xff\xff\x93\x19\x44\x1a\x5a\x41\x00\x00")

func templatesParameterGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesParameterGotmpl,
		"templates/parameter.gotmpl",
	)
}

func templatesParameterGotmpl() (*asset, error) {
	bytes, err := templatesParameterGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/parameter.gotmpl", size: 16730, mode: os.FileMode(420), modTime: time.Unix(1520773107, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"config.yaml": configYaml,
	"templates/api.gotmpl": templatesApiGotmpl,
	"templates/config.gotmpl": templatesConfigGotmpl,
	"templates/parameter.gotmpl": templatesParameterGotmpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"config.yaml": &bintree{configYaml, map[string]*bintree{}},
	"templates": &bintree{nil, map[string]*bintree{
		"api.gotmpl": &bintree{templatesApiGotmpl, map[string]*bintree{}},
		"config.gotmpl": &bintree{templatesConfigGotmpl, map[string]*bintree{}},
		"parameter.gotmpl": &bintree{templatesParameterGotmpl, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

