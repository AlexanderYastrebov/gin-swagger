package clusters

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/mikkeloscar/gin-swagger/example/models"
)

// HTTP code for type CreateClusterCreated
const CreateClusterCreatedCode int = 201

/*CreateClusterCreated The cluster creation request is accepted

swagger:response createClusterCreated
*/
type CreateClusterCreated struct {

	/*
	  In: Body
	*/
	Payload *models.Cluster `json:"body,omitempty"`
}

// NewCreateClusterCreated creates CreateClusterCreated with default headers values
func NewCreateClusterCreated() *CreateClusterCreated {
	return &CreateClusterCreated{}
}

// WithPayload adds the payload to the create cluster created response
func (o *CreateClusterCreated) WithPayload(payload *models.Cluster) *CreateClusterCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create cluster created response
func (o *CreateClusterCreated) SetPayload(payload *models.Cluster) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateClusterCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// HTTP code for type CreateClusterBadRequest
const CreateClusterBadRequestCode int = 400

/*CreateClusterBadRequest Invalid request

swagger:response createClusterBadRequest
*/
type CreateClusterBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewCreateClusterBadRequest creates CreateClusterBadRequest with default headers values
func NewCreateClusterBadRequest() *CreateClusterBadRequest {
	return &CreateClusterBadRequest{}
}

// WithPayload adds the payload to the create cluster bad request response
func (o *CreateClusterBadRequest) WithPayload(payload *models.Error) *CreateClusterBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create cluster bad request response
func (o *CreateClusterBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateClusterBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// HTTP code for type CreateClusterUnauthorized
const CreateClusterUnauthorizedCode int = 401

/*CreateClusterUnauthorized Unauthorized

swagger:response createClusterUnauthorized
*/
type CreateClusterUnauthorized struct {
}

// NewCreateClusterUnauthorized creates CreateClusterUnauthorized with default headers values
func NewCreateClusterUnauthorized() *CreateClusterUnauthorized {
	return &CreateClusterUnauthorized{}
}

// WriteResponse to the client
func (o *CreateClusterUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
}

// HTTP code for type CreateClusterForbidden
const CreateClusterForbiddenCode int = 403

/*CreateClusterForbidden Forbidden

swagger:response createClusterForbidden
*/
type CreateClusterForbidden struct {
}

// NewCreateClusterForbidden creates CreateClusterForbidden with default headers values
func NewCreateClusterForbidden() *CreateClusterForbidden {
	return &CreateClusterForbidden{}
}

// WriteResponse to the client
func (o *CreateClusterForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
}

// HTTP code for type CreateClusterConflict
const CreateClusterConflictCode int = 409

/*CreateClusterConflict Conflict, already existing

swagger:response createClusterConflict
*/
type CreateClusterConflict struct {
}

// NewCreateClusterConflict creates CreateClusterConflict with default headers values
func NewCreateClusterConflict() *CreateClusterConflict {
	return &CreateClusterConflict{}
}

// WriteResponse to the client
func (o *CreateClusterConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
}

// HTTP code for type CreateClusterInternalServerError
const CreateClusterInternalServerErrorCode int = 500

/*CreateClusterInternalServerError Unexpected error

swagger:response createClusterInternalServerError
*/
type CreateClusterInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewCreateClusterInternalServerError creates CreateClusterInternalServerError with default headers values
func NewCreateClusterInternalServerError() *CreateClusterInternalServerError {
	return &CreateClusterInternalServerError{}
}

// WithPayload adds the payload to the create cluster internal server error response
func (o *CreateClusterInternalServerError) WithPayload(payload *models.Error) *CreateClusterInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create cluster internal server error response
func (o *CreateClusterInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateClusterInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
