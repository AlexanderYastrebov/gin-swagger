package node_pools

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/mikkeloscar/gin-swagger/example/models"
)

// HTTP code for type CreateOrUpdateNodePoolOK
const CreateOrUpdateNodePoolOKCode int = 200

/*CreateOrUpdateNodePoolOK The node pool create request is accepted.

swagger:response createOrUpdateNodePoolOK
*/
type CreateOrUpdateNodePoolOK struct {

	/*
	  In: Body
	*/
	Payload *models.NodePool `json:"body,omitempty"`
}

// NewCreateOrUpdateNodePoolOK creates CreateOrUpdateNodePoolOK with default headers values
func NewCreateOrUpdateNodePoolOK() *CreateOrUpdateNodePoolOK {
	return &CreateOrUpdateNodePoolOK{}
}

// WithPayload adds the payload to the create or update node pool o k response
func (o *CreateOrUpdateNodePoolOK) WithPayload(payload *models.NodePool) *CreateOrUpdateNodePoolOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create or update node pool o k response
func (o *CreateOrUpdateNodePoolOK) SetPayload(payload *models.NodePool) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateOrUpdateNodePoolOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// HTTP code for type CreateOrUpdateNodePoolBadRequest
const CreateOrUpdateNodePoolBadRequestCode int = 400

/*CreateOrUpdateNodePoolBadRequest Invalid request

swagger:response createOrUpdateNodePoolBadRequest
*/
type CreateOrUpdateNodePoolBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewCreateOrUpdateNodePoolBadRequest creates CreateOrUpdateNodePoolBadRequest with default headers values
func NewCreateOrUpdateNodePoolBadRequest() *CreateOrUpdateNodePoolBadRequest {
	return &CreateOrUpdateNodePoolBadRequest{}
}

// WithPayload adds the payload to the create or update node pool bad request response
func (o *CreateOrUpdateNodePoolBadRequest) WithPayload(payload *models.Error) *CreateOrUpdateNodePoolBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create or update node pool bad request response
func (o *CreateOrUpdateNodePoolBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateOrUpdateNodePoolBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// HTTP code for type CreateOrUpdateNodePoolUnauthorized
const CreateOrUpdateNodePoolUnauthorizedCode int = 401

/*CreateOrUpdateNodePoolUnauthorized Unauthorized

swagger:response createOrUpdateNodePoolUnauthorized
*/
type CreateOrUpdateNodePoolUnauthorized struct {
}

// NewCreateOrUpdateNodePoolUnauthorized creates CreateOrUpdateNodePoolUnauthorized with default headers values
func NewCreateOrUpdateNodePoolUnauthorized() *CreateOrUpdateNodePoolUnauthorized {
	return &CreateOrUpdateNodePoolUnauthorized{}
}

// WriteResponse to the client
func (o *CreateOrUpdateNodePoolUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
}

// HTTP code for type CreateOrUpdateNodePoolForbidden
const CreateOrUpdateNodePoolForbiddenCode int = 403

/*CreateOrUpdateNodePoolForbidden Forbidden

swagger:response createOrUpdateNodePoolForbidden
*/
type CreateOrUpdateNodePoolForbidden struct {
}

// NewCreateOrUpdateNodePoolForbidden creates CreateOrUpdateNodePoolForbidden with default headers values
func NewCreateOrUpdateNodePoolForbidden() *CreateOrUpdateNodePoolForbidden {
	return &CreateOrUpdateNodePoolForbidden{}
}

// WriteResponse to the client
func (o *CreateOrUpdateNodePoolForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
}

// HTTP code for type CreateOrUpdateNodePoolInternalServerError
const CreateOrUpdateNodePoolInternalServerErrorCode int = 500

/*CreateOrUpdateNodePoolInternalServerError Unexpected error

swagger:response createOrUpdateNodePoolInternalServerError
*/
type CreateOrUpdateNodePoolInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewCreateOrUpdateNodePoolInternalServerError creates CreateOrUpdateNodePoolInternalServerError with default headers values
func NewCreateOrUpdateNodePoolInternalServerError() *CreateOrUpdateNodePoolInternalServerError {
	return &CreateOrUpdateNodePoolInternalServerError{}
}

// WithPayload adds the payload to the create or update node pool internal server error response
func (o *CreateOrUpdateNodePoolInternalServerError) WithPayload(payload *models.Error) *CreateOrUpdateNodePoolInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create or update node pool internal server error response
func (o *CreateOrUpdateNodePoolInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateOrUpdateNodePoolInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
